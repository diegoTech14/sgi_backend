
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model t_imagenes
 * 
 */
export type t_imagenes = $Result.DefaultSelection<Prisma.$t_imagenesPayload>
/**
 * Model t_roles
 * 
 */
export type t_roles = $Result.DefaultSelection<Prisma.$t_rolesPayload>
/**
 * Model t_bitacora_general
 * 
 */
export type t_bitacora_general = $Result.DefaultSelection<Prisma.$t_bitacora_generalPayload>
/**
 * Model t_pantalla
 * 
 */
export type t_pantalla = $Result.DefaultSelection<Prisma.$t_pantallaPayload>
/**
 * Model t_usuarios
 * 
 */
export type t_usuarios = $Result.DefaultSelection<Prisma.$t_usuariosPayload>
/**
 * Model t_usuario_x_incidencia
 * 
 */
export type t_usuario_x_incidencia = $Result.DefaultSelection<Prisma.$t_usuario_x_incidenciaPayload>
/**
 * Model T_Pantallas
 * 
 */
export type T_Pantallas = $Result.DefaultSelection<Prisma.$T_PantallasPayload>
/**
 * Model t_bitacora_cambio_estado
 * 
 */
export type t_bitacora_cambio_estado = $Result.DefaultSelection<Prisma.$t_bitacora_cambio_estadoPayload>
/**
 * Model t_usuarios_x_rol
 * 
 */
export type t_usuarios_x_rol = $Result.DefaultSelection<Prisma.$t_usuarios_x_rolPayload>
/**
 * Model t_afectaciones
 * 
 */
export type t_afectaciones = $Result.DefaultSelection<Prisma.$t_afectacionesPayload>
/**
 * Model t_categorias
 * 
 */
export type t_categorias = $Result.DefaultSelection<Prisma.$t_categoriasPayload>
/**
 * Model t_estados
 * 
 */
export type t_estados = $Result.DefaultSelection<Prisma.$t_estadosPayload>
/**
 * Model t_riesgos
 * 
 */
export type t_riesgos = $Result.DefaultSelection<Prisma.$t_riesgosPayload>
/**
 * Model t_prioridades
 * 
 */
export type t_prioridades = $Result.DefaultSelection<Prisma.$t_prioridadesPayload>
/**
 * Model t_incidencias
 * 
 */
export type t_incidencias = $Result.DefaultSelection<Prisma.$t_incidenciasPayload>
/**
 * Model t_diagnostico
 * 
 */
export type t_diagnostico = $Result.DefaultSelection<Prisma.$t_diagnosticoPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more T_imagenes
 * const t_imagenes = await prisma.t_imagenes.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more T_imagenes
   * const t_imagenes = await prisma.t_imagenes.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.t_imagenes`: Exposes CRUD operations for the **t_imagenes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_imagenes
    * const t_imagenes = await prisma.t_imagenes.findMany()
    * ```
    */
  get t_imagenes(): Prisma.t_imagenesDelegate<ExtArgs>;

  /**
   * `prisma.t_roles`: Exposes CRUD operations for the **t_roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_roles
    * const t_roles = await prisma.t_roles.findMany()
    * ```
    */
  get t_roles(): Prisma.t_rolesDelegate<ExtArgs>;

  /**
   * `prisma.t_bitacora_general`: Exposes CRUD operations for the **t_bitacora_general** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_bitacora_generals
    * const t_bitacora_generals = await prisma.t_bitacora_general.findMany()
    * ```
    */
  get t_bitacora_general(): Prisma.t_bitacora_generalDelegate<ExtArgs>;

  /**
   * `prisma.t_pantalla`: Exposes CRUD operations for the **t_pantalla** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_pantallas
    * const t_pantallas = await prisma.t_pantalla.findMany()
    * ```
    */
  get t_pantalla(): Prisma.t_pantallaDelegate<ExtArgs>;

  /**
   * `prisma.t_usuarios`: Exposes CRUD operations for the **t_usuarios** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_usuarios
    * const t_usuarios = await prisma.t_usuarios.findMany()
    * ```
    */
  get t_usuarios(): Prisma.t_usuariosDelegate<ExtArgs>;

  /**
   * `prisma.t_usuario_x_incidencia`: Exposes CRUD operations for the **t_usuario_x_incidencia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_usuario_x_incidencias
    * const t_usuario_x_incidencias = await prisma.t_usuario_x_incidencia.findMany()
    * ```
    */
  get t_usuario_x_incidencia(): Prisma.t_usuario_x_incidenciaDelegate<ExtArgs>;

  /**
   * `prisma.t_Pantallas`: Exposes CRUD operations for the **T_Pantallas** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_Pantallas
    * const t_Pantallas = await prisma.t_Pantallas.findMany()
    * ```
    */
  get t_Pantallas(): Prisma.T_PantallasDelegate<ExtArgs>;

  /**
   * `prisma.t_bitacora_cambio_estado`: Exposes CRUD operations for the **t_bitacora_cambio_estado** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_bitacora_cambio_estados
    * const t_bitacora_cambio_estados = await prisma.t_bitacora_cambio_estado.findMany()
    * ```
    */
  get t_bitacora_cambio_estado(): Prisma.t_bitacora_cambio_estadoDelegate<ExtArgs>;

  /**
   * `prisma.t_usuarios_x_rol`: Exposes CRUD operations for the **t_usuarios_x_rol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_usuarios_x_rols
    * const t_usuarios_x_rols = await prisma.t_usuarios_x_rol.findMany()
    * ```
    */
  get t_usuarios_x_rol(): Prisma.t_usuarios_x_rolDelegate<ExtArgs>;

  /**
   * `prisma.t_afectaciones`: Exposes CRUD operations for the **t_afectaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_afectaciones
    * const t_afectaciones = await prisma.t_afectaciones.findMany()
    * ```
    */
  get t_afectaciones(): Prisma.t_afectacionesDelegate<ExtArgs>;

  /**
   * `prisma.t_categorias`: Exposes CRUD operations for the **t_categorias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_categorias
    * const t_categorias = await prisma.t_categorias.findMany()
    * ```
    */
  get t_categorias(): Prisma.t_categoriasDelegate<ExtArgs>;

  /**
   * `prisma.t_estados`: Exposes CRUD operations for the **t_estados** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_estados
    * const t_estados = await prisma.t_estados.findMany()
    * ```
    */
  get t_estados(): Prisma.t_estadosDelegate<ExtArgs>;

  /**
   * `prisma.t_riesgos`: Exposes CRUD operations for the **t_riesgos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_riesgos
    * const t_riesgos = await prisma.t_riesgos.findMany()
    * ```
    */
  get t_riesgos(): Prisma.t_riesgosDelegate<ExtArgs>;

  /**
   * `prisma.t_prioridades`: Exposes CRUD operations for the **t_prioridades** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_prioridades
    * const t_prioridades = await prisma.t_prioridades.findMany()
    * ```
    */
  get t_prioridades(): Prisma.t_prioridadesDelegate<ExtArgs>;

  /**
   * `prisma.t_incidencias`: Exposes CRUD operations for the **t_incidencias** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_incidencias
    * const t_incidencias = await prisma.t_incidencias.findMany()
    * ```
    */
  get t_incidencias(): Prisma.t_incidenciasDelegate<ExtArgs>;

  /**
   * `prisma.t_diagnostico`: Exposes CRUD operations for the **t_diagnostico** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more T_diagnosticos
    * const t_diagnosticos = await prisma.t_diagnostico.findMany()
    * ```
    */
  get t_diagnostico(): Prisma.t_diagnosticoDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.14.0
   * Query Engine version: e9771e62de70f79a5e1c604a2d7c8e2a0a874b48
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    t_imagenes: 't_imagenes',
    t_roles: 't_roles',
    t_bitacora_general: 't_bitacora_general',
    t_pantalla: 't_pantalla',
    t_usuarios: 't_usuarios',
    t_usuario_x_incidencia: 't_usuario_x_incidencia',
    T_Pantallas: 'T_Pantallas',
    t_bitacora_cambio_estado: 't_bitacora_cambio_estado',
    t_usuarios_x_rol: 't_usuarios_x_rol',
    t_afectaciones: 't_afectaciones',
    t_categorias: 't_categorias',
    t_estados: 't_estados',
    t_riesgos: 't_riesgos',
    t_prioridades: 't_prioridades',
    t_incidencias: 't_incidencias',
    t_diagnostico: 't_diagnostico'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 't_imagenes' | 't_roles' | 't_bitacora_general' | 't_pantalla' | 't_usuarios' | 't_usuario_x_incidencia' | 't_Pantallas' | 't_bitacora_cambio_estado' | 't_usuarios_x_rol' | 't_afectaciones' | 't_categorias' | 't_estados' | 't_riesgos' | 't_prioridades' | 't_incidencias' | 't_diagnostico'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      t_imagenes: {
        payload: Prisma.$t_imagenesPayload<ExtArgs>
        fields: Prisma.t_imagenesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_imagenesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_imagenesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload>
          }
          findFirst: {
            args: Prisma.t_imagenesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_imagenesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload>
          }
          findMany: {
            args: Prisma.t_imagenesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload>[]
          }
          create: {
            args: Prisma.t_imagenesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload>
          }
          createMany: {
            args: Prisma.t_imagenesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_imagenesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload>
          }
          update: {
            args: Prisma.t_imagenesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload>
          }
          deleteMany: {
            args: Prisma.t_imagenesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_imagenesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_imagenesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_imagenesPayload>
          }
          aggregate: {
            args: Prisma.T_imagenesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_imagenes>
          }
          groupBy: {
            args: Prisma.t_imagenesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_imagenesGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_imagenesCountArgs<ExtArgs>,
            result: $Utils.Optional<T_imagenesCountAggregateOutputType> | number
          }
        }
      }
      t_roles: {
        payload: Prisma.$t_rolesPayload<ExtArgs>
        fields: Prisma.t_rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_rolesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_rolesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload>
          }
          findFirst: {
            args: Prisma.t_rolesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_rolesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload>
          }
          findMany: {
            args: Prisma.t_rolesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload>[]
          }
          create: {
            args: Prisma.t_rolesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload>
          }
          createMany: {
            args: Prisma.t_rolesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_rolesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload>
          }
          update: {
            args: Prisma.t_rolesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload>
          }
          deleteMany: {
            args: Prisma.t_rolesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_rolesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_rolesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_rolesPayload>
          }
          aggregate: {
            args: Prisma.T_rolesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_roles>
          }
          groupBy: {
            args: Prisma.t_rolesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_rolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_rolesCountArgs<ExtArgs>,
            result: $Utils.Optional<T_rolesCountAggregateOutputType> | number
          }
        }
      }
      t_bitacora_general: {
        payload: Prisma.$t_bitacora_generalPayload<ExtArgs>
        fields: Prisma.t_bitacora_generalFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_bitacora_generalFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_bitacora_generalFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload>
          }
          findFirst: {
            args: Prisma.t_bitacora_generalFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_bitacora_generalFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload>
          }
          findMany: {
            args: Prisma.t_bitacora_generalFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload>[]
          }
          create: {
            args: Prisma.t_bitacora_generalCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload>
          }
          createMany: {
            args: Prisma.t_bitacora_generalCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_bitacora_generalDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload>
          }
          update: {
            args: Prisma.t_bitacora_generalUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload>
          }
          deleteMany: {
            args: Prisma.t_bitacora_generalDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_bitacora_generalUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_bitacora_generalUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_generalPayload>
          }
          aggregate: {
            args: Prisma.T_bitacora_generalAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_bitacora_general>
          }
          groupBy: {
            args: Prisma.t_bitacora_generalGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_bitacora_generalGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_bitacora_generalCountArgs<ExtArgs>,
            result: $Utils.Optional<T_bitacora_generalCountAggregateOutputType> | number
          }
        }
      }
      t_pantalla: {
        payload: Prisma.$t_pantallaPayload<ExtArgs>
        fields: Prisma.t_pantallaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_pantallaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_pantallaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload>
          }
          findFirst: {
            args: Prisma.t_pantallaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_pantallaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload>
          }
          findMany: {
            args: Prisma.t_pantallaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload>[]
          }
          create: {
            args: Prisma.t_pantallaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload>
          }
          createMany: {
            args: Prisma.t_pantallaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_pantallaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload>
          }
          update: {
            args: Prisma.t_pantallaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload>
          }
          deleteMany: {
            args: Prisma.t_pantallaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_pantallaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_pantallaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_pantallaPayload>
          }
          aggregate: {
            args: Prisma.T_pantallaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_pantalla>
          }
          groupBy: {
            args: Prisma.t_pantallaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_pantallaGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_pantallaCountArgs<ExtArgs>,
            result: $Utils.Optional<T_pantallaCountAggregateOutputType> | number
          }
        }
      }
      t_usuarios: {
        payload: Prisma.$t_usuariosPayload<ExtArgs>
        fields: Prisma.t_usuariosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_usuariosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_usuariosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload>
          }
          findFirst: {
            args: Prisma.t_usuariosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_usuariosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload>
          }
          findMany: {
            args: Prisma.t_usuariosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload>[]
          }
          create: {
            args: Prisma.t_usuariosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload>
          }
          createMany: {
            args: Prisma.t_usuariosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_usuariosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload>
          }
          update: {
            args: Prisma.t_usuariosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload>
          }
          deleteMany: {
            args: Prisma.t_usuariosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_usuariosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_usuariosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuariosPayload>
          }
          aggregate: {
            args: Prisma.T_usuariosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_usuarios>
          }
          groupBy: {
            args: Prisma.t_usuariosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_usuariosGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_usuariosCountArgs<ExtArgs>,
            result: $Utils.Optional<T_usuariosCountAggregateOutputType> | number
          }
        }
      }
      t_usuario_x_incidencia: {
        payload: Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>
        fields: Prisma.t_usuario_x_incidenciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_usuario_x_incidenciaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_usuario_x_incidenciaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload>
          }
          findFirst: {
            args: Prisma.t_usuario_x_incidenciaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_usuario_x_incidenciaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload>
          }
          findMany: {
            args: Prisma.t_usuario_x_incidenciaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload>[]
          }
          create: {
            args: Prisma.t_usuario_x_incidenciaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload>
          }
          createMany: {
            args: Prisma.t_usuario_x_incidenciaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_usuario_x_incidenciaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload>
          }
          update: {
            args: Prisma.t_usuario_x_incidenciaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload>
          }
          deleteMany: {
            args: Prisma.t_usuario_x_incidenciaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_usuario_x_incidenciaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_usuario_x_incidenciaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuario_x_incidenciaPayload>
          }
          aggregate: {
            args: Prisma.T_usuario_x_incidenciaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_usuario_x_incidencia>
          }
          groupBy: {
            args: Prisma.t_usuario_x_incidenciaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_usuario_x_incidenciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_usuario_x_incidenciaCountArgs<ExtArgs>,
            result: $Utils.Optional<T_usuario_x_incidenciaCountAggregateOutputType> | number
          }
        }
      }
      T_Pantallas: {
        payload: Prisma.$T_PantallasPayload<ExtArgs>
        fields: Prisma.T_PantallasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.T_PantallasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.T_PantallasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload>
          }
          findFirst: {
            args: Prisma.T_PantallasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.T_PantallasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload>
          }
          findMany: {
            args: Prisma.T_PantallasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload>[]
          }
          create: {
            args: Prisma.T_PantallasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload>
          }
          createMany: {
            args: Prisma.T_PantallasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.T_PantallasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload>
          }
          update: {
            args: Prisma.T_PantallasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload>
          }
          deleteMany: {
            args: Prisma.T_PantallasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.T_PantallasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.T_PantallasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$T_PantallasPayload>
          }
          aggregate: {
            args: Prisma.T_PantallasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_Pantallas>
          }
          groupBy: {
            args: Prisma.T_PantallasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_PantallasGroupByOutputType>[]
          }
          count: {
            args: Prisma.T_PantallasCountArgs<ExtArgs>,
            result: $Utils.Optional<T_PantallasCountAggregateOutputType> | number
          }
        }
      }
      t_bitacora_cambio_estado: {
        payload: Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>
        fields: Prisma.t_bitacora_cambio_estadoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_bitacora_cambio_estadoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_bitacora_cambio_estadoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload>
          }
          findFirst: {
            args: Prisma.t_bitacora_cambio_estadoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_bitacora_cambio_estadoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload>
          }
          findMany: {
            args: Prisma.t_bitacora_cambio_estadoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload>[]
          }
          create: {
            args: Prisma.t_bitacora_cambio_estadoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload>
          }
          createMany: {
            args: Prisma.t_bitacora_cambio_estadoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_bitacora_cambio_estadoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload>
          }
          update: {
            args: Prisma.t_bitacora_cambio_estadoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload>
          }
          deleteMany: {
            args: Prisma.t_bitacora_cambio_estadoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_bitacora_cambio_estadoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_bitacora_cambio_estadoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_bitacora_cambio_estadoPayload>
          }
          aggregate: {
            args: Prisma.T_bitacora_cambio_estadoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_bitacora_cambio_estado>
          }
          groupBy: {
            args: Prisma.t_bitacora_cambio_estadoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_bitacora_cambio_estadoGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_bitacora_cambio_estadoCountArgs<ExtArgs>,
            result: $Utils.Optional<T_bitacora_cambio_estadoCountAggregateOutputType> | number
          }
        }
      }
      t_usuarios_x_rol: {
        payload: Prisma.$t_usuarios_x_rolPayload<ExtArgs>
        fields: Prisma.t_usuarios_x_rolFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_usuarios_x_rolFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_usuarios_x_rolFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload>
          }
          findFirst: {
            args: Prisma.t_usuarios_x_rolFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_usuarios_x_rolFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload>
          }
          findMany: {
            args: Prisma.t_usuarios_x_rolFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload>[]
          }
          create: {
            args: Prisma.t_usuarios_x_rolCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload>
          }
          createMany: {
            args: Prisma.t_usuarios_x_rolCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_usuarios_x_rolDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload>
          }
          update: {
            args: Prisma.t_usuarios_x_rolUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload>
          }
          deleteMany: {
            args: Prisma.t_usuarios_x_rolDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_usuarios_x_rolUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_usuarios_x_rolUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_usuarios_x_rolPayload>
          }
          aggregate: {
            args: Prisma.T_usuarios_x_rolAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_usuarios_x_rol>
          }
          groupBy: {
            args: Prisma.t_usuarios_x_rolGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_usuarios_x_rolGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_usuarios_x_rolCountArgs<ExtArgs>,
            result: $Utils.Optional<T_usuarios_x_rolCountAggregateOutputType> | number
          }
        }
      }
      t_afectaciones: {
        payload: Prisma.$t_afectacionesPayload<ExtArgs>
        fields: Prisma.t_afectacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_afectacionesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_afectacionesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload>
          }
          findFirst: {
            args: Prisma.t_afectacionesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_afectacionesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload>
          }
          findMany: {
            args: Prisma.t_afectacionesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload>[]
          }
          create: {
            args: Prisma.t_afectacionesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload>
          }
          createMany: {
            args: Prisma.t_afectacionesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_afectacionesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload>
          }
          update: {
            args: Prisma.t_afectacionesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload>
          }
          deleteMany: {
            args: Prisma.t_afectacionesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_afectacionesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_afectacionesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_afectacionesPayload>
          }
          aggregate: {
            args: Prisma.T_afectacionesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_afectaciones>
          }
          groupBy: {
            args: Prisma.t_afectacionesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_afectacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_afectacionesCountArgs<ExtArgs>,
            result: $Utils.Optional<T_afectacionesCountAggregateOutputType> | number
          }
        }
      }
      t_categorias: {
        payload: Prisma.$t_categoriasPayload<ExtArgs>
        fields: Prisma.t_categoriasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_categoriasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_categoriasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload>
          }
          findFirst: {
            args: Prisma.t_categoriasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_categoriasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload>
          }
          findMany: {
            args: Prisma.t_categoriasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload>[]
          }
          create: {
            args: Prisma.t_categoriasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload>
          }
          createMany: {
            args: Prisma.t_categoriasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_categoriasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload>
          }
          update: {
            args: Prisma.t_categoriasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload>
          }
          deleteMany: {
            args: Prisma.t_categoriasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_categoriasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_categoriasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_categoriasPayload>
          }
          aggregate: {
            args: Prisma.T_categoriasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_categorias>
          }
          groupBy: {
            args: Prisma.t_categoriasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_categoriasGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_categoriasCountArgs<ExtArgs>,
            result: $Utils.Optional<T_categoriasCountAggregateOutputType> | number
          }
        }
      }
      t_estados: {
        payload: Prisma.$t_estadosPayload<ExtArgs>
        fields: Prisma.t_estadosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_estadosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_estadosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload>
          }
          findFirst: {
            args: Prisma.t_estadosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_estadosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload>
          }
          findMany: {
            args: Prisma.t_estadosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload>[]
          }
          create: {
            args: Prisma.t_estadosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload>
          }
          createMany: {
            args: Prisma.t_estadosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_estadosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload>
          }
          update: {
            args: Prisma.t_estadosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload>
          }
          deleteMany: {
            args: Prisma.t_estadosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_estadosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_estadosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_estadosPayload>
          }
          aggregate: {
            args: Prisma.T_estadosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_estados>
          }
          groupBy: {
            args: Prisma.t_estadosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_estadosGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_estadosCountArgs<ExtArgs>,
            result: $Utils.Optional<T_estadosCountAggregateOutputType> | number
          }
        }
      }
      t_riesgos: {
        payload: Prisma.$t_riesgosPayload<ExtArgs>
        fields: Prisma.t_riesgosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_riesgosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_riesgosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload>
          }
          findFirst: {
            args: Prisma.t_riesgosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_riesgosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload>
          }
          findMany: {
            args: Prisma.t_riesgosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload>[]
          }
          create: {
            args: Prisma.t_riesgosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload>
          }
          createMany: {
            args: Prisma.t_riesgosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_riesgosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload>
          }
          update: {
            args: Prisma.t_riesgosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload>
          }
          deleteMany: {
            args: Prisma.t_riesgosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_riesgosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_riesgosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_riesgosPayload>
          }
          aggregate: {
            args: Prisma.T_riesgosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_riesgos>
          }
          groupBy: {
            args: Prisma.t_riesgosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_riesgosGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_riesgosCountArgs<ExtArgs>,
            result: $Utils.Optional<T_riesgosCountAggregateOutputType> | number
          }
        }
      }
      t_prioridades: {
        payload: Prisma.$t_prioridadesPayload<ExtArgs>
        fields: Prisma.t_prioridadesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_prioridadesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_prioridadesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload>
          }
          findFirst: {
            args: Prisma.t_prioridadesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_prioridadesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload>
          }
          findMany: {
            args: Prisma.t_prioridadesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload>[]
          }
          create: {
            args: Prisma.t_prioridadesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload>
          }
          createMany: {
            args: Prisma.t_prioridadesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_prioridadesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload>
          }
          update: {
            args: Prisma.t_prioridadesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload>
          }
          deleteMany: {
            args: Prisma.t_prioridadesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_prioridadesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_prioridadesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_prioridadesPayload>
          }
          aggregate: {
            args: Prisma.T_prioridadesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_prioridades>
          }
          groupBy: {
            args: Prisma.t_prioridadesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_prioridadesGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_prioridadesCountArgs<ExtArgs>,
            result: $Utils.Optional<T_prioridadesCountAggregateOutputType> | number
          }
        }
      }
      t_incidencias: {
        payload: Prisma.$t_incidenciasPayload<ExtArgs>
        fields: Prisma.t_incidenciasFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_incidenciasFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_incidenciasFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload>
          }
          findFirst: {
            args: Prisma.t_incidenciasFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_incidenciasFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload>
          }
          findMany: {
            args: Prisma.t_incidenciasFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload>[]
          }
          create: {
            args: Prisma.t_incidenciasCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload>
          }
          createMany: {
            args: Prisma.t_incidenciasCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_incidenciasDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload>
          }
          update: {
            args: Prisma.t_incidenciasUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload>
          }
          deleteMany: {
            args: Prisma.t_incidenciasDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_incidenciasUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_incidenciasUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_incidenciasPayload>
          }
          aggregate: {
            args: Prisma.T_incidenciasAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_incidencias>
          }
          groupBy: {
            args: Prisma.t_incidenciasGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_incidenciasGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_incidenciasCountArgs<ExtArgs>,
            result: $Utils.Optional<T_incidenciasCountAggregateOutputType> | number
          }
        }
      }
      t_diagnostico: {
        payload: Prisma.$t_diagnosticoPayload<ExtArgs>
        fields: Prisma.t_diagnosticoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.t_diagnosticoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.t_diagnosticoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload>
          }
          findFirst: {
            args: Prisma.t_diagnosticoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.t_diagnosticoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload>
          }
          findMany: {
            args: Prisma.t_diagnosticoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload>[]
          }
          create: {
            args: Prisma.t_diagnosticoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload>
          }
          createMany: {
            args: Prisma.t_diagnosticoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.t_diagnosticoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload>
          }
          update: {
            args: Prisma.t_diagnosticoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload>
          }
          deleteMany: {
            args: Prisma.t_diagnosticoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.t_diagnosticoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.t_diagnosticoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$t_diagnosticoPayload>
          }
          aggregate: {
            args: Prisma.T_diagnosticoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateT_diagnostico>
          }
          groupBy: {
            args: Prisma.t_diagnosticoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<T_diagnosticoGroupByOutputType>[]
          }
          count: {
            args: Prisma.t_diagnosticoCountArgs<ExtArgs>,
            result: $Utils.Optional<T_diagnosticoCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type T_rolesCountOutputType
   */

  export type T_rolesCountOutputType = {
    usuarios: number
    t_usuarios_x_rol: number
  }

  export type T_rolesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | T_rolesCountOutputTypeCountUsuariosArgs
    t_usuarios_x_rol?: boolean | T_rolesCountOutputTypeCountT_usuarios_x_rolArgs
  }

  // Custom InputTypes
  /**
   * T_rolesCountOutputType without action
   */
  export type T_rolesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_rolesCountOutputType
     */
    select?: T_rolesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_rolesCountOutputType without action
   */
  export type T_rolesCountOutputTypeCountUsuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuariosWhereInput
  }

  /**
   * T_rolesCountOutputType without action
   */
  export type T_rolesCountOutputTypeCountT_usuarios_x_rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuarios_x_rolWhereInput
  }


  /**
   * Count Type T_pantallaCountOutputType
   */

  export type T_pantallaCountOutputType = {
    t_bitacora_general: number
  }

  export type T_pantallaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    t_bitacora_general?: boolean | T_pantallaCountOutputTypeCountT_bitacora_generalArgs
  }

  // Custom InputTypes
  /**
   * T_pantallaCountOutputType without action
   */
  export type T_pantallaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_pantallaCountOutputType
     */
    select?: T_pantallaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_pantallaCountOutputType without action
   */
  export type T_pantallaCountOutputTypeCountT_bitacora_generalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_bitacora_generalWhereInput
  }


  /**
   * Count Type T_usuariosCountOutputType
   */

  export type T_usuariosCountOutputType = {
    incidencias: number
    roles: number
    t_usuarios_x_rol: number
    diagnostico: number
    usuario: number
    t_bitacora_cambio_estado: number
    t_bitacora_general: number
  }

  export type T_usuariosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | T_usuariosCountOutputTypeCountIncidenciasArgs
    roles?: boolean | T_usuariosCountOutputTypeCountRolesArgs
    t_usuarios_x_rol?: boolean | T_usuariosCountOutputTypeCountT_usuarios_x_rolArgs
    diagnostico?: boolean | T_usuariosCountOutputTypeCountDiagnosticoArgs
    usuario?: boolean | T_usuariosCountOutputTypeCountUsuarioArgs
    t_bitacora_cambio_estado?: boolean | T_usuariosCountOutputTypeCountT_bitacora_cambio_estadoArgs
    t_bitacora_general?: boolean | T_usuariosCountOutputTypeCountT_bitacora_generalArgs
  }

  // Custom InputTypes
  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_usuariosCountOutputType
     */
    select?: T_usuariosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeCountIncidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_incidenciasWhereInput
  }

  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeCountRolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_rolesWhereInput
  }

  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeCountT_usuarios_x_rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuarios_x_rolWhereInput
  }

  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeCountDiagnosticoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_diagnosticoWhereInput
  }

  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeCountUsuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuario_x_incidenciaWhereInput
  }

  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeCountT_bitacora_cambio_estadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_bitacora_cambio_estadoWhereInput
  }

  /**
   * T_usuariosCountOutputType without action
   */
  export type T_usuariosCountOutputTypeCountT_bitacora_generalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_bitacora_generalWhereInput
  }


  /**
   * Count Type T_afectacionesCountOutputType
   */

  export type T_afectacionesCountOutputType = {
    incidencias: number
  }

  export type T_afectacionesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | T_afectacionesCountOutputTypeCountIncidenciasArgs
  }

  // Custom InputTypes
  /**
   * T_afectacionesCountOutputType without action
   */
  export type T_afectacionesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_afectacionesCountOutputType
     */
    select?: T_afectacionesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_afectacionesCountOutputType without action
   */
  export type T_afectacionesCountOutputTypeCountIncidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_incidenciasWhereInput
  }


  /**
   * Count Type T_categoriasCountOutputType
   */

  export type T_categoriasCountOutputType = {
    incidencias: number
  }

  export type T_categoriasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | T_categoriasCountOutputTypeCountIncidenciasArgs
  }

  // Custom InputTypes
  /**
   * T_categoriasCountOutputType without action
   */
  export type T_categoriasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_categoriasCountOutputType
     */
    select?: T_categoriasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_categoriasCountOutputType without action
   */
  export type T_categoriasCountOutputTypeCountIncidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_incidenciasWhereInput
  }


  /**
   * Count Type T_estadosCountOutputType
   */

  export type T_estadosCountOutputType = {
    incidencias: number
  }

  export type T_estadosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | T_estadosCountOutputTypeCountIncidenciasArgs
  }

  // Custom InputTypes
  /**
   * T_estadosCountOutputType without action
   */
  export type T_estadosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_estadosCountOutputType
     */
    select?: T_estadosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_estadosCountOutputType without action
   */
  export type T_estadosCountOutputTypeCountIncidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_incidenciasWhereInput
  }


  /**
   * Count Type T_riesgosCountOutputType
   */

  export type T_riesgosCountOutputType = {
    incidencias: number
  }

  export type T_riesgosCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | T_riesgosCountOutputTypeCountIncidenciasArgs
  }

  // Custom InputTypes
  /**
   * T_riesgosCountOutputType without action
   */
  export type T_riesgosCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_riesgosCountOutputType
     */
    select?: T_riesgosCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_riesgosCountOutputType without action
   */
  export type T_riesgosCountOutputTypeCountIncidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_incidenciasWhereInput
  }


  /**
   * Count Type T_prioridadesCountOutputType
   */

  export type T_prioridadesCountOutputType = {
    incidencias: number
  }

  export type T_prioridadesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | T_prioridadesCountOutputTypeCountIncidenciasArgs
  }

  // Custom InputTypes
  /**
   * T_prioridadesCountOutputType without action
   */
  export type T_prioridadesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_prioridadesCountOutputType
     */
    select?: T_prioridadesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_prioridadesCountOutputType without action
   */
  export type T_prioridadesCountOutputTypeCountIncidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_incidenciasWhereInput
  }


  /**
   * Count Type T_incidenciasCountOutputType
   */

  export type T_incidenciasCountOutputType = {
    imagenes: number
    diagnostico: number
    incidencia: number
    t_bitacora_cambio_estado: number
  }

  export type T_incidenciasCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imagenes?: boolean | T_incidenciasCountOutputTypeCountImagenesArgs
    diagnostico?: boolean | T_incidenciasCountOutputTypeCountDiagnosticoArgs
    incidencia?: boolean | T_incidenciasCountOutputTypeCountIncidenciaArgs
    t_bitacora_cambio_estado?: boolean | T_incidenciasCountOutputTypeCountT_bitacora_cambio_estadoArgs
  }

  // Custom InputTypes
  /**
   * T_incidenciasCountOutputType without action
   */
  export type T_incidenciasCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_incidenciasCountOutputType
     */
    select?: T_incidenciasCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_incidenciasCountOutputType without action
   */
  export type T_incidenciasCountOutputTypeCountImagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_imagenesWhereInput
  }

  /**
   * T_incidenciasCountOutputType without action
   */
  export type T_incidenciasCountOutputTypeCountDiagnosticoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_diagnosticoWhereInput
  }

  /**
   * T_incidenciasCountOutputType without action
   */
  export type T_incidenciasCountOutputTypeCountIncidenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuario_x_incidenciaWhereInput
  }

  /**
   * T_incidenciasCountOutputType without action
   */
  export type T_incidenciasCountOutputTypeCountT_bitacora_cambio_estadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_bitacora_cambio_estadoWhereInput
  }


  /**
   * Count Type T_diagnosticoCountOutputType
   */

  export type T_diagnosticoCountOutputType = {
    imagenes: number
  }

  export type T_diagnosticoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    imagenes?: boolean | T_diagnosticoCountOutputTypeCountImagenesArgs
  }

  // Custom InputTypes
  /**
   * T_diagnosticoCountOutputType without action
   */
  export type T_diagnosticoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_diagnosticoCountOutputType
     */
    select?: T_diagnosticoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * T_diagnosticoCountOutputType without action
   */
  export type T_diagnosticoCountOutputTypeCountImagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_imagenesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model t_imagenes
   */

  export type AggregateT_imagenes = {
    _count: T_imagenesCountAggregateOutputType | null
    _avg: T_imagenesAvgAggregateOutputType | null
    _sum: T_imagenesSumAggregateOutputType | null
    _min: T_imagenesMinAggregateOutputType | null
    _max: T_imagenesMaxAggregateOutputType | null
  }

  export type T_imagenesAvgAggregateOutputType = {
    idImagen: number | null
    idDiagnostico: number | null
  }

  export type T_imagenesSumAggregateOutputType = {
    idImagen: number | null
    idDiagnostico: number | null
  }

  export type T_imagenesMinAggregateOutputType = {
    idImagen: number | null
    rutaImagen: string | null
    tipoImagen: boolean | null
    idDiagnostico: number | null
    idIncidencia: string | null
  }

  export type T_imagenesMaxAggregateOutputType = {
    idImagen: number | null
    rutaImagen: string | null
    tipoImagen: boolean | null
    idDiagnostico: number | null
    idIncidencia: string | null
  }

  export type T_imagenesCountAggregateOutputType = {
    idImagen: number
    rutaImagen: number
    tipoImagen: number
    idDiagnostico: number
    idIncidencia: number
    _all: number
  }


  export type T_imagenesAvgAggregateInputType = {
    idImagen?: true
    idDiagnostico?: true
  }

  export type T_imagenesSumAggregateInputType = {
    idImagen?: true
    idDiagnostico?: true
  }

  export type T_imagenesMinAggregateInputType = {
    idImagen?: true
    rutaImagen?: true
    tipoImagen?: true
    idDiagnostico?: true
    idIncidencia?: true
  }

  export type T_imagenesMaxAggregateInputType = {
    idImagen?: true
    rutaImagen?: true
    tipoImagen?: true
    idDiagnostico?: true
    idIncidencia?: true
  }

  export type T_imagenesCountAggregateInputType = {
    idImagen?: true
    rutaImagen?: true
    tipoImagen?: true
    idDiagnostico?: true
    idIncidencia?: true
    _all?: true
  }

  export type T_imagenesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_imagenes to aggregate.
     */
    where?: t_imagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_imagenes to fetch.
     */
    orderBy?: t_imagenesOrderByWithRelationInput | t_imagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_imagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_imagenes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_imagenes
    **/
    _count?: true | T_imagenesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_imagenesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_imagenesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_imagenesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_imagenesMaxAggregateInputType
  }

  export type GetT_imagenesAggregateType<T extends T_imagenesAggregateArgs> = {
        [P in keyof T & keyof AggregateT_imagenes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_imagenes[P]>
      : GetScalarType<T[P], AggregateT_imagenes[P]>
  }




  export type t_imagenesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_imagenesWhereInput
    orderBy?: t_imagenesOrderByWithAggregationInput | t_imagenesOrderByWithAggregationInput[]
    by: T_imagenesScalarFieldEnum[] | T_imagenesScalarFieldEnum
    having?: t_imagenesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_imagenesCountAggregateInputType | true
    _avg?: T_imagenesAvgAggregateInputType
    _sum?: T_imagenesSumAggregateInputType
    _min?: T_imagenesMinAggregateInputType
    _max?: T_imagenesMaxAggregateInputType
  }

  export type T_imagenesGroupByOutputType = {
    idImagen: number
    rutaImagen: string
    tipoImagen: boolean
    idDiagnostico: number | null
    idIncidencia: string
    _count: T_imagenesCountAggregateOutputType | null
    _avg: T_imagenesAvgAggregateOutputType | null
    _sum: T_imagenesSumAggregateOutputType | null
    _min: T_imagenesMinAggregateOutputType | null
    _max: T_imagenesMaxAggregateOutputType | null
  }

  type GetT_imagenesGroupByPayload<T extends t_imagenesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_imagenesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_imagenesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_imagenesGroupByOutputType[P]>
            : GetScalarType<T[P], T_imagenesGroupByOutputType[P]>
        }
      >
    >


  export type t_imagenesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idImagen?: boolean
    rutaImagen?: boolean
    tipoImagen?: boolean
    idDiagnostico?: boolean
    idIncidencia?: boolean
    incidencia?: boolean | t_incidenciasDefaultArgs<ExtArgs>
    diagnostico?: boolean | t_imagenes$diagnosticoArgs<ExtArgs>
  }, ExtArgs["result"]["t_imagenes"]>

  export type t_imagenesSelectScalar = {
    idImagen?: boolean
    rutaImagen?: boolean
    tipoImagen?: boolean
    idDiagnostico?: boolean
    idIncidencia?: boolean
  }


  export type t_imagenesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencia?: boolean | t_incidenciasDefaultArgs<ExtArgs>
    diagnostico?: boolean | t_imagenes$diagnosticoArgs<ExtArgs>
  }


  export type $t_imagenesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_imagenes"
    objects: {
      incidencia: Prisma.$t_incidenciasPayload<ExtArgs>
      diagnostico: Prisma.$t_diagnosticoPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      idImagen: number
      rutaImagen: string
      tipoImagen: boolean
      idDiagnostico: number | null
      idIncidencia: string
    }, ExtArgs["result"]["t_imagenes"]>
    composites: {}
  }


  type t_imagenesGetPayload<S extends boolean | null | undefined | t_imagenesDefaultArgs> = $Result.GetResult<Prisma.$t_imagenesPayload, S>

  type t_imagenesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_imagenesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_imagenesCountAggregateInputType | true
    }

  export interface t_imagenesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_imagenes'], meta: { name: 't_imagenes' } }
    /**
     * Find zero or one T_imagenes that matches the filter.
     * @param {t_imagenesFindUniqueArgs} args - Arguments to find a T_imagenes
     * @example
     * // Get one T_imagenes
     * const t_imagenes = await prisma.t_imagenes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_imagenesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_imagenesFindUniqueArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_imagenes that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_imagenesFindUniqueOrThrowArgs} args - Arguments to find a T_imagenes
     * @example
     * // Get one T_imagenes
     * const t_imagenes = await prisma.t_imagenes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_imagenesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_imagenesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_imagenes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_imagenesFindFirstArgs} args - Arguments to find a T_imagenes
     * @example
     * // Get one T_imagenes
     * const t_imagenes = await prisma.t_imagenes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_imagenesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_imagenesFindFirstArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_imagenes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_imagenesFindFirstOrThrowArgs} args - Arguments to find a T_imagenes
     * @example
     * // Get one T_imagenes
     * const t_imagenes = await prisma.t_imagenes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_imagenesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_imagenesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_imagenes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_imagenesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_imagenes
     * const t_imagenes = await prisma.t_imagenes.findMany()
     * 
     * // Get first 10 T_imagenes
     * const t_imagenes = await prisma.t_imagenes.findMany({ take: 10 })
     * 
     * // Only select the `idImagen`
     * const t_imagenesWithIdImagenOnly = await prisma.t_imagenes.findMany({ select: { idImagen: true } })
     * 
    **/
    findMany<T extends t_imagenesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_imagenesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_imagenes.
     * @param {t_imagenesCreateArgs} args - Arguments to create a T_imagenes.
     * @example
     * // Create one T_imagenes
     * const T_imagenes = await prisma.t_imagenes.create({
     *   data: {
     *     // ... data to create a T_imagenes
     *   }
     * })
     * 
    **/
    create<T extends t_imagenesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_imagenesCreateArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_imagenes.
     * @param {t_imagenesCreateManyArgs} args - Arguments to create many T_imagenes.
     * @example
     * // Create many T_imagenes
     * const t_imagenes = await prisma.t_imagenes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_imagenesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_imagenesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_imagenes.
     * @param {t_imagenesDeleteArgs} args - Arguments to delete one T_imagenes.
     * @example
     * // Delete one T_imagenes
     * const T_imagenes = await prisma.t_imagenes.delete({
     *   where: {
     *     // ... filter to delete one T_imagenes
     *   }
     * })
     * 
    **/
    delete<T extends t_imagenesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_imagenesDeleteArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_imagenes.
     * @param {t_imagenesUpdateArgs} args - Arguments to update one T_imagenes.
     * @example
     * // Update one T_imagenes
     * const t_imagenes = await prisma.t_imagenes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_imagenesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_imagenesUpdateArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_imagenes.
     * @param {t_imagenesDeleteManyArgs} args - Arguments to filter T_imagenes to delete.
     * @example
     * // Delete a few T_imagenes
     * const { count } = await prisma.t_imagenes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_imagenesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_imagenesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_imagenesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_imagenes
     * const t_imagenes = await prisma.t_imagenes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_imagenesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_imagenesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_imagenes.
     * @param {t_imagenesUpsertArgs} args - Arguments to update or create a T_imagenes.
     * @example
     * // Update or create a T_imagenes
     * const t_imagenes = await prisma.t_imagenes.upsert({
     *   create: {
     *     // ... data to create a T_imagenes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_imagenes we want to update
     *   }
     * })
    **/
    upsert<T extends t_imagenesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_imagenesUpsertArgs<ExtArgs>>
    ): Prisma__t_imagenesClient<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_imagenesCountArgs} args - Arguments to filter T_imagenes to count.
     * @example
     * // Count the number of T_imagenes
     * const count = await prisma.t_imagenes.count({
     *   where: {
     *     // ... the filter for the T_imagenes we want to count
     *   }
     * })
    **/
    count<T extends t_imagenesCountArgs>(
      args?: Subset<T, t_imagenesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_imagenesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_imagenesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_imagenesAggregateArgs>(args: Subset<T, T_imagenesAggregateArgs>): Prisma.PrismaPromise<GetT_imagenesAggregateType<T>>

    /**
     * Group by T_imagenes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_imagenesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_imagenesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_imagenesGroupByArgs['orderBy'] }
        : { orderBy?: t_imagenesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_imagenesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_imagenesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_imagenes model
   */
  readonly fields: t_imagenesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_imagenes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_imagenesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencia<T extends t_incidenciasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_incidenciasDefaultArgs<ExtArgs>>): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    diagnostico<T extends t_imagenes$diagnosticoArgs<ExtArgs> = {}>(args?: Subset<T, t_imagenes$diagnosticoArgs<ExtArgs>>): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_imagenes model
   */ 
  interface t_imagenesFieldRefs {
    readonly idImagen: FieldRef<"t_imagenes", 'Int'>
    readonly rutaImagen: FieldRef<"t_imagenes", 'String'>
    readonly tipoImagen: FieldRef<"t_imagenes", 'Boolean'>
    readonly idDiagnostico: FieldRef<"t_imagenes", 'Int'>
    readonly idIncidencia: FieldRef<"t_imagenes", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_imagenes findUnique
   */
  export type t_imagenesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * Filter, which t_imagenes to fetch.
     */
    where: t_imagenesWhereUniqueInput
  }

  /**
   * t_imagenes findUniqueOrThrow
   */
  export type t_imagenesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * Filter, which t_imagenes to fetch.
     */
    where: t_imagenesWhereUniqueInput
  }

  /**
   * t_imagenes findFirst
   */
  export type t_imagenesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * Filter, which t_imagenes to fetch.
     */
    where?: t_imagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_imagenes to fetch.
     */
    orderBy?: t_imagenesOrderByWithRelationInput | t_imagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_imagenes.
     */
    cursor?: t_imagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_imagenes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_imagenes.
     */
    distinct?: T_imagenesScalarFieldEnum | T_imagenesScalarFieldEnum[]
  }

  /**
   * t_imagenes findFirstOrThrow
   */
  export type t_imagenesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * Filter, which t_imagenes to fetch.
     */
    where?: t_imagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_imagenes to fetch.
     */
    orderBy?: t_imagenesOrderByWithRelationInput | t_imagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_imagenes.
     */
    cursor?: t_imagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_imagenes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_imagenes.
     */
    distinct?: T_imagenesScalarFieldEnum | T_imagenesScalarFieldEnum[]
  }

  /**
   * t_imagenes findMany
   */
  export type t_imagenesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * Filter, which t_imagenes to fetch.
     */
    where?: t_imagenesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_imagenes to fetch.
     */
    orderBy?: t_imagenesOrderByWithRelationInput | t_imagenesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_imagenes.
     */
    cursor?: t_imagenesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_imagenes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_imagenes.
     */
    skip?: number
    distinct?: T_imagenesScalarFieldEnum | T_imagenesScalarFieldEnum[]
  }

  /**
   * t_imagenes create
   */
  export type t_imagenesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * The data needed to create a t_imagenes.
     */
    data: XOR<t_imagenesCreateInput, t_imagenesUncheckedCreateInput>
  }

  /**
   * t_imagenes createMany
   */
  export type t_imagenesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_imagenes.
     */
    data: t_imagenesCreateManyInput | t_imagenesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_imagenes update
   */
  export type t_imagenesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * The data needed to update a t_imagenes.
     */
    data: XOR<t_imagenesUpdateInput, t_imagenesUncheckedUpdateInput>
    /**
     * Choose, which t_imagenes to update.
     */
    where: t_imagenesWhereUniqueInput
  }

  /**
   * t_imagenes updateMany
   */
  export type t_imagenesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_imagenes.
     */
    data: XOR<t_imagenesUpdateManyMutationInput, t_imagenesUncheckedUpdateManyInput>
    /**
     * Filter which t_imagenes to update
     */
    where?: t_imagenesWhereInput
  }

  /**
   * t_imagenes upsert
   */
  export type t_imagenesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * The filter to search for the t_imagenes to update in case it exists.
     */
    where: t_imagenesWhereUniqueInput
    /**
     * In case the t_imagenes found by the `where` argument doesn't exist, create a new t_imagenes with this data.
     */
    create: XOR<t_imagenesCreateInput, t_imagenesUncheckedCreateInput>
    /**
     * In case the t_imagenes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_imagenesUpdateInput, t_imagenesUncheckedUpdateInput>
  }

  /**
   * t_imagenes delete
   */
  export type t_imagenesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    /**
     * Filter which t_imagenes to delete.
     */
    where: t_imagenesWhereUniqueInput
  }

  /**
   * t_imagenes deleteMany
   */
  export type t_imagenesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_imagenes to delete
     */
    where?: t_imagenesWhereInput
  }

  /**
   * t_imagenes.diagnostico
   */
  export type t_imagenes$diagnosticoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    where?: t_diagnosticoWhereInput
  }

  /**
   * t_imagenes without action
   */
  export type t_imagenesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
  }


  /**
   * Model t_roles
   */

  export type AggregateT_roles = {
    _count: T_rolesCountAggregateOutputType | null
    _avg: T_rolesAvgAggregateOutputType | null
    _sum: T_rolesSumAggregateOutputType | null
    _min: T_rolesMinAggregateOutputType | null
    _max: T_rolesMaxAggregateOutputType | null
  }

  export type T_rolesAvgAggregateOutputType = {
    idRol: number | null
  }

  export type T_rolesSumAggregateOutputType = {
    idRol: number | null
  }

  export type T_rolesMinAggregateOutputType = {
    idRol: number | null
    descripcion: string | null
    sistema: string | null
    estado: boolean | null
  }

  export type T_rolesMaxAggregateOutputType = {
    idRol: number | null
    descripcion: string | null
    sistema: string | null
    estado: boolean | null
  }

  export type T_rolesCountAggregateOutputType = {
    idRol: number
    descripcion: number
    sistema: number
    estado: number
    _all: number
  }


  export type T_rolesAvgAggregateInputType = {
    idRol?: true
  }

  export type T_rolesSumAggregateInputType = {
    idRol?: true
  }

  export type T_rolesMinAggregateInputType = {
    idRol?: true
    descripcion?: true
    sistema?: true
    estado?: true
  }

  export type T_rolesMaxAggregateInputType = {
    idRol?: true
    descripcion?: true
    sistema?: true
    estado?: true
  }

  export type T_rolesCountAggregateInputType = {
    idRol?: true
    descripcion?: true
    sistema?: true
    estado?: true
    _all?: true
  }

  export type T_rolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_roles to aggregate.
     */
    where?: t_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_roles to fetch.
     */
    orderBy?: t_rolesOrderByWithRelationInput | t_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_roles
    **/
    _count?: true | T_rolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_rolesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_rolesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_rolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_rolesMaxAggregateInputType
  }

  export type GetT_rolesAggregateType<T extends T_rolesAggregateArgs> = {
        [P in keyof T & keyof AggregateT_roles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_roles[P]>
      : GetScalarType<T[P], AggregateT_roles[P]>
  }




  export type t_rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_rolesWhereInput
    orderBy?: t_rolesOrderByWithAggregationInput | t_rolesOrderByWithAggregationInput[]
    by: T_rolesScalarFieldEnum[] | T_rolesScalarFieldEnum
    having?: t_rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_rolesCountAggregateInputType | true
    _avg?: T_rolesAvgAggregateInputType
    _sum?: T_rolesSumAggregateInputType
    _min?: T_rolesMinAggregateInputType
    _max?: T_rolesMaxAggregateInputType
  }

  export type T_rolesGroupByOutputType = {
    idRol: number
    descripcion: string
    sistema: string
    estado: boolean
    _count: T_rolesCountAggregateOutputType | null
    _avg: T_rolesAvgAggregateOutputType | null
    _sum: T_rolesSumAggregateOutputType | null
    _min: T_rolesMinAggregateOutputType | null
    _max: T_rolesMaxAggregateOutputType | null
  }

  type GetT_rolesGroupByPayload<T extends t_rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_rolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_rolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_rolesGroupByOutputType[P]>
            : GetScalarType<T[P], T_rolesGroupByOutputType[P]>
        }
      >
    >


  export type t_rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    idRol?: boolean
    descripcion?: boolean
    sistema?: boolean
    estado?: boolean
    usuarios?: boolean | t_roles$usuariosArgs<ExtArgs>
    t_usuarios_x_rol?: boolean | t_roles$t_usuarios_x_rolArgs<ExtArgs>
    _count?: boolean | T_rolesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_roles"]>

  export type t_rolesSelectScalar = {
    idRol?: boolean
    descripcion?: boolean
    sistema?: boolean
    estado?: boolean
  }


  export type t_rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | t_roles$usuariosArgs<ExtArgs>
    t_usuarios_x_rol?: boolean | t_roles$t_usuarios_x_rolArgs<ExtArgs>
    _count?: boolean | T_rolesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_roles"
    objects: {
      usuarios: Prisma.$t_usuariosPayload<ExtArgs>[]
      t_usuarios_x_rol: Prisma.$t_usuarios_x_rolPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      idRol: number
      descripcion: string
      sistema: string
      estado: boolean
    }, ExtArgs["result"]["t_roles"]>
    composites: {}
  }


  type t_rolesGetPayload<S extends boolean | null | undefined | t_rolesDefaultArgs> = $Result.GetResult<Prisma.$t_rolesPayload, S>

  type t_rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_rolesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_rolesCountAggregateInputType | true
    }

  export interface t_rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_roles'], meta: { name: 't_roles' } }
    /**
     * Find zero or one T_roles that matches the filter.
     * @param {t_rolesFindUniqueArgs} args - Arguments to find a T_roles
     * @example
     * // Get one T_roles
     * const t_roles = await prisma.t_roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_rolesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_rolesFindUniqueArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_roles that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_rolesFindUniqueOrThrowArgs} args - Arguments to find a T_roles
     * @example
     * // Get one T_roles
     * const t_roles = await prisma.t_roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_rolesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_rolesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_rolesFindFirstArgs} args - Arguments to find a T_roles
     * @example
     * // Get one T_roles
     * const t_roles = await prisma.t_roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_rolesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_rolesFindFirstArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_rolesFindFirstOrThrowArgs} args - Arguments to find a T_roles
     * @example
     * // Get one T_roles
     * const t_roles = await prisma.t_roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_rolesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_rolesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_roles
     * const t_roles = await prisma.t_roles.findMany()
     * 
     * // Get first 10 T_roles
     * const t_roles = await prisma.t_roles.findMany({ take: 10 })
     * 
     * // Only select the `idRol`
     * const t_rolesWithIdRolOnly = await prisma.t_roles.findMany({ select: { idRol: true } })
     * 
    **/
    findMany<T extends t_rolesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_rolesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_roles.
     * @param {t_rolesCreateArgs} args - Arguments to create a T_roles.
     * @example
     * // Create one T_roles
     * const T_roles = await prisma.t_roles.create({
     *   data: {
     *     // ... data to create a T_roles
     *   }
     * })
     * 
    **/
    create<T extends t_rolesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_rolesCreateArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_roles.
     * @param {t_rolesCreateManyArgs} args - Arguments to create many T_roles.
     * @example
     * // Create many T_roles
     * const t_roles = await prisma.t_roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_rolesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_rolesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_roles.
     * @param {t_rolesDeleteArgs} args - Arguments to delete one T_roles.
     * @example
     * // Delete one T_roles
     * const T_roles = await prisma.t_roles.delete({
     *   where: {
     *     // ... filter to delete one T_roles
     *   }
     * })
     * 
    **/
    delete<T extends t_rolesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_rolesDeleteArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_roles.
     * @param {t_rolesUpdateArgs} args - Arguments to update one T_roles.
     * @example
     * // Update one T_roles
     * const t_roles = await prisma.t_roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_rolesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_rolesUpdateArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_roles.
     * @param {t_rolesDeleteManyArgs} args - Arguments to filter T_roles to delete.
     * @example
     * // Delete a few T_roles
     * const { count } = await prisma.t_roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_rolesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_rolesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_roles
     * const t_roles = await prisma.t_roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_rolesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_rolesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_roles.
     * @param {t_rolesUpsertArgs} args - Arguments to update or create a T_roles.
     * @example
     * // Update or create a T_roles
     * const t_roles = await prisma.t_roles.upsert({
     *   create: {
     *     // ... data to create a T_roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_roles we want to update
     *   }
     * })
    **/
    upsert<T extends t_rolesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_rolesUpsertArgs<ExtArgs>>
    ): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_rolesCountArgs} args - Arguments to filter T_roles to count.
     * @example
     * // Count the number of T_roles
     * const count = await prisma.t_roles.count({
     *   where: {
     *     // ... the filter for the T_roles we want to count
     *   }
     * })
    **/
    count<T extends t_rolesCountArgs>(
      args?: Subset<T, t_rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_rolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_rolesAggregateArgs>(args: Subset<T, T_rolesAggregateArgs>): Prisma.PrismaPromise<GetT_rolesAggregateType<T>>

    /**
     * Group by T_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_rolesGroupByArgs['orderBy'] }
        : { orderBy?: t_rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_roles model
   */
  readonly fields: t_rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuarios<T extends t_roles$usuariosArgs<ExtArgs> = {}>(args?: Subset<T, t_roles$usuariosArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findMany'> | Null>;

    t_usuarios_x_rol<T extends t_roles$t_usuarios_x_rolArgs<ExtArgs> = {}>(args?: Subset<T, t_roles$t_usuarios_x_rolArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_roles model
   */ 
  interface t_rolesFieldRefs {
    readonly idRol: FieldRef<"t_roles", 'Int'>
    readonly descripcion: FieldRef<"t_roles", 'String'>
    readonly sistema: FieldRef<"t_roles", 'String'>
    readonly estado: FieldRef<"t_roles", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * t_roles findUnique
   */
  export type t_rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * Filter, which t_roles to fetch.
     */
    where: t_rolesWhereUniqueInput
  }

  /**
   * t_roles findUniqueOrThrow
   */
  export type t_rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * Filter, which t_roles to fetch.
     */
    where: t_rolesWhereUniqueInput
  }

  /**
   * t_roles findFirst
   */
  export type t_rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * Filter, which t_roles to fetch.
     */
    where?: t_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_roles to fetch.
     */
    orderBy?: t_rolesOrderByWithRelationInput | t_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_roles.
     */
    cursor?: t_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_roles.
     */
    distinct?: T_rolesScalarFieldEnum | T_rolesScalarFieldEnum[]
  }

  /**
   * t_roles findFirstOrThrow
   */
  export type t_rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * Filter, which t_roles to fetch.
     */
    where?: t_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_roles to fetch.
     */
    orderBy?: t_rolesOrderByWithRelationInput | t_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_roles.
     */
    cursor?: t_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_roles.
     */
    distinct?: T_rolesScalarFieldEnum | T_rolesScalarFieldEnum[]
  }

  /**
   * t_roles findMany
   */
  export type t_rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * Filter, which t_roles to fetch.
     */
    where?: t_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_roles to fetch.
     */
    orderBy?: t_rolesOrderByWithRelationInput | t_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_roles.
     */
    cursor?: t_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_roles.
     */
    skip?: number
    distinct?: T_rolesScalarFieldEnum | T_rolesScalarFieldEnum[]
  }

  /**
   * t_roles create
   */
  export type t_rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a t_roles.
     */
    data: XOR<t_rolesCreateInput, t_rolesUncheckedCreateInput>
  }

  /**
   * t_roles createMany
   */
  export type t_rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_roles.
     */
    data: t_rolesCreateManyInput | t_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_roles update
   */
  export type t_rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a t_roles.
     */
    data: XOR<t_rolesUpdateInput, t_rolesUncheckedUpdateInput>
    /**
     * Choose, which t_roles to update.
     */
    where: t_rolesWhereUniqueInput
  }

  /**
   * t_roles updateMany
   */
  export type t_rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_roles.
     */
    data: XOR<t_rolesUpdateManyMutationInput, t_rolesUncheckedUpdateManyInput>
    /**
     * Filter which t_roles to update
     */
    where?: t_rolesWhereInput
  }

  /**
   * t_roles upsert
   */
  export type t_rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the t_roles to update in case it exists.
     */
    where: t_rolesWhereUniqueInput
    /**
     * In case the t_roles found by the `where` argument doesn't exist, create a new t_roles with this data.
     */
    create: XOR<t_rolesCreateInput, t_rolesUncheckedCreateInput>
    /**
     * In case the t_roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_rolesUpdateInput, t_rolesUncheckedUpdateInput>
  }

  /**
   * t_roles delete
   */
  export type t_rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    /**
     * Filter which t_roles to delete.
     */
    where: t_rolesWhereUniqueInput
  }

  /**
   * t_roles deleteMany
   */
  export type t_rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_roles to delete
     */
    where?: t_rolesWhereInput
  }

  /**
   * t_roles.usuarios
   */
  export type t_roles$usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    where?: t_usuariosWhereInput
    orderBy?: t_usuariosOrderByWithRelationInput | t_usuariosOrderByWithRelationInput[]
    cursor?: t_usuariosWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_usuariosScalarFieldEnum | T_usuariosScalarFieldEnum[]
  }

  /**
   * t_roles.t_usuarios_x_rol
   */
  export type t_roles$t_usuarios_x_rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    where?: t_usuarios_x_rolWhereInput
    orderBy?: t_usuarios_x_rolOrderByWithRelationInput | t_usuarios_x_rolOrderByWithRelationInput[]
    cursor?: t_usuarios_x_rolWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_usuarios_x_rolScalarFieldEnum | T_usuarios_x_rolScalarFieldEnum[]
  }

  /**
   * t_roles without action
   */
  export type t_rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
  }


  /**
   * Model t_bitacora_general
   */

  export type AggregateT_bitacora_general = {
    _count: T_bitacora_generalCountAggregateOutputType | null
    _avg: T_bitacora_generalAvgAggregateOutputType | null
    _sum: T_bitacora_generalSumAggregateOutputType | null
    _min: T_bitacora_generalMinAggregateOutputType | null
    _max: T_bitacora_generalMaxAggregateOutputType | null
  }

  export type T_bitacora_generalAvgAggregateOutputType = {
    codigoBitacora: number | null
    idPantalla: number | null
  }

  export type T_bitacora_generalSumAggregateOutputType = {
    codigoBitacora: number | null
    idPantalla: number | null
  }

  export type T_bitacora_generalMinAggregateOutputType = {
    codigoBitacora: number | null
    sistema: string | null
    referencia: string | null
    idUsuario: string | null
    idPantalla: number | null
  }

  export type T_bitacora_generalMaxAggregateOutputType = {
    codigoBitacora: number | null
    sistema: string | null
    referencia: string | null
    idUsuario: string | null
    idPantalla: number | null
  }

  export type T_bitacora_generalCountAggregateOutputType = {
    codigoBitacora: number
    sistema: number
    referencia: number
    idUsuario: number
    idPantalla: number
    _all: number
  }


  export type T_bitacora_generalAvgAggregateInputType = {
    codigoBitacora?: true
    idPantalla?: true
  }

  export type T_bitacora_generalSumAggregateInputType = {
    codigoBitacora?: true
    idPantalla?: true
  }

  export type T_bitacora_generalMinAggregateInputType = {
    codigoBitacora?: true
    sistema?: true
    referencia?: true
    idUsuario?: true
    idPantalla?: true
  }

  export type T_bitacora_generalMaxAggregateInputType = {
    codigoBitacora?: true
    sistema?: true
    referencia?: true
    idUsuario?: true
    idPantalla?: true
  }

  export type T_bitacora_generalCountAggregateInputType = {
    codigoBitacora?: true
    sistema?: true
    referencia?: true
    idUsuario?: true
    idPantalla?: true
    _all?: true
  }

  export type T_bitacora_generalAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_bitacora_general to aggregate.
     */
    where?: t_bitacora_generalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_generals to fetch.
     */
    orderBy?: t_bitacora_generalOrderByWithRelationInput | t_bitacora_generalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_bitacora_generalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_generals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_generals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_bitacora_generals
    **/
    _count?: true | T_bitacora_generalCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_bitacora_generalAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_bitacora_generalSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_bitacora_generalMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_bitacora_generalMaxAggregateInputType
  }

  export type GetT_bitacora_generalAggregateType<T extends T_bitacora_generalAggregateArgs> = {
        [P in keyof T & keyof AggregateT_bitacora_general]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_bitacora_general[P]>
      : GetScalarType<T[P], AggregateT_bitacora_general[P]>
  }




  export type t_bitacora_generalGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_bitacora_generalWhereInput
    orderBy?: t_bitacora_generalOrderByWithAggregationInput | t_bitacora_generalOrderByWithAggregationInput[]
    by: T_bitacora_generalScalarFieldEnum[] | T_bitacora_generalScalarFieldEnum
    having?: t_bitacora_generalScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_bitacora_generalCountAggregateInputType | true
    _avg?: T_bitacora_generalAvgAggregateInputType
    _sum?: T_bitacora_generalSumAggregateInputType
    _min?: T_bitacora_generalMinAggregateInputType
    _max?: T_bitacora_generalMaxAggregateInputType
  }

  export type T_bitacora_generalGroupByOutputType = {
    codigoBitacora: number
    sistema: string
    referencia: string
    idUsuario: string
    idPantalla: number
    _count: T_bitacora_generalCountAggregateOutputType | null
    _avg: T_bitacora_generalAvgAggregateOutputType | null
    _sum: T_bitacora_generalSumAggregateOutputType | null
    _min: T_bitacora_generalMinAggregateOutputType | null
    _max: T_bitacora_generalMaxAggregateOutputType | null
  }

  type GetT_bitacora_generalGroupByPayload<T extends t_bitacora_generalGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_bitacora_generalGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_bitacora_generalGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_bitacora_generalGroupByOutputType[P]>
            : GetScalarType<T[P], T_bitacora_generalGroupByOutputType[P]>
        }
      >
    >


  export type t_bitacora_generalSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoBitacora?: boolean
    sistema?: boolean
    referencia?: boolean
    idUsuario?: boolean
    idPantalla?: boolean
    Usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    Pantalla?: boolean | t_pantallaDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_bitacora_general"]>

  export type t_bitacora_generalSelectScalar = {
    codigoBitacora?: boolean
    sistema?: boolean
    referencia?: boolean
    idUsuario?: boolean
    idPantalla?: boolean
  }


  export type t_bitacora_generalInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    Pantalla?: boolean | t_pantallaDefaultArgs<ExtArgs>
  }


  export type $t_bitacora_generalPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_bitacora_general"
    objects: {
      Usuario: Prisma.$t_usuariosPayload<ExtArgs>
      Pantalla: Prisma.$t_pantallaPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      codigoBitacora: number
      sistema: string
      referencia: string
      idUsuario: string
      idPantalla: number
    }, ExtArgs["result"]["t_bitacora_general"]>
    composites: {}
  }


  type t_bitacora_generalGetPayload<S extends boolean | null | undefined | t_bitacora_generalDefaultArgs> = $Result.GetResult<Prisma.$t_bitacora_generalPayload, S>

  type t_bitacora_generalCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_bitacora_generalFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_bitacora_generalCountAggregateInputType | true
    }

  export interface t_bitacora_generalDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_bitacora_general'], meta: { name: 't_bitacora_general' } }
    /**
     * Find zero or one T_bitacora_general that matches the filter.
     * @param {t_bitacora_generalFindUniqueArgs} args - Arguments to find a T_bitacora_general
     * @example
     * // Get one T_bitacora_general
     * const t_bitacora_general = await prisma.t_bitacora_general.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_bitacora_generalFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_generalFindUniqueArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_bitacora_general that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_bitacora_generalFindUniqueOrThrowArgs} args - Arguments to find a T_bitacora_general
     * @example
     * // Get one T_bitacora_general
     * const t_bitacora_general = await prisma.t_bitacora_general.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_bitacora_generalFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_generalFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_bitacora_general that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_generalFindFirstArgs} args - Arguments to find a T_bitacora_general
     * @example
     * // Get one T_bitacora_general
     * const t_bitacora_general = await prisma.t_bitacora_general.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_bitacora_generalFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_generalFindFirstArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_bitacora_general that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_generalFindFirstOrThrowArgs} args - Arguments to find a T_bitacora_general
     * @example
     * // Get one T_bitacora_general
     * const t_bitacora_general = await prisma.t_bitacora_general.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_bitacora_generalFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_generalFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_bitacora_generals that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_generalFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_bitacora_generals
     * const t_bitacora_generals = await prisma.t_bitacora_general.findMany()
     * 
     * // Get first 10 T_bitacora_generals
     * const t_bitacora_generals = await prisma.t_bitacora_general.findMany({ take: 10 })
     * 
     * // Only select the `codigoBitacora`
     * const t_bitacora_generalWithCodigoBitacoraOnly = await prisma.t_bitacora_general.findMany({ select: { codigoBitacora: true } })
     * 
    **/
    findMany<T extends t_bitacora_generalFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_generalFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_bitacora_general.
     * @param {t_bitacora_generalCreateArgs} args - Arguments to create a T_bitacora_general.
     * @example
     * // Create one T_bitacora_general
     * const T_bitacora_general = await prisma.t_bitacora_general.create({
     *   data: {
     *     // ... data to create a T_bitacora_general
     *   }
     * })
     * 
    **/
    create<T extends t_bitacora_generalCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_generalCreateArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_bitacora_generals.
     * @param {t_bitacora_generalCreateManyArgs} args - Arguments to create many T_bitacora_generals.
     * @example
     * // Create many T_bitacora_generals
     * const t_bitacora_general = await prisma.t_bitacora_general.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_bitacora_generalCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_generalCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_bitacora_general.
     * @param {t_bitacora_generalDeleteArgs} args - Arguments to delete one T_bitacora_general.
     * @example
     * // Delete one T_bitacora_general
     * const T_bitacora_general = await prisma.t_bitacora_general.delete({
     *   where: {
     *     // ... filter to delete one T_bitacora_general
     *   }
     * })
     * 
    **/
    delete<T extends t_bitacora_generalDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_generalDeleteArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_bitacora_general.
     * @param {t_bitacora_generalUpdateArgs} args - Arguments to update one T_bitacora_general.
     * @example
     * // Update one T_bitacora_general
     * const t_bitacora_general = await prisma.t_bitacora_general.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_bitacora_generalUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_generalUpdateArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_bitacora_generals.
     * @param {t_bitacora_generalDeleteManyArgs} args - Arguments to filter T_bitacora_generals to delete.
     * @example
     * // Delete a few T_bitacora_generals
     * const { count } = await prisma.t_bitacora_general.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_bitacora_generalDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_generalDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_bitacora_generals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_generalUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_bitacora_generals
     * const t_bitacora_general = await prisma.t_bitacora_general.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_bitacora_generalUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_generalUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_bitacora_general.
     * @param {t_bitacora_generalUpsertArgs} args - Arguments to update or create a T_bitacora_general.
     * @example
     * // Update or create a T_bitacora_general
     * const t_bitacora_general = await prisma.t_bitacora_general.upsert({
     *   create: {
     *     // ... data to create a T_bitacora_general
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_bitacora_general we want to update
     *   }
     * })
    **/
    upsert<T extends t_bitacora_generalUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_generalUpsertArgs<ExtArgs>>
    ): Prisma__t_bitacora_generalClient<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_bitacora_generals.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_generalCountArgs} args - Arguments to filter T_bitacora_generals to count.
     * @example
     * // Count the number of T_bitacora_generals
     * const count = await prisma.t_bitacora_general.count({
     *   where: {
     *     // ... the filter for the T_bitacora_generals we want to count
     *   }
     * })
    **/
    count<T extends t_bitacora_generalCountArgs>(
      args?: Subset<T, t_bitacora_generalCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_bitacora_generalCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_bitacora_general.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_bitacora_generalAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_bitacora_generalAggregateArgs>(args: Subset<T, T_bitacora_generalAggregateArgs>): Prisma.PrismaPromise<GetT_bitacora_generalAggregateType<T>>

    /**
     * Group by T_bitacora_general.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_generalGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_bitacora_generalGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_bitacora_generalGroupByArgs['orderBy'] }
        : { orderBy?: t_bitacora_generalGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_bitacora_generalGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_bitacora_generalGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_bitacora_general model
   */
  readonly fields: t_bitacora_generalFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_bitacora_general.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_bitacora_generalClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Usuario<T extends t_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_usuariosDefaultArgs<ExtArgs>>): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Pantalla<T extends t_pantallaDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_pantallaDefaultArgs<ExtArgs>>): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_bitacora_general model
   */ 
  interface t_bitacora_generalFieldRefs {
    readonly codigoBitacora: FieldRef<"t_bitacora_general", 'Int'>
    readonly sistema: FieldRef<"t_bitacora_general", 'String'>
    readonly referencia: FieldRef<"t_bitacora_general", 'String'>
    readonly idUsuario: FieldRef<"t_bitacora_general", 'String'>
    readonly idPantalla: FieldRef<"t_bitacora_general", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * t_bitacora_general findUnique
   */
  export type t_bitacora_generalFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_general to fetch.
     */
    where: t_bitacora_generalWhereUniqueInput
  }

  /**
   * t_bitacora_general findUniqueOrThrow
   */
  export type t_bitacora_generalFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_general to fetch.
     */
    where: t_bitacora_generalWhereUniqueInput
  }

  /**
   * t_bitacora_general findFirst
   */
  export type t_bitacora_generalFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_general to fetch.
     */
    where?: t_bitacora_generalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_generals to fetch.
     */
    orderBy?: t_bitacora_generalOrderByWithRelationInput | t_bitacora_generalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_bitacora_generals.
     */
    cursor?: t_bitacora_generalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_generals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_generals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_bitacora_generals.
     */
    distinct?: T_bitacora_generalScalarFieldEnum | T_bitacora_generalScalarFieldEnum[]
  }

  /**
   * t_bitacora_general findFirstOrThrow
   */
  export type t_bitacora_generalFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_general to fetch.
     */
    where?: t_bitacora_generalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_generals to fetch.
     */
    orderBy?: t_bitacora_generalOrderByWithRelationInput | t_bitacora_generalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_bitacora_generals.
     */
    cursor?: t_bitacora_generalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_generals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_generals.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_bitacora_generals.
     */
    distinct?: T_bitacora_generalScalarFieldEnum | T_bitacora_generalScalarFieldEnum[]
  }

  /**
   * t_bitacora_general findMany
   */
  export type t_bitacora_generalFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_generals to fetch.
     */
    where?: t_bitacora_generalWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_generals to fetch.
     */
    orderBy?: t_bitacora_generalOrderByWithRelationInput | t_bitacora_generalOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_bitacora_generals.
     */
    cursor?: t_bitacora_generalWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_generals from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_generals.
     */
    skip?: number
    distinct?: T_bitacora_generalScalarFieldEnum | T_bitacora_generalScalarFieldEnum[]
  }

  /**
   * t_bitacora_general create
   */
  export type t_bitacora_generalCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * The data needed to create a t_bitacora_general.
     */
    data: XOR<t_bitacora_generalCreateInput, t_bitacora_generalUncheckedCreateInput>
  }

  /**
   * t_bitacora_general createMany
   */
  export type t_bitacora_generalCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_bitacora_generals.
     */
    data: t_bitacora_generalCreateManyInput | t_bitacora_generalCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_bitacora_general update
   */
  export type t_bitacora_generalUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * The data needed to update a t_bitacora_general.
     */
    data: XOR<t_bitacora_generalUpdateInput, t_bitacora_generalUncheckedUpdateInput>
    /**
     * Choose, which t_bitacora_general to update.
     */
    where: t_bitacora_generalWhereUniqueInput
  }

  /**
   * t_bitacora_general updateMany
   */
  export type t_bitacora_generalUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_bitacora_generals.
     */
    data: XOR<t_bitacora_generalUpdateManyMutationInput, t_bitacora_generalUncheckedUpdateManyInput>
    /**
     * Filter which t_bitacora_generals to update
     */
    where?: t_bitacora_generalWhereInput
  }

  /**
   * t_bitacora_general upsert
   */
  export type t_bitacora_generalUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * The filter to search for the t_bitacora_general to update in case it exists.
     */
    where: t_bitacora_generalWhereUniqueInput
    /**
     * In case the t_bitacora_general found by the `where` argument doesn't exist, create a new t_bitacora_general with this data.
     */
    create: XOR<t_bitacora_generalCreateInput, t_bitacora_generalUncheckedCreateInput>
    /**
     * In case the t_bitacora_general was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_bitacora_generalUpdateInput, t_bitacora_generalUncheckedUpdateInput>
  }

  /**
   * t_bitacora_general delete
   */
  export type t_bitacora_generalDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    /**
     * Filter which t_bitacora_general to delete.
     */
    where: t_bitacora_generalWhereUniqueInput
  }

  /**
   * t_bitacora_general deleteMany
   */
  export type t_bitacora_generalDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_bitacora_generals to delete
     */
    where?: t_bitacora_generalWhereInput
  }

  /**
   * t_bitacora_general without action
   */
  export type t_bitacora_generalDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
  }


  /**
   * Model t_pantalla
   */

  export type AggregateT_pantalla = {
    _count: T_pantallaCountAggregateOutputType | null
    _avg: T_pantallaAvgAggregateOutputType | null
    _sum: T_pantallaSumAggregateOutputType | null
    _min: T_pantallaMinAggregateOutputType | null
    _max: T_pantallaMaxAggregateOutputType | null
  }

  export type T_pantallaAvgAggregateOutputType = {
    codigoPantalla: number | null
  }

  export type T_pantallaSumAggregateOutputType = {
    codigoPantalla: number | null
  }

  export type T_pantallaMinAggregateOutputType = {
    codigoPantalla: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type T_pantallaMaxAggregateOutputType = {
    codigoPantalla: number | null
    nombre: string | null
    descripcion: string | null
  }

  export type T_pantallaCountAggregateOutputType = {
    codigoPantalla: number
    nombre: number
    descripcion: number
    _all: number
  }


  export type T_pantallaAvgAggregateInputType = {
    codigoPantalla?: true
  }

  export type T_pantallaSumAggregateInputType = {
    codigoPantalla?: true
  }

  export type T_pantallaMinAggregateInputType = {
    codigoPantalla?: true
    nombre?: true
    descripcion?: true
  }

  export type T_pantallaMaxAggregateInputType = {
    codigoPantalla?: true
    nombre?: true
    descripcion?: true
  }

  export type T_pantallaCountAggregateInputType = {
    codigoPantalla?: true
    nombre?: true
    descripcion?: true
    _all?: true
  }

  export type T_pantallaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_pantalla to aggregate.
     */
    where?: t_pantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_pantallas to fetch.
     */
    orderBy?: t_pantallaOrderByWithRelationInput | t_pantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_pantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_pantallas
    **/
    _count?: true | T_pantallaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_pantallaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_pantallaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_pantallaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_pantallaMaxAggregateInputType
  }

  export type GetT_pantallaAggregateType<T extends T_pantallaAggregateArgs> = {
        [P in keyof T & keyof AggregateT_pantalla]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_pantalla[P]>
      : GetScalarType<T[P], AggregateT_pantalla[P]>
  }




  export type t_pantallaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_pantallaWhereInput
    orderBy?: t_pantallaOrderByWithAggregationInput | t_pantallaOrderByWithAggregationInput[]
    by: T_pantallaScalarFieldEnum[] | T_pantallaScalarFieldEnum
    having?: t_pantallaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_pantallaCountAggregateInputType | true
    _avg?: T_pantallaAvgAggregateInputType
    _sum?: T_pantallaSumAggregateInputType
    _min?: T_pantallaMinAggregateInputType
    _max?: T_pantallaMaxAggregateInputType
  }

  export type T_pantallaGroupByOutputType = {
    codigoPantalla: number
    nombre: string
    descripcion: string
    _count: T_pantallaCountAggregateOutputType | null
    _avg: T_pantallaAvgAggregateOutputType | null
    _sum: T_pantallaSumAggregateOutputType | null
    _min: T_pantallaMinAggregateOutputType | null
    _max: T_pantallaMaxAggregateOutputType | null
  }

  type GetT_pantallaGroupByPayload<T extends t_pantallaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_pantallaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_pantallaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_pantallaGroupByOutputType[P]>
            : GetScalarType<T[P], T_pantallaGroupByOutputType[P]>
        }
      >
    >


  export type t_pantallaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoPantalla?: boolean
    nombre?: boolean
    descripcion?: boolean
    t_bitacora_general?: boolean | t_pantalla$t_bitacora_generalArgs<ExtArgs>
    _count?: boolean | T_pantallaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_pantalla"]>

  export type t_pantallaSelectScalar = {
    codigoPantalla?: boolean
    nombre?: boolean
    descripcion?: boolean
  }


  export type t_pantallaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    t_bitacora_general?: boolean | t_pantalla$t_bitacora_generalArgs<ExtArgs>
    _count?: boolean | T_pantallaCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_pantallaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_pantalla"
    objects: {
      t_bitacora_general: Prisma.$t_bitacora_generalPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codigoPantalla: number
      nombre: string
      descripcion: string
    }, ExtArgs["result"]["t_pantalla"]>
    composites: {}
  }


  type t_pantallaGetPayload<S extends boolean | null | undefined | t_pantallaDefaultArgs> = $Result.GetResult<Prisma.$t_pantallaPayload, S>

  type t_pantallaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_pantallaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_pantallaCountAggregateInputType | true
    }

  export interface t_pantallaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_pantalla'], meta: { name: 't_pantalla' } }
    /**
     * Find zero or one T_pantalla that matches the filter.
     * @param {t_pantallaFindUniqueArgs} args - Arguments to find a T_pantalla
     * @example
     * // Get one T_pantalla
     * const t_pantalla = await prisma.t_pantalla.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_pantallaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_pantallaFindUniqueArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_pantalla that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_pantallaFindUniqueOrThrowArgs} args - Arguments to find a T_pantalla
     * @example
     * // Get one T_pantalla
     * const t_pantalla = await prisma.t_pantalla.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_pantallaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_pantallaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_pantalla that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_pantallaFindFirstArgs} args - Arguments to find a T_pantalla
     * @example
     * // Get one T_pantalla
     * const t_pantalla = await prisma.t_pantalla.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_pantallaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_pantallaFindFirstArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_pantalla that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_pantallaFindFirstOrThrowArgs} args - Arguments to find a T_pantalla
     * @example
     * // Get one T_pantalla
     * const t_pantalla = await prisma.t_pantalla.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_pantallaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_pantallaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_pantallas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_pantallaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_pantallas
     * const t_pantallas = await prisma.t_pantalla.findMany()
     * 
     * // Get first 10 T_pantallas
     * const t_pantallas = await prisma.t_pantalla.findMany({ take: 10 })
     * 
     * // Only select the `codigoPantalla`
     * const t_pantallaWithCodigoPantallaOnly = await prisma.t_pantalla.findMany({ select: { codigoPantalla: true } })
     * 
    **/
    findMany<T extends t_pantallaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_pantallaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_pantalla.
     * @param {t_pantallaCreateArgs} args - Arguments to create a T_pantalla.
     * @example
     * // Create one T_pantalla
     * const T_pantalla = await prisma.t_pantalla.create({
     *   data: {
     *     // ... data to create a T_pantalla
     *   }
     * })
     * 
    **/
    create<T extends t_pantallaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_pantallaCreateArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_pantallas.
     * @param {t_pantallaCreateManyArgs} args - Arguments to create many T_pantallas.
     * @example
     * // Create many T_pantallas
     * const t_pantalla = await prisma.t_pantalla.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_pantallaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_pantallaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_pantalla.
     * @param {t_pantallaDeleteArgs} args - Arguments to delete one T_pantalla.
     * @example
     * // Delete one T_pantalla
     * const T_pantalla = await prisma.t_pantalla.delete({
     *   where: {
     *     // ... filter to delete one T_pantalla
     *   }
     * })
     * 
    **/
    delete<T extends t_pantallaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_pantallaDeleteArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_pantalla.
     * @param {t_pantallaUpdateArgs} args - Arguments to update one T_pantalla.
     * @example
     * // Update one T_pantalla
     * const t_pantalla = await prisma.t_pantalla.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_pantallaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_pantallaUpdateArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_pantallas.
     * @param {t_pantallaDeleteManyArgs} args - Arguments to filter T_pantallas to delete.
     * @example
     * // Delete a few T_pantallas
     * const { count } = await prisma.t_pantalla.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_pantallaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_pantallaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_pantallaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_pantallas
     * const t_pantalla = await prisma.t_pantalla.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_pantallaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_pantallaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_pantalla.
     * @param {t_pantallaUpsertArgs} args - Arguments to update or create a T_pantalla.
     * @example
     * // Update or create a T_pantalla
     * const t_pantalla = await prisma.t_pantalla.upsert({
     *   create: {
     *     // ... data to create a T_pantalla
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_pantalla we want to update
     *   }
     * })
    **/
    upsert<T extends t_pantallaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_pantallaUpsertArgs<ExtArgs>>
    ): Prisma__t_pantallaClient<$Result.GetResult<Prisma.$t_pantallaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_pantallaCountArgs} args - Arguments to filter T_pantallas to count.
     * @example
     * // Count the number of T_pantallas
     * const count = await prisma.t_pantalla.count({
     *   where: {
     *     // ... the filter for the T_pantallas we want to count
     *   }
     * })
    **/
    count<T extends t_pantallaCountArgs>(
      args?: Subset<T, t_pantallaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_pantallaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_pantalla.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_pantallaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_pantallaAggregateArgs>(args: Subset<T, T_pantallaAggregateArgs>): Prisma.PrismaPromise<GetT_pantallaAggregateType<T>>

    /**
     * Group by T_pantalla.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_pantallaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_pantallaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_pantallaGroupByArgs['orderBy'] }
        : { orderBy?: t_pantallaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_pantallaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_pantallaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_pantalla model
   */
  readonly fields: t_pantallaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_pantalla.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_pantallaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    t_bitacora_general<T extends t_pantalla$t_bitacora_generalArgs<ExtArgs> = {}>(args?: Subset<T, t_pantalla$t_bitacora_generalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_pantalla model
   */ 
  interface t_pantallaFieldRefs {
    readonly codigoPantalla: FieldRef<"t_pantalla", 'Int'>
    readonly nombre: FieldRef<"t_pantalla", 'String'>
    readonly descripcion: FieldRef<"t_pantalla", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_pantalla findUnique
   */
  export type t_pantallaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * Filter, which t_pantalla to fetch.
     */
    where: t_pantallaWhereUniqueInput
  }

  /**
   * t_pantalla findUniqueOrThrow
   */
  export type t_pantallaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * Filter, which t_pantalla to fetch.
     */
    where: t_pantallaWhereUniqueInput
  }

  /**
   * t_pantalla findFirst
   */
  export type t_pantallaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * Filter, which t_pantalla to fetch.
     */
    where?: t_pantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_pantallas to fetch.
     */
    orderBy?: t_pantallaOrderByWithRelationInput | t_pantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_pantallas.
     */
    cursor?: t_pantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_pantallas.
     */
    distinct?: T_pantallaScalarFieldEnum | T_pantallaScalarFieldEnum[]
  }

  /**
   * t_pantalla findFirstOrThrow
   */
  export type t_pantallaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * Filter, which t_pantalla to fetch.
     */
    where?: t_pantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_pantallas to fetch.
     */
    orderBy?: t_pantallaOrderByWithRelationInput | t_pantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_pantallas.
     */
    cursor?: t_pantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_pantallas.
     */
    distinct?: T_pantallaScalarFieldEnum | T_pantallaScalarFieldEnum[]
  }

  /**
   * t_pantalla findMany
   */
  export type t_pantallaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * Filter, which t_pantallas to fetch.
     */
    where?: t_pantallaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_pantallas to fetch.
     */
    orderBy?: t_pantallaOrderByWithRelationInput | t_pantallaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_pantallas.
     */
    cursor?: t_pantallaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_pantallas.
     */
    skip?: number
    distinct?: T_pantallaScalarFieldEnum | T_pantallaScalarFieldEnum[]
  }

  /**
   * t_pantalla create
   */
  export type t_pantallaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * The data needed to create a t_pantalla.
     */
    data: XOR<t_pantallaCreateInput, t_pantallaUncheckedCreateInput>
  }

  /**
   * t_pantalla createMany
   */
  export type t_pantallaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_pantallas.
     */
    data: t_pantallaCreateManyInput | t_pantallaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_pantalla update
   */
  export type t_pantallaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * The data needed to update a t_pantalla.
     */
    data: XOR<t_pantallaUpdateInput, t_pantallaUncheckedUpdateInput>
    /**
     * Choose, which t_pantalla to update.
     */
    where: t_pantallaWhereUniqueInput
  }

  /**
   * t_pantalla updateMany
   */
  export type t_pantallaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_pantallas.
     */
    data: XOR<t_pantallaUpdateManyMutationInput, t_pantallaUncheckedUpdateManyInput>
    /**
     * Filter which t_pantallas to update
     */
    where?: t_pantallaWhereInput
  }

  /**
   * t_pantalla upsert
   */
  export type t_pantallaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * The filter to search for the t_pantalla to update in case it exists.
     */
    where: t_pantallaWhereUniqueInput
    /**
     * In case the t_pantalla found by the `where` argument doesn't exist, create a new t_pantalla with this data.
     */
    create: XOR<t_pantallaCreateInput, t_pantallaUncheckedCreateInput>
    /**
     * In case the t_pantalla was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_pantallaUpdateInput, t_pantallaUncheckedUpdateInput>
  }

  /**
   * t_pantalla delete
   */
  export type t_pantallaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
    /**
     * Filter which t_pantalla to delete.
     */
    where: t_pantallaWhereUniqueInput
  }

  /**
   * t_pantalla deleteMany
   */
  export type t_pantallaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_pantallas to delete
     */
    where?: t_pantallaWhereInput
  }

  /**
   * t_pantalla.t_bitacora_general
   */
  export type t_pantalla$t_bitacora_generalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    where?: t_bitacora_generalWhereInput
    orderBy?: t_bitacora_generalOrderByWithRelationInput | t_bitacora_generalOrderByWithRelationInput[]
    cursor?: t_bitacora_generalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_bitacora_generalScalarFieldEnum | T_bitacora_generalScalarFieldEnum[]
  }

  /**
   * t_pantalla without action
   */
  export type t_pantallaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_pantalla
     */
    select?: t_pantallaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_pantallaInclude<ExtArgs> | null
  }


  /**
   * Model t_usuarios
   */

  export type AggregateT_usuarios = {
    _count: T_usuariosCountAggregateOutputType | null
    _avg: T_usuariosAvgAggregateOutputType | null
    _sum: T_usuariosSumAggregateOutputType | null
    _min: T_usuariosMinAggregateOutputType | null
    _max: T_usuariosMaxAggregateOutputType | null
  }

  export type T_usuariosAvgAggregateOutputType = {
    telefono: number | null
    departamento: number | null
  }

  export type T_usuariosSumAggregateOutputType = {
    telefono: number | null
    departamento: number | null
  }

  export type T_usuariosMinAggregateOutputType = {
    cedula: string | null
    nombre: string | null
    apellidoUno: string | null
    apellidoDos: string | null
    telefono: number | null
    correo: string | null
    puesto: string | null
    departamento: number | null
    estado: boolean | null
    contrasena: string | null
  }

  export type T_usuariosMaxAggregateOutputType = {
    cedula: string | null
    nombre: string | null
    apellidoUno: string | null
    apellidoDos: string | null
    telefono: number | null
    correo: string | null
    puesto: string | null
    departamento: number | null
    estado: boolean | null
    contrasena: string | null
  }

  export type T_usuariosCountAggregateOutputType = {
    cedula: number
    nombre: number
    apellidoUno: number
    apellidoDos: number
    telefono: number
    correo: number
    puesto: number
    departamento: number
    estado: number
    contrasena: number
    _all: number
  }


  export type T_usuariosAvgAggregateInputType = {
    telefono?: true
    departamento?: true
  }

  export type T_usuariosSumAggregateInputType = {
    telefono?: true
    departamento?: true
  }

  export type T_usuariosMinAggregateInputType = {
    cedula?: true
    nombre?: true
    apellidoUno?: true
    apellidoDos?: true
    telefono?: true
    correo?: true
    puesto?: true
    departamento?: true
    estado?: true
    contrasena?: true
  }

  export type T_usuariosMaxAggregateInputType = {
    cedula?: true
    nombre?: true
    apellidoUno?: true
    apellidoDos?: true
    telefono?: true
    correo?: true
    puesto?: true
    departamento?: true
    estado?: true
    contrasena?: true
  }

  export type T_usuariosCountAggregateInputType = {
    cedula?: true
    nombre?: true
    apellidoUno?: true
    apellidoDos?: true
    telefono?: true
    correo?: true
    puesto?: true
    departamento?: true
    estado?: true
    contrasena?: true
    _all?: true
  }

  export type T_usuariosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_usuarios to aggregate.
     */
    where?: t_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios to fetch.
     */
    orderBy?: t_usuariosOrderByWithRelationInput | t_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_usuarios
    **/
    _count?: true | T_usuariosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_usuariosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_usuariosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_usuariosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_usuariosMaxAggregateInputType
  }

  export type GetT_usuariosAggregateType<T extends T_usuariosAggregateArgs> = {
        [P in keyof T & keyof AggregateT_usuarios]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_usuarios[P]>
      : GetScalarType<T[P], AggregateT_usuarios[P]>
  }




  export type t_usuariosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuariosWhereInput
    orderBy?: t_usuariosOrderByWithAggregationInput | t_usuariosOrderByWithAggregationInput[]
    by: T_usuariosScalarFieldEnum[] | T_usuariosScalarFieldEnum
    having?: t_usuariosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_usuariosCountAggregateInputType | true
    _avg?: T_usuariosAvgAggregateInputType
    _sum?: T_usuariosSumAggregateInputType
    _min?: T_usuariosMinAggregateInputType
    _max?: T_usuariosMaxAggregateInputType
  }

  export type T_usuariosGroupByOutputType = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    _count: T_usuariosCountAggregateOutputType | null
    _avg: T_usuariosAvgAggregateOutputType | null
    _sum: T_usuariosSumAggregateOutputType | null
    _min: T_usuariosMinAggregateOutputType | null
    _max: T_usuariosMaxAggregateOutputType | null
  }

  type GetT_usuariosGroupByPayload<T extends t_usuariosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_usuariosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_usuariosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_usuariosGroupByOutputType[P]>
            : GetScalarType<T[P], T_usuariosGroupByOutputType[P]>
        }
      >
    >


  export type t_usuariosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    cedula?: boolean
    nombre?: boolean
    apellidoUno?: boolean
    apellidoDos?: boolean
    telefono?: boolean
    correo?: boolean
    puesto?: boolean
    departamento?: boolean
    estado?: boolean
    contrasena?: boolean
    incidencias?: boolean | t_usuarios$incidenciasArgs<ExtArgs>
    roles?: boolean | t_usuarios$rolesArgs<ExtArgs>
    t_usuarios_x_rol?: boolean | t_usuarios$t_usuarios_x_rolArgs<ExtArgs>
    diagnostico?: boolean | t_usuarios$diagnosticoArgs<ExtArgs>
    usuario?: boolean | t_usuarios$usuarioArgs<ExtArgs>
    t_bitacora_cambio_estado?: boolean | t_usuarios$t_bitacora_cambio_estadoArgs<ExtArgs>
    t_bitacora_general?: boolean | t_usuarios$t_bitacora_generalArgs<ExtArgs>
    _count?: boolean | T_usuariosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_usuarios"]>

  export type t_usuariosSelectScalar = {
    cedula?: boolean
    nombre?: boolean
    apellidoUno?: boolean
    apellidoDos?: boolean
    telefono?: boolean
    correo?: boolean
    puesto?: boolean
    departamento?: boolean
    estado?: boolean
    contrasena?: boolean
  }


  export type t_usuariosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | t_usuarios$incidenciasArgs<ExtArgs>
    roles?: boolean | t_usuarios$rolesArgs<ExtArgs>
    t_usuarios_x_rol?: boolean | t_usuarios$t_usuarios_x_rolArgs<ExtArgs>
    diagnostico?: boolean | t_usuarios$diagnosticoArgs<ExtArgs>
    usuario?: boolean | t_usuarios$usuarioArgs<ExtArgs>
    t_bitacora_cambio_estado?: boolean | t_usuarios$t_bitacora_cambio_estadoArgs<ExtArgs>
    t_bitacora_general?: boolean | t_usuarios$t_bitacora_generalArgs<ExtArgs>
    _count?: boolean | T_usuariosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_usuariosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_usuarios"
    objects: {
      incidencias: Prisma.$t_incidenciasPayload<ExtArgs>[]
      roles: Prisma.$t_rolesPayload<ExtArgs>[]
      t_usuarios_x_rol: Prisma.$t_usuarios_x_rolPayload<ExtArgs>[]
      diagnostico: Prisma.$t_diagnosticoPayload<ExtArgs>[]
      usuario: Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>[]
      t_bitacora_cambio_estado: Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>[]
      t_bitacora_general: Prisma.$t_bitacora_generalPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      cedula: string
      nombre: string
      apellidoUno: string
      apellidoDos: string
      telefono: number | null
      correo: string
      puesto: string
      departamento: number
      estado: boolean
      contrasena: string
    }, ExtArgs["result"]["t_usuarios"]>
    composites: {}
  }


  type t_usuariosGetPayload<S extends boolean | null | undefined | t_usuariosDefaultArgs> = $Result.GetResult<Prisma.$t_usuariosPayload, S>

  type t_usuariosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_usuariosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_usuariosCountAggregateInputType | true
    }

  export interface t_usuariosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_usuarios'], meta: { name: 't_usuarios' } }
    /**
     * Find zero or one T_usuarios that matches the filter.
     * @param {t_usuariosFindUniqueArgs} args - Arguments to find a T_usuarios
     * @example
     * // Get one T_usuarios
     * const t_usuarios = await prisma.t_usuarios.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_usuariosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuariosFindUniqueArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_usuarios that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_usuariosFindUniqueOrThrowArgs} args - Arguments to find a T_usuarios
     * @example
     * // Get one T_usuarios
     * const t_usuarios = await prisma.t_usuarios.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_usuariosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuariosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuariosFindFirstArgs} args - Arguments to find a T_usuarios
     * @example
     * // Get one T_usuarios
     * const t_usuarios = await prisma.t_usuarios.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_usuariosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuariosFindFirstArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_usuarios that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuariosFindFirstOrThrowArgs} args - Arguments to find a T_usuarios
     * @example
     * // Get one T_usuarios
     * const t_usuarios = await prisma.t_usuarios.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_usuariosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuariosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_usuarios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuariosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_usuarios
     * const t_usuarios = await prisma.t_usuarios.findMany()
     * 
     * // Get first 10 T_usuarios
     * const t_usuarios = await prisma.t_usuarios.findMany({ take: 10 })
     * 
     * // Only select the `cedula`
     * const t_usuariosWithCedulaOnly = await prisma.t_usuarios.findMany({ select: { cedula: true } })
     * 
    **/
    findMany<T extends t_usuariosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuariosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_usuarios.
     * @param {t_usuariosCreateArgs} args - Arguments to create a T_usuarios.
     * @example
     * // Create one T_usuarios
     * const T_usuarios = await prisma.t_usuarios.create({
     *   data: {
     *     // ... data to create a T_usuarios
     *   }
     * })
     * 
    **/
    create<T extends t_usuariosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuariosCreateArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_usuarios.
     * @param {t_usuariosCreateManyArgs} args - Arguments to create many T_usuarios.
     * @example
     * // Create many T_usuarios
     * const t_usuarios = await prisma.t_usuarios.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_usuariosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuariosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_usuarios.
     * @param {t_usuariosDeleteArgs} args - Arguments to delete one T_usuarios.
     * @example
     * // Delete one T_usuarios
     * const T_usuarios = await prisma.t_usuarios.delete({
     *   where: {
     *     // ... filter to delete one T_usuarios
     *   }
     * })
     * 
    **/
    delete<T extends t_usuariosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuariosDeleteArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_usuarios.
     * @param {t_usuariosUpdateArgs} args - Arguments to update one T_usuarios.
     * @example
     * // Update one T_usuarios
     * const t_usuarios = await prisma.t_usuarios.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_usuariosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuariosUpdateArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_usuarios.
     * @param {t_usuariosDeleteManyArgs} args - Arguments to filter T_usuarios to delete.
     * @example
     * // Delete a few T_usuarios
     * const { count } = await prisma.t_usuarios.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_usuariosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuariosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuariosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_usuarios
     * const t_usuarios = await prisma.t_usuarios.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_usuariosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuariosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_usuarios.
     * @param {t_usuariosUpsertArgs} args - Arguments to update or create a T_usuarios.
     * @example
     * // Update or create a T_usuarios
     * const t_usuarios = await prisma.t_usuarios.upsert({
     *   create: {
     *     // ... data to create a T_usuarios
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_usuarios we want to update
     *   }
     * })
    **/
    upsert<T extends t_usuariosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuariosUpsertArgs<ExtArgs>>
    ): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuariosCountArgs} args - Arguments to filter T_usuarios to count.
     * @example
     * // Count the number of T_usuarios
     * const count = await prisma.t_usuarios.count({
     *   where: {
     *     // ... the filter for the T_usuarios we want to count
     *   }
     * })
    **/
    count<T extends t_usuariosCountArgs>(
      args?: Subset<T, t_usuariosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_usuariosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_usuariosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_usuariosAggregateArgs>(args: Subset<T, T_usuariosAggregateArgs>): Prisma.PrismaPromise<GetT_usuariosAggregateType<T>>

    /**
     * Group by T_usuarios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuariosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_usuariosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_usuariosGroupByArgs['orderBy'] }
        : { orderBy?: t_usuariosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_usuariosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_usuariosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_usuarios model
   */
  readonly fields: t_usuariosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_usuarios.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_usuariosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencias<T extends t_usuarios$incidenciasArgs<ExtArgs> = {}>(args?: Subset<T, t_usuarios$incidenciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findMany'> | Null>;

    roles<T extends t_usuarios$rolesArgs<ExtArgs> = {}>(args?: Subset<T, t_usuarios$rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'findMany'> | Null>;

    t_usuarios_x_rol<T extends t_usuarios$t_usuarios_x_rolArgs<ExtArgs> = {}>(args?: Subset<T, t_usuarios$t_usuarios_x_rolArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'findMany'> | Null>;

    diagnostico<T extends t_usuarios$diagnosticoArgs<ExtArgs> = {}>(args?: Subset<T, t_usuarios$diagnosticoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findMany'> | Null>;

    usuario<T extends t_usuarios$usuarioArgs<ExtArgs> = {}>(args?: Subset<T, t_usuarios$usuarioArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'findMany'> | Null>;

    t_bitacora_cambio_estado<T extends t_usuarios$t_bitacora_cambio_estadoArgs<ExtArgs> = {}>(args?: Subset<T, t_usuarios$t_bitacora_cambio_estadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    t_bitacora_general<T extends t_usuarios$t_bitacora_generalArgs<ExtArgs> = {}>(args?: Subset<T, t_usuarios$t_bitacora_generalArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_bitacora_generalPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_usuarios model
   */ 
  interface t_usuariosFieldRefs {
    readonly cedula: FieldRef<"t_usuarios", 'String'>
    readonly nombre: FieldRef<"t_usuarios", 'String'>
    readonly apellidoUno: FieldRef<"t_usuarios", 'String'>
    readonly apellidoDos: FieldRef<"t_usuarios", 'String'>
    readonly telefono: FieldRef<"t_usuarios", 'Int'>
    readonly correo: FieldRef<"t_usuarios", 'String'>
    readonly puesto: FieldRef<"t_usuarios", 'String'>
    readonly departamento: FieldRef<"t_usuarios", 'Int'>
    readonly estado: FieldRef<"t_usuarios", 'Boolean'>
    readonly contrasena: FieldRef<"t_usuarios", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_usuarios findUnique
   */
  export type t_usuariosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios to fetch.
     */
    where: t_usuariosWhereUniqueInput
  }

  /**
   * t_usuarios findUniqueOrThrow
   */
  export type t_usuariosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios to fetch.
     */
    where: t_usuariosWhereUniqueInput
  }

  /**
   * t_usuarios findFirst
   */
  export type t_usuariosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios to fetch.
     */
    where?: t_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios to fetch.
     */
    orderBy?: t_usuariosOrderByWithRelationInput | t_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_usuarios.
     */
    cursor?: t_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_usuarios.
     */
    distinct?: T_usuariosScalarFieldEnum | T_usuariosScalarFieldEnum[]
  }

  /**
   * t_usuarios findFirstOrThrow
   */
  export type t_usuariosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios to fetch.
     */
    where?: t_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios to fetch.
     */
    orderBy?: t_usuariosOrderByWithRelationInput | t_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_usuarios.
     */
    cursor?: t_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_usuarios.
     */
    distinct?: T_usuariosScalarFieldEnum | T_usuariosScalarFieldEnum[]
  }

  /**
   * t_usuarios findMany
   */
  export type t_usuariosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios to fetch.
     */
    where?: t_usuariosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios to fetch.
     */
    orderBy?: t_usuariosOrderByWithRelationInput | t_usuariosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_usuarios.
     */
    cursor?: t_usuariosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios.
     */
    skip?: number
    distinct?: T_usuariosScalarFieldEnum | T_usuariosScalarFieldEnum[]
  }

  /**
   * t_usuarios create
   */
  export type t_usuariosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * The data needed to create a t_usuarios.
     */
    data: XOR<t_usuariosCreateInput, t_usuariosUncheckedCreateInput>
  }

  /**
   * t_usuarios createMany
   */
  export type t_usuariosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_usuarios.
     */
    data: t_usuariosCreateManyInput | t_usuariosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_usuarios update
   */
  export type t_usuariosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * The data needed to update a t_usuarios.
     */
    data: XOR<t_usuariosUpdateInput, t_usuariosUncheckedUpdateInput>
    /**
     * Choose, which t_usuarios to update.
     */
    where: t_usuariosWhereUniqueInput
  }

  /**
   * t_usuarios updateMany
   */
  export type t_usuariosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_usuarios.
     */
    data: XOR<t_usuariosUpdateManyMutationInput, t_usuariosUncheckedUpdateManyInput>
    /**
     * Filter which t_usuarios to update
     */
    where?: t_usuariosWhereInput
  }

  /**
   * t_usuarios upsert
   */
  export type t_usuariosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * The filter to search for the t_usuarios to update in case it exists.
     */
    where: t_usuariosWhereUniqueInput
    /**
     * In case the t_usuarios found by the `where` argument doesn't exist, create a new t_usuarios with this data.
     */
    create: XOR<t_usuariosCreateInput, t_usuariosUncheckedCreateInput>
    /**
     * In case the t_usuarios was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_usuariosUpdateInput, t_usuariosUncheckedUpdateInput>
  }

  /**
   * t_usuarios delete
   */
  export type t_usuariosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
    /**
     * Filter which t_usuarios to delete.
     */
    where: t_usuariosWhereUniqueInput
  }

  /**
   * t_usuarios deleteMany
   */
  export type t_usuariosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_usuarios to delete
     */
    where?: t_usuariosWhereInput
  }

  /**
   * t_usuarios.incidencias
   */
  export type t_usuarios$incidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    where?: t_incidenciasWhereInput
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    cursor?: t_incidenciasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_usuarios.roles
   */
  export type t_usuarios$rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_roles
     */
    select?: t_rolesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_rolesInclude<ExtArgs> | null
    where?: t_rolesWhereInput
    orderBy?: t_rolesOrderByWithRelationInput | t_rolesOrderByWithRelationInput[]
    cursor?: t_rolesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_rolesScalarFieldEnum | T_rolesScalarFieldEnum[]
  }

  /**
   * t_usuarios.t_usuarios_x_rol
   */
  export type t_usuarios$t_usuarios_x_rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    where?: t_usuarios_x_rolWhereInput
    orderBy?: t_usuarios_x_rolOrderByWithRelationInput | t_usuarios_x_rolOrderByWithRelationInput[]
    cursor?: t_usuarios_x_rolWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_usuarios_x_rolScalarFieldEnum | T_usuarios_x_rolScalarFieldEnum[]
  }

  /**
   * t_usuarios.diagnostico
   */
  export type t_usuarios$diagnosticoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    where?: t_diagnosticoWhereInput
    orderBy?: t_diagnosticoOrderByWithRelationInput | t_diagnosticoOrderByWithRelationInput[]
    cursor?: t_diagnosticoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_diagnosticoScalarFieldEnum | T_diagnosticoScalarFieldEnum[]
  }

  /**
   * t_usuarios.usuario
   */
  export type t_usuarios$usuarioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    where?: t_usuario_x_incidenciaWhereInput
    orderBy?: t_usuario_x_incidenciaOrderByWithRelationInput | t_usuario_x_incidenciaOrderByWithRelationInput[]
    cursor?: t_usuario_x_incidenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_usuario_x_incidenciaScalarFieldEnum | T_usuario_x_incidenciaScalarFieldEnum[]
  }

  /**
   * t_usuarios.t_bitacora_cambio_estado
   */
  export type t_usuarios$t_bitacora_cambio_estadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    where?: t_bitacora_cambio_estadoWhereInput
    orderBy?: t_bitacora_cambio_estadoOrderByWithRelationInput | t_bitacora_cambio_estadoOrderByWithRelationInput[]
    cursor?: t_bitacora_cambio_estadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_bitacora_cambio_estadoScalarFieldEnum | T_bitacora_cambio_estadoScalarFieldEnum[]
  }

  /**
   * t_usuarios.t_bitacora_general
   */
  export type t_usuarios$t_bitacora_generalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_general
     */
    select?: t_bitacora_generalSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_generalInclude<ExtArgs> | null
    where?: t_bitacora_generalWhereInput
    orderBy?: t_bitacora_generalOrderByWithRelationInput | t_bitacora_generalOrderByWithRelationInput[]
    cursor?: t_bitacora_generalWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_bitacora_generalScalarFieldEnum | T_bitacora_generalScalarFieldEnum[]
  }

  /**
   * t_usuarios without action
   */
  export type t_usuariosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios
     */
    select?: t_usuariosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuariosInclude<ExtArgs> | null
  }


  /**
   * Model t_usuario_x_incidencia
   */

  export type AggregateT_usuario_x_incidencia = {
    _count: T_usuario_x_incidenciaCountAggregateOutputType | null
    _avg: T_usuario_x_incidenciaAvgAggregateOutputType | null
    _sum: T_usuario_x_incidenciaSumAggregateOutputType | null
    _min: T_usuario_x_incidenciaMinAggregateOutputType | null
    _max: T_usuario_x_incidenciaMaxAggregateOutputType | null
  }

  export type T_usuario_x_incidenciaAvgAggregateOutputType = {
    codigoAsignacion: number | null
  }

  export type T_usuario_x_incidenciaSumAggregateOutputType = {
    codigoAsignacion: number | null
  }

  export type T_usuario_x_incidenciaMinAggregateOutputType = {
    codigoAsignacion: number | null
    idUsuario: string | null
    idIncidencia: string | null
    fechaAsignacion: Date | null
  }

  export type T_usuario_x_incidenciaMaxAggregateOutputType = {
    codigoAsignacion: number | null
    idUsuario: string | null
    idIncidencia: string | null
    fechaAsignacion: Date | null
  }

  export type T_usuario_x_incidenciaCountAggregateOutputType = {
    codigoAsignacion: number
    idUsuario: number
    idIncidencia: number
    fechaAsignacion: number
    _all: number
  }


  export type T_usuario_x_incidenciaAvgAggregateInputType = {
    codigoAsignacion?: true
  }

  export type T_usuario_x_incidenciaSumAggregateInputType = {
    codigoAsignacion?: true
  }

  export type T_usuario_x_incidenciaMinAggregateInputType = {
    codigoAsignacion?: true
    idUsuario?: true
    idIncidencia?: true
    fechaAsignacion?: true
  }

  export type T_usuario_x_incidenciaMaxAggregateInputType = {
    codigoAsignacion?: true
    idUsuario?: true
    idIncidencia?: true
    fechaAsignacion?: true
  }

  export type T_usuario_x_incidenciaCountAggregateInputType = {
    codigoAsignacion?: true
    idUsuario?: true
    idIncidencia?: true
    fechaAsignacion?: true
    _all?: true
  }

  export type T_usuario_x_incidenciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_usuario_x_incidencia to aggregate.
     */
    where?: t_usuario_x_incidenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuario_x_incidencias to fetch.
     */
    orderBy?: t_usuario_x_incidenciaOrderByWithRelationInput | t_usuario_x_incidenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_usuario_x_incidenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuario_x_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuario_x_incidencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_usuario_x_incidencias
    **/
    _count?: true | T_usuario_x_incidenciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_usuario_x_incidenciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_usuario_x_incidenciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_usuario_x_incidenciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_usuario_x_incidenciaMaxAggregateInputType
  }

  export type GetT_usuario_x_incidenciaAggregateType<T extends T_usuario_x_incidenciaAggregateArgs> = {
        [P in keyof T & keyof AggregateT_usuario_x_incidencia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_usuario_x_incidencia[P]>
      : GetScalarType<T[P], AggregateT_usuario_x_incidencia[P]>
  }




  export type t_usuario_x_incidenciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuario_x_incidenciaWhereInput
    orderBy?: t_usuario_x_incidenciaOrderByWithAggregationInput | t_usuario_x_incidenciaOrderByWithAggregationInput[]
    by: T_usuario_x_incidenciaScalarFieldEnum[] | T_usuario_x_incidenciaScalarFieldEnum
    having?: t_usuario_x_incidenciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_usuario_x_incidenciaCountAggregateInputType | true
    _avg?: T_usuario_x_incidenciaAvgAggregateInputType
    _sum?: T_usuario_x_incidenciaSumAggregateInputType
    _min?: T_usuario_x_incidenciaMinAggregateInputType
    _max?: T_usuario_x_incidenciaMaxAggregateInputType
  }

  export type T_usuario_x_incidenciaGroupByOutputType = {
    codigoAsignacion: number
    idUsuario: string
    idIncidencia: string
    fechaAsignacion: Date
    _count: T_usuario_x_incidenciaCountAggregateOutputType | null
    _avg: T_usuario_x_incidenciaAvgAggregateOutputType | null
    _sum: T_usuario_x_incidenciaSumAggregateOutputType | null
    _min: T_usuario_x_incidenciaMinAggregateOutputType | null
    _max: T_usuario_x_incidenciaMaxAggregateOutputType | null
  }

  type GetT_usuario_x_incidenciaGroupByPayload<T extends t_usuario_x_incidenciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_usuario_x_incidenciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_usuario_x_incidenciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_usuario_x_incidenciaGroupByOutputType[P]>
            : GetScalarType<T[P], T_usuario_x_incidenciaGroupByOutputType[P]>
        }
      >
    >


  export type t_usuario_x_incidenciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoAsignacion?: boolean
    idUsuario?: boolean
    idIncidencia?: boolean
    fechaAsignacion?: boolean
    usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    incidencia?: boolean | t_incidenciasDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_usuario_x_incidencia"]>

  export type t_usuario_x_incidenciaSelectScalar = {
    codigoAsignacion?: boolean
    idUsuario?: boolean
    idIncidencia?: boolean
    fechaAsignacion?: boolean
  }


  export type t_usuario_x_incidenciaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    incidencia?: boolean | t_incidenciasDefaultArgs<ExtArgs>
  }


  export type $t_usuario_x_incidenciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_usuario_x_incidencia"
    objects: {
      usuario: Prisma.$t_usuariosPayload<ExtArgs>
      incidencia: Prisma.$t_incidenciasPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      codigoAsignacion: number
      idUsuario: string
      idIncidencia: string
      fechaAsignacion: Date
    }, ExtArgs["result"]["t_usuario_x_incidencia"]>
    composites: {}
  }


  type t_usuario_x_incidenciaGetPayload<S extends boolean | null | undefined | t_usuario_x_incidenciaDefaultArgs> = $Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload, S>

  type t_usuario_x_incidenciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_usuario_x_incidenciaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_usuario_x_incidenciaCountAggregateInputType | true
    }

  export interface t_usuario_x_incidenciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_usuario_x_incidencia'], meta: { name: 't_usuario_x_incidencia' } }
    /**
     * Find zero or one T_usuario_x_incidencia that matches the filter.
     * @param {t_usuario_x_incidenciaFindUniqueArgs} args - Arguments to find a T_usuario_x_incidencia
     * @example
     * // Get one T_usuario_x_incidencia
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_usuario_x_incidenciaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuario_x_incidenciaFindUniqueArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_usuario_x_incidencia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_usuario_x_incidenciaFindUniqueOrThrowArgs} args - Arguments to find a T_usuario_x_incidencia
     * @example
     * // Get one T_usuario_x_incidencia
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_usuario_x_incidenciaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuario_x_incidenciaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_usuario_x_incidencia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuario_x_incidenciaFindFirstArgs} args - Arguments to find a T_usuario_x_incidencia
     * @example
     * // Get one T_usuario_x_incidencia
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_usuario_x_incidenciaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuario_x_incidenciaFindFirstArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_usuario_x_incidencia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuario_x_incidenciaFindFirstOrThrowArgs} args - Arguments to find a T_usuario_x_incidencia
     * @example
     * // Get one T_usuario_x_incidencia
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_usuario_x_incidenciaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuario_x_incidenciaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_usuario_x_incidencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuario_x_incidenciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_usuario_x_incidencias
     * const t_usuario_x_incidencias = await prisma.t_usuario_x_incidencia.findMany()
     * 
     * // Get first 10 T_usuario_x_incidencias
     * const t_usuario_x_incidencias = await prisma.t_usuario_x_incidencia.findMany({ take: 10 })
     * 
     * // Only select the `codigoAsignacion`
     * const t_usuario_x_incidenciaWithCodigoAsignacionOnly = await prisma.t_usuario_x_incidencia.findMany({ select: { codigoAsignacion: true } })
     * 
    **/
    findMany<T extends t_usuario_x_incidenciaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuario_x_incidenciaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_usuario_x_incidencia.
     * @param {t_usuario_x_incidenciaCreateArgs} args - Arguments to create a T_usuario_x_incidencia.
     * @example
     * // Create one T_usuario_x_incidencia
     * const T_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.create({
     *   data: {
     *     // ... data to create a T_usuario_x_incidencia
     *   }
     * })
     * 
    **/
    create<T extends t_usuario_x_incidenciaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuario_x_incidenciaCreateArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_usuario_x_incidencias.
     * @param {t_usuario_x_incidenciaCreateManyArgs} args - Arguments to create many T_usuario_x_incidencias.
     * @example
     * // Create many T_usuario_x_incidencias
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_usuario_x_incidenciaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuario_x_incidenciaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_usuario_x_incidencia.
     * @param {t_usuario_x_incidenciaDeleteArgs} args - Arguments to delete one T_usuario_x_incidencia.
     * @example
     * // Delete one T_usuario_x_incidencia
     * const T_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.delete({
     *   where: {
     *     // ... filter to delete one T_usuario_x_incidencia
     *   }
     * })
     * 
    **/
    delete<T extends t_usuario_x_incidenciaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuario_x_incidenciaDeleteArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_usuario_x_incidencia.
     * @param {t_usuario_x_incidenciaUpdateArgs} args - Arguments to update one T_usuario_x_incidencia.
     * @example
     * // Update one T_usuario_x_incidencia
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_usuario_x_incidenciaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuario_x_incidenciaUpdateArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_usuario_x_incidencias.
     * @param {t_usuario_x_incidenciaDeleteManyArgs} args - Arguments to filter T_usuario_x_incidencias to delete.
     * @example
     * // Delete a few T_usuario_x_incidencias
     * const { count } = await prisma.t_usuario_x_incidencia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_usuario_x_incidenciaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuario_x_incidenciaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_usuario_x_incidencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuario_x_incidenciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_usuario_x_incidencias
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_usuario_x_incidenciaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuario_x_incidenciaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_usuario_x_incidencia.
     * @param {t_usuario_x_incidenciaUpsertArgs} args - Arguments to update or create a T_usuario_x_incidencia.
     * @example
     * // Update or create a T_usuario_x_incidencia
     * const t_usuario_x_incidencia = await prisma.t_usuario_x_incidencia.upsert({
     *   create: {
     *     // ... data to create a T_usuario_x_incidencia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_usuario_x_incidencia we want to update
     *   }
     * })
    **/
    upsert<T extends t_usuario_x_incidenciaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuario_x_incidenciaUpsertArgs<ExtArgs>>
    ): Prisma__t_usuario_x_incidenciaClient<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_usuario_x_incidencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuario_x_incidenciaCountArgs} args - Arguments to filter T_usuario_x_incidencias to count.
     * @example
     * // Count the number of T_usuario_x_incidencias
     * const count = await prisma.t_usuario_x_incidencia.count({
     *   where: {
     *     // ... the filter for the T_usuario_x_incidencias we want to count
     *   }
     * })
    **/
    count<T extends t_usuario_x_incidenciaCountArgs>(
      args?: Subset<T, t_usuario_x_incidenciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_usuario_x_incidenciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_usuario_x_incidencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_usuario_x_incidenciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_usuario_x_incidenciaAggregateArgs>(args: Subset<T, T_usuario_x_incidenciaAggregateArgs>): Prisma.PrismaPromise<GetT_usuario_x_incidenciaAggregateType<T>>

    /**
     * Group by T_usuario_x_incidencia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuario_x_incidenciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_usuario_x_incidenciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_usuario_x_incidenciaGroupByArgs['orderBy'] }
        : { orderBy?: t_usuario_x_incidenciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_usuario_x_incidenciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_usuario_x_incidenciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_usuario_x_incidencia model
   */
  readonly fields: t_usuario_x_incidenciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_usuario_x_incidencia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_usuario_x_incidenciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuario<T extends t_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_usuariosDefaultArgs<ExtArgs>>): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    incidencia<T extends t_incidenciasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_incidenciasDefaultArgs<ExtArgs>>): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_usuario_x_incidencia model
   */ 
  interface t_usuario_x_incidenciaFieldRefs {
    readonly codigoAsignacion: FieldRef<"t_usuario_x_incidencia", 'Int'>
    readonly idUsuario: FieldRef<"t_usuario_x_incidencia", 'String'>
    readonly idIncidencia: FieldRef<"t_usuario_x_incidencia", 'String'>
    readonly fechaAsignacion: FieldRef<"t_usuario_x_incidencia", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * t_usuario_x_incidencia findUnique
   */
  export type t_usuario_x_incidenciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * Filter, which t_usuario_x_incidencia to fetch.
     */
    where: t_usuario_x_incidenciaWhereUniqueInput
  }

  /**
   * t_usuario_x_incidencia findUniqueOrThrow
   */
  export type t_usuario_x_incidenciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * Filter, which t_usuario_x_incidencia to fetch.
     */
    where: t_usuario_x_incidenciaWhereUniqueInput
  }

  /**
   * t_usuario_x_incidencia findFirst
   */
  export type t_usuario_x_incidenciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * Filter, which t_usuario_x_incidencia to fetch.
     */
    where?: t_usuario_x_incidenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuario_x_incidencias to fetch.
     */
    orderBy?: t_usuario_x_incidenciaOrderByWithRelationInput | t_usuario_x_incidenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_usuario_x_incidencias.
     */
    cursor?: t_usuario_x_incidenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuario_x_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuario_x_incidencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_usuario_x_incidencias.
     */
    distinct?: T_usuario_x_incidenciaScalarFieldEnum | T_usuario_x_incidenciaScalarFieldEnum[]
  }

  /**
   * t_usuario_x_incidencia findFirstOrThrow
   */
  export type t_usuario_x_incidenciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * Filter, which t_usuario_x_incidencia to fetch.
     */
    where?: t_usuario_x_incidenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuario_x_incidencias to fetch.
     */
    orderBy?: t_usuario_x_incidenciaOrderByWithRelationInput | t_usuario_x_incidenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_usuario_x_incidencias.
     */
    cursor?: t_usuario_x_incidenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuario_x_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuario_x_incidencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_usuario_x_incidencias.
     */
    distinct?: T_usuario_x_incidenciaScalarFieldEnum | T_usuario_x_incidenciaScalarFieldEnum[]
  }

  /**
   * t_usuario_x_incidencia findMany
   */
  export type t_usuario_x_incidenciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * Filter, which t_usuario_x_incidencias to fetch.
     */
    where?: t_usuario_x_incidenciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuario_x_incidencias to fetch.
     */
    orderBy?: t_usuario_x_incidenciaOrderByWithRelationInput | t_usuario_x_incidenciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_usuario_x_incidencias.
     */
    cursor?: t_usuario_x_incidenciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuario_x_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuario_x_incidencias.
     */
    skip?: number
    distinct?: T_usuario_x_incidenciaScalarFieldEnum | T_usuario_x_incidenciaScalarFieldEnum[]
  }

  /**
   * t_usuario_x_incidencia create
   */
  export type t_usuario_x_incidenciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * The data needed to create a t_usuario_x_incidencia.
     */
    data: XOR<t_usuario_x_incidenciaCreateInput, t_usuario_x_incidenciaUncheckedCreateInput>
  }

  /**
   * t_usuario_x_incidencia createMany
   */
  export type t_usuario_x_incidenciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_usuario_x_incidencias.
     */
    data: t_usuario_x_incidenciaCreateManyInput | t_usuario_x_incidenciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_usuario_x_incidencia update
   */
  export type t_usuario_x_incidenciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * The data needed to update a t_usuario_x_incidencia.
     */
    data: XOR<t_usuario_x_incidenciaUpdateInput, t_usuario_x_incidenciaUncheckedUpdateInput>
    /**
     * Choose, which t_usuario_x_incidencia to update.
     */
    where: t_usuario_x_incidenciaWhereUniqueInput
  }

  /**
   * t_usuario_x_incidencia updateMany
   */
  export type t_usuario_x_incidenciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_usuario_x_incidencias.
     */
    data: XOR<t_usuario_x_incidenciaUpdateManyMutationInput, t_usuario_x_incidenciaUncheckedUpdateManyInput>
    /**
     * Filter which t_usuario_x_incidencias to update
     */
    where?: t_usuario_x_incidenciaWhereInput
  }

  /**
   * t_usuario_x_incidencia upsert
   */
  export type t_usuario_x_incidenciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * The filter to search for the t_usuario_x_incidencia to update in case it exists.
     */
    where: t_usuario_x_incidenciaWhereUniqueInput
    /**
     * In case the t_usuario_x_incidencia found by the `where` argument doesn't exist, create a new t_usuario_x_incidencia with this data.
     */
    create: XOR<t_usuario_x_incidenciaCreateInput, t_usuario_x_incidenciaUncheckedCreateInput>
    /**
     * In case the t_usuario_x_incidencia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_usuario_x_incidenciaUpdateInput, t_usuario_x_incidenciaUncheckedUpdateInput>
  }

  /**
   * t_usuario_x_incidencia delete
   */
  export type t_usuario_x_incidenciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    /**
     * Filter which t_usuario_x_incidencia to delete.
     */
    where: t_usuario_x_incidenciaWhereUniqueInput
  }

  /**
   * t_usuario_x_incidencia deleteMany
   */
  export type t_usuario_x_incidenciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_usuario_x_incidencias to delete
     */
    where?: t_usuario_x_incidenciaWhereInput
  }

  /**
   * t_usuario_x_incidencia without action
   */
  export type t_usuario_x_incidenciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
  }


  /**
   * Model T_Pantallas
   */

  export type AggregateT_Pantallas = {
    _count: T_PantallasCountAggregateOutputType | null
    _avg: T_PantallasAvgAggregateOutputType | null
    _sum: T_PantallasSumAggregateOutputType | null
    _min: T_PantallasMinAggregateOutputType | null
    _max: T_PantallasMaxAggregateOutputType | null
  }

  export type T_PantallasAvgAggregateOutputType = {
    codigoPantalla: number | null
  }

  export type T_PantallasSumAggregateOutputType = {
    codigoPantalla: number | null
  }

  export type T_PantallasMinAggregateOutputType = {
    codigoPantalla: number | null
    nombrePantalla: string | null
    descripcionPantalla: string | null
  }

  export type T_PantallasMaxAggregateOutputType = {
    codigoPantalla: number | null
    nombrePantalla: string | null
    descripcionPantalla: string | null
  }

  export type T_PantallasCountAggregateOutputType = {
    codigoPantalla: number
    nombrePantalla: number
    descripcionPantalla: number
    _all: number
  }


  export type T_PantallasAvgAggregateInputType = {
    codigoPantalla?: true
  }

  export type T_PantallasSumAggregateInputType = {
    codigoPantalla?: true
  }

  export type T_PantallasMinAggregateInputType = {
    codigoPantalla?: true
    nombrePantalla?: true
    descripcionPantalla?: true
  }

  export type T_PantallasMaxAggregateInputType = {
    codigoPantalla?: true
    nombrePantalla?: true
    descripcionPantalla?: true
  }

  export type T_PantallasCountAggregateInputType = {
    codigoPantalla?: true
    nombrePantalla?: true
    descripcionPantalla?: true
    _all?: true
  }

  export type T_PantallasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which T_Pantallas to aggregate.
     */
    where?: T_PantallasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of T_Pantallas to fetch.
     */
    orderBy?: T_PantallasOrderByWithRelationInput | T_PantallasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: T_PantallasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` T_Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` T_Pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned T_Pantallas
    **/
    _count?: true | T_PantallasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_PantallasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_PantallasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_PantallasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_PantallasMaxAggregateInputType
  }

  export type GetT_PantallasAggregateType<T extends T_PantallasAggregateArgs> = {
        [P in keyof T & keyof AggregateT_Pantallas]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_Pantallas[P]>
      : GetScalarType<T[P], AggregateT_Pantallas[P]>
  }




  export type T_PantallasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: T_PantallasWhereInput
    orderBy?: T_PantallasOrderByWithAggregationInput | T_PantallasOrderByWithAggregationInput[]
    by: T_PantallasScalarFieldEnum[] | T_PantallasScalarFieldEnum
    having?: T_PantallasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_PantallasCountAggregateInputType | true
    _avg?: T_PantallasAvgAggregateInputType
    _sum?: T_PantallasSumAggregateInputType
    _min?: T_PantallasMinAggregateInputType
    _max?: T_PantallasMaxAggregateInputType
  }

  export type T_PantallasGroupByOutputType = {
    codigoPantalla: number
    nombrePantalla: string
    descripcionPantalla: string
    _count: T_PantallasCountAggregateOutputType | null
    _avg: T_PantallasAvgAggregateOutputType | null
    _sum: T_PantallasSumAggregateOutputType | null
    _min: T_PantallasMinAggregateOutputType | null
    _max: T_PantallasMaxAggregateOutputType | null
  }

  type GetT_PantallasGroupByPayload<T extends T_PantallasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_PantallasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_PantallasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_PantallasGroupByOutputType[P]>
            : GetScalarType<T[P], T_PantallasGroupByOutputType[P]>
        }
      >
    >


  export type T_PantallasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoPantalla?: boolean
    nombrePantalla?: boolean
    descripcionPantalla?: boolean
  }, ExtArgs["result"]["t_Pantallas"]>

  export type T_PantallasSelectScalar = {
    codigoPantalla?: boolean
    nombrePantalla?: boolean
    descripcionPantalla?: boolean
  }



  export type $T_PantallasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "T_Pantallas"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      codigoPantalla: number
      nombrePantalla: string
      descripcionPantalla: string
    }, ExtArgs["result"]["t_Pantallas"]>
    composites: {}
  }


  type T_PantallasGetPayload<S extends boolean | null | undefined | T_PantallasDefaultArgs> = $Result.GetResult<Prisma.$T_PantallasPayload, S>

  type T_PantallasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<T_PantallasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_PantallasCountAggregateInputType | true
    }

  export interface T_PantallasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['T_Pantallas'], meta: { name: 'T_Pantallas' } }
    /**
     * Find zero or one T_Pantallas that matches the filter.
     * @param {T_PantallasFindUniqueArgs} args - Arguments to find a T_Pantallas
     * @example
     * // Get one T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends T_PantallasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, T_PantallasFindUniqueArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_Pantallas that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {T_PantallasFindUniqueOrThrowArgs} args - Arguments to find a T_Pantallas
     * @example
     * // Get one T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends T_PantallasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, T_PantallasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_Pantallas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_PantallasFindFirstArgs} args - Arguments to find a T_Pantallas
     * @example
     * // Get one T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends T_PantallasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, T_PantallasFindFirstArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_Pantallas that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_PantallasFindFirstOrThrowArgs} args - Arguments to find a T_Pantallas
     * @example
     * // Get one T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends T_PantallasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, T_PantallasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_Pantallas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_PantallasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.findMany()
     * 
     * // Get first 10 T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.findMany({ take: 10 })
     * 
     * // Only select the `codigoPantalla`
     * const t_PantallasWithCodigoPantallaOnly = await prisma.t_Pantallas.findMany({ select: { codigoPantalla: true } })
     * 
    **/
    findMany<T extends T_PantallasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, T_PantallasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_Pantallas.
     * @param {T_PantallasCreateArgs} args - Arguments to create a T_Pantallas.
     * @example
     * // Create one T_Pantallas
     * const T_Pantallas = await prisma.t_Pantallas.create({
     *   data: {
     *     // ... data to create a T_Pantallas
     *   }
     * })
     * 
    **/
    create<T extends T_PantallasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, T_PantallasCreateArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_Pantallas.
     * @param {T_PantallasCreateManyArgs} args - Arguments to create many T_Pantallas.
     * @example
     * // Create many T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends T_PantallasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, T_PantallasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_Pantallas.
     * @param {T_PantallasDeleteArgs} args - Arguments to delete one T_Pantallas.
     * @example
     * // Delete one T_Pantallas
     * const T_Pantallas = await prisma.t_Pantallas.delete({
     *   where: {
     *     // ... filter to delete one T_Pantallas
     *   }
     * })
     * 
    **/
    delete<T extends T_PantallasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, T_PantallasDeleteArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_Pantallas.
     * @param {T_PantallasUpdateArgs} args - Arguments to update one T_Pantallas.
     * @example
     * // Update one T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends T_PantallasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, T_PantallasUpdateArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_Pantallas.
     * @param {T_PantallasDeleteManyArgs} args - Arguments to filter T_Pantallas to delete.
     * @example
     * // Delete a few T_Pantallas
     * const { count } = await prisma.t_Pantallas.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends T_PantallasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, T_PantallasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_Pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_PantallasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends T_PantallasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, T_PantallasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_Pantallas.
     * @param {T_PantallasUpsertArgs} args - Arguments to update or create a T_Pantallas.
     * @example
     * // Update or create a T_Pantallas
     * const t_Pantallas = await prisma.t_Pantallas.upsert({
     *   create: {
     *     // ... data to create a T_Pantallas
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_Pantallas we want to update
     *   }
     * })
    **/
    upsert<T extends T_PantallasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, T_PantallasUpsertArgs<ExtArgs>>
    ): Prisma__T_PantallasClient<$Result.GetResult<Prisma.$T_PantallasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_Pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_PantallasCountArgs} args - Arguments to filter T_Pantallas to count.
     * @example
     * // Count the number of T_Pantallas
     * const count = await prisma.t_Pantallas.count({
     *   where: {
     *     // ... the filter for the T_Pantallas we want to count
     *   }
     * })
    **/
    count<T extends T_PantallasCountArgs>(
      args?: Subset<T, T_PantallasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_PantallasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_Pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_PantallasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_PantallasAggregateArgs>(args: Subset<T, T_PantallasAggregateArgs>): Prisma.PrismaPromise<GetT_PantallasAggregateType<T>>

    /**
     * Group by T_Pantallas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_PantallasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends T_PantallasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: T_PantallasGroupByArgs['orderBy'] }
        : { orderBy?: T_PantallasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, T_PantallasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_PantallasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the T_Pantallas model
   */
  readonly fields: T_PantallasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for T_Pantallas.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__T_PantallasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the T_Pantallas model
   */ 
  interface T_PantallasFieldRefs {
    readonly codigoPantalla: FieldRef<"T_Pantallas", 'Int'>
    readonly nombrePantalla: FieldRef<"T_Pantallas", 'String'>
    readonly descripcionPantalla: FieldRef<"T_Pantallas", 'String'>
  }
    

  // Custom InputTypes
  /**
   * T_Pantallas findUnique
   */
  export type T_PantallasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * Filter, which T_Pantallas to fetch.
     */
    where: T_PantallasWhereUniqueInput
  }

  /**
   * T_Pantallas findUniqueOrThrow
   */
  export type T_PantallasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * Filter, which T_Pantallas to fetch.
     */
    where: T_PantallasWhereUniqueInput
  }

  /**
   * T_Pantallas findFirst
   */
  export type T_PantallasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * Filter, which T_Pantallas to fetch.
     */
    where?: T_PantallasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of T_Pantallas to fetch.
     */
    orderBy?: T_PantallasOrderByWithRelationInput | T_PantallasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for T_Pantallas.
     */
    cursor?: T_PantallasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` T_Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` T_Pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of T_Pantallas.
     */
    distinct?: T_PantallasScalarFieldEnum | T_PantallasScalarFieldEnum[]
  }

  /**
   * T_Pantallas findFirstOrThrow
   */
  export type T_PantallasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * Filter, which T_Pantallas to fetch.
     */
    where?: T_PantallasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of T_Pantallas to fetch.
     */
    orderBy?: T_PantallasOrderByWithRelationInput | T_PantallasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for T_Pantallas.
     */
    cursor?: T_PantallasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` T_Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` T_Pantallas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of T_Pantallas.
     */
    distinct?: T_PantallasScalarFieldEnum | T_PantallasScalarFieldEnum[]
  }

  /**
   * T_Pantallas findMany
   */
  export type T_PantallasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * Filter, which T_Pantallas to fetch.
     */
    where?: T_PantallasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of T_Pantallas to fetch.
     */
    orderBy?: T_PantallasOrderByWithRelationInput | T_PantallasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing T_Pantallas.
     */
    cursor?: T_PantallasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` T_Pantallas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` T_Pantallas.
     */
    skip?: number
    distinct?: T_PantallasScalarFieldEnum | T_PantallasScalarFieldEnum[]
  }

  /**
   * T_Pantallas create
   */
  export type T_PantallasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * The data needed to create a T_Pantallas.
     */
    data: XOR<T_PantallasCreateInput, T_PantallasUncheckedCreateInput>
  }

  /**
   * T_Pantallas createMany
   */
  export type T_PantallasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many T_Pantallas.
     */
    data: T_PantallasCreateManyInput | T_PantallasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * T_Pantallas update
   */
  export type T_PantallasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * The data needed to update a T_Pantallas.
     */
    data: XOR<T_PantallasUpdateInput, T_PantallasUncheckedUpdateInput>
    /**
     * Choose, which T_Pantallas to update.
     */
    where: T_PantallasWhereUniqueInput
  }

  /**
   * T_Pantallas updateMany
   */
  export type T_PantallasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update T_Pantallas.
     */
    data: XOR<T_PantallasUpdateManyMutationInput, T_PantallasUncheckedUpdateManyInput>
    /**
     * Filter which T_Pantallas to update
     */
    where?: T_PantallasWhereInput
  }

  /**
   * T_Pantallas upsert
   */
  export type T_PantallasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * The filter to search for the T_Pantallas to update in case it exists.
     */
    where: T_PantallasWhereUniqueInput
    /**
     * In case the T_Pantallas found by the `where` argument doesn't exist, create a new T_Pantallas with this data.
     */
    create: XOR<T_PantallasCreateInput, T_PantallasUncheckedCreateInput>
    /**
     * In case the T_Pantallas was found with the provided `where` argument, update it with this data.
     */
    update: XOR<T_PantallasUpdateInput, T_PantallasUncheckedUpdateInput>
  }

  /**
   * T_Pantallas delete
   */
  export type T_PantallasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
    /**
     * Filter which T_Pantallas to delete.
     */
    where: T_PantallasWhereUniqueInput
  }

  /**
   * T_Pantallas deleteMany
   */
  export type T_PantallasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which T_Pantallas to delete
     */
    where?: T_PantallasWhereInput
  }

  /**
   * T_Pantallas without action
   */
  export type T_PantallasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the T_Pantallas
     */
    select?: T_PantallasSelect<ExtArgs> | null
  }


  /**
   * Model t_bitacora_cambio_estado
   */

  export type AggregateT_bitacora_cambio_estado = {
    _count: T_bitacora_cambio_estadoCountAggregateOutputType | null
    _avg: T_bitacora_cambio_estadoAvgAggregateOutputType | null
    _sum: T_bitacora_cambio_estadoSumAggregateOutputType | null
    _min: T_bitacora_cambio_estadoMinAggregateOutputType | null
    _max: T_bitacora_cambio_estadoMaxAggregateOutputType | null
  }

  export type T_bitacora_cambio_estadoAvgAggregateOutputType = {
    codigoBitacora: number | null
    idEstadoActual: number | null
    idEstadoAnterior: number | null
  }

  export type T_bitacora_cambio_estadoSumAggregateOutputType = {
    codigoBitacora: number | null
    idEstadoActual: number | null
    idEstadoAnterior: number | null
  }

  export type T_bitacora_cambio_estadoMinAggregateOutputType = {
    codigoBitacora: number | null
    idIncidencia: string | null
    fechaCambio: Date | null
    idEstadoActual: number | null
    idEstadoAnterior: number | null
    idUsuario: string | null
  }

  export type T_bitacora_cambio_estadoMaxAggregateOutputType = {
    codigoBitacora: number | null
    idIncidencia: string | null
    fechaCambio: Date | null
    idEstadoActual: number | null
    idEstadoAnterior: number | null
    idUsuario: string | null
  }

  export type T_bitacora_cambio_estadoCountAggregateOutputType = {
    codigoBitacora: number
    idIncidencia: number
    fechaCambio: number
    idEstadoActual: number
    idEstadoAnterior: number
    idUsuario: number
    _all: number
  }


  export type T_bitacora_cambio_estadoAvgAggregateInputType = {
    codigoBitacora?: true
    idEstadoActual?: true
    idEstadoAnterior?: true
  }

  export type T_bitacora_cambio_estadoSumAggregateInputType = {
    codigoBitacora?: true
    idEstadoActual?: true
    idEstadoAnterior?: true
  }

  export type T_bitacora_cambio_estadoMinAggregateInputType = {
    codigoBitacora?: true
    idIncidencia?: true
    fechaCambio?: true
    idEstadoActual?: true
    idEstadoAnterior?: true
    idUsuario?: true
  }

  export type T_bitacora_cambio_estadoMaxAggregateInputType = {
    codigoBitacora?: true
    idIncidencia?: true
    fechaCambio?: true
    idEstadoActual?: true
    idEstadoAnterior?: true
    idUsuario?: true
  }

  export type T_bitacora_cambio_estadoCountAggregateInputType = {
    codigoBitacora?: true
    idIncidencia?: true
    fechaCambio?: true
    idEstadoActual?: true
    idEstadoAnterior?: true
    idUsuario?: true
    _all?: true
  }

  export type T_bitacora_cambio_estadoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_bitacora_cambio_estado to aggregate.
     */
    where?: t_bitacora_cambio_estadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_cambio_estados to fetch.
     */
    orderBy?: t_bitacora_cambio_estadoOrderByWithRelationInput | t_bitacora_cambio_estadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_bitacora_cambio_estadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_cambio_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_cambio_estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_bitacora_cambio_estados
    **/
    _count?: true | T_bitacora_cambio_estadoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_bitacora_cambio_estadoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_bitacora_cambio_estadoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_bitacora_cambio_estadoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_bitacora_cambio_estadoMaxAggregateInputType
  }

  export type GetT_bitacora_cambio_estadoAggregateType<T extends T_bitacora_cambio_estadoAggregateArgs> = {
        [P in keyof T & keyof AggregateT_bitacora_cambio_estado]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_bitacora_cambio_estado[P]>
      : GetScalarType<T[P], AggregateT_bitacora_cambio_estado[P]>
  }




  export type t_bitacora_cambio_estadoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_bitacora_cambio_estadoWhereInput
    orderBy?: t_bitacora_cambio_estadoOrderByWithAggregationInput | t_bitacora_cambio_estadoOrderByWithAggregationInput[]
    by: T_bitacora_cambio_estadoScalarFieldEnum[] | T_bitacora_cambio_estadoScalarFieldEnum
    having?: t_bitacora_cambio_estadoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_bitacora_cambio_estadoCountAggregateInputType | true
    _avg?: T_bitacora_cambio_estadoAvgAggregateInputType
    _sum?: T_bitacora_cambio_estadoSumAggregateInputType
    _min?: T_bitacora_cambio_estadoMinAggregateInputType
    _max?: T_bitacora_cambio_estadoMaxAggregateInputType
  }

  export type T_bitacora_cambio_estadoGroupByOutputType = {
    codigoBitacora: number
    idIncidencia: string
    fechaCambio: Date
    idEstadoActual: number
    idEstadoAnterior: number
    idUsuario: string
    _count: T_bitacora_cambio_estadoCountAggregateOutputType | null
    _avg: T_bitacora_cambio_estadoAvgAggregateOutputType | null
    _sum: T_bitacora_cambio_estadoSumAggregateOutputType | null
    _min: T_bitacora_cambio_estadoMinAggregateOutputType | null
    _max: T_bitacora_cambio_estadoMaxAggregateOutputType | null
  }

  type GetT_bitacora_cambio_estadoGroupByPayload<T extends t_bitacora_cambio_estadoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_bitacora_cambio_estadoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_bitacora_cambio_estadoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_bitacora_cambio_estadoGroupByOutputType[P]>
            : GetScalarType<T[P], T_bitacora_cambio_estadoGroupByOutputType[P]>
        }
      >
    >


  export type t_bitacora_cambio_estadoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoBitacora?: boolean
    idIncidencia?: boolean
    fechaCambio?: boolean
    idEstadoActual?: boolean
    idEstadoAnterior?: boolean
    idUsuario?: boolean
    incidencias?: boolean | t_incidenciasDefaultArgs<ExtArgs>
    usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_bitacora_cambio_estado"]>

  export type t_bitacora_cambio_estadoSelectScalar = {
    codigoBitacora?: boolean
    idIncidencia?: boolean
    fechaCambio?: boolean
    idEstadoActual?: boolean
    idEstadoAnterior?: boolean
    idUsuario?: boolean
  }


  export type t_bitacora_cambio_estadoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | t_incidenciasDefaultArgs<ExtArgs>
    usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
  }


  export type $t_bitacora_cambio_estadoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_bitacora_cambio_estado"
    objects: {
      incidencias: Prisma.$t_incidenciasPayload<ExtArgs>
      usuario: Prisma.$t_usuariosPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      codigoBitacora: number
      idIncidencia: string
      fechaCambio: Date
      idEstadoActual: number
      idEstadoAnterior: number
      idUsuario: string
    }, ExtArgs["result"]["t_bitacora_cambio_estado"]>
    composites: {}
  }


  type t_bitacora_cambio_estadoGetPayload<S extends boolean | null | undefined | t_bitacora_cambio_estadoDefaultArgs> = $Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload, S>

  type t_bitacora_cambio_estadoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_bitacora_cambio_estadoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_bitacora_cambio_estadoCountAggregateInputType | true
    }

  export interface t_bitacora_cambio_estadoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_bitacora_cambio_estado'], meta: { name: 't_bitacora_cambio_estado' } }
    /**
     * Find zero or one T_bitacora_cambio_estado that matches the filter.
     * @param {t_bitacora_cambio_estadoFindUniqueArgs} args - Arguments to find a T_bitacora_cambio_estado
     * @example
     * // Get one T_bitacora_cambio_estado
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_bitacora_cambio_estadoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_cambio_estadoFindUniqueArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_bitacora_cambio_estado that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_bitacora_cambio_estadoFindUniqueOrThrowArgs} args - Arguments to find a T_bitacora_cambio_estado
     * @example
     * // Get one T_bitacora_cambio_estado
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_bitacora_cambio_estadoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_cambio_estadoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_bitacora_cambio_estado that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_cambio_estadoFindFirstArgs} args - Arguments to find a T_bitacora_cambio_estado
     * @example
     * // Get one T_bitacora_cambio_estado
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_bitacora_cambio_estadoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_cambio_estadoFindFirstArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_bitacora_cambio_estado that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_cambio_estadoFindFirstOrThrowArgs} args - Arguments to find a T_bitacora_cambio_estado
     * @example
     * // Get one T_bitacora_cambio_estado
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_bitacora_cambio_estadoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_cambio_estadoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_bitacora_cambio_estados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_cambio_estadoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_bitacora_cambio_estados
     * const t_bitacora_cambio_estados = await prisma.t_bitacora_cambio_estado.findMany()
     * 
     * // Get first 10 T_bitacora_cambio_estados
     * const t_bitacora_cambio_estados = await prisma.t_bitacora_cambio_estado.findMany({ take: 10 })
     * 
     * // Only select the `codigoBitacora`
     * const t_bitacora_cambio_estadoWithCodigoBitacoraOnly = await prisma.t_bitacora_cambio_estado.findMany({ select: { codigoBitacora: true } })
     * 
    **/
    findMany<T extends t_bitacora_cambio_estadoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_cambio_estadoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_bitacora_cambio_estado.
     * @param {t_bitacora_cambio_estadoCreateArgs} args - Arguments to create a T_bitacora_cambio_estado.
     * @example
     * // Create one T_bitacora_cambio_estado
     * const T_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.create({
     *   data: {
     *     // ... data to create a T_bitacora_cambio_estado
     *   }
     * })
     * 
    **/
    create<T extends t_bitacora_cambio_estadoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_cambio_estadoCreateArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_bitacora_cambio_estados.
     * @param {t_bitacora_cambio_estadoCreateManyArgs} args - Arguments to create many T_bitacora_cambio_estados.
     * @example
     * // Create many T_bitacora_cambio_estados
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_bitacora_cambio_estadoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_cambio_estadoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_bitacora_cambio_estado.
     * @param {t_bitacora_cambio_estadoDeleteArgs} args - Arguments to delete one T_bitacora_cambio_estado.
     * @example
     * // Delete one T_bitacora_cambio_estado
     * const T_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.delete({
     *   where: {
     *     // ... filter to delete one T_bitacora_cambio_estado
     *   }
     * })
     * 
    **/
    delete<T extends t_bitacora_cambio_estadoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_cambio_estadoDeleteArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_bitacora_cambio_estado.
     * @param {t_bitacora_cambio_estadoUpdateArgs} args - Arguments to update one T_bitacora_cambio_estado.
     * @example
     * // Update one T_bitacora_cambio_estado
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_bitacora_cambio_estadoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_cambio_estadoUpdateArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_bitacora_cambio_estados.
     * @param {t_bitacora_cambio_estadoDeleteManyArgs} args - Arguments to filter T_bitacora_cambio_estados to delete.
     * @example
     * // Delete a few T_bitacora_cambio_estados
     * const { count } = await prisma.t_bitacora_cambio_estado.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_bitacora_cambio_estadoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_bitacora_cambio_estadoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_bitacora_cambio_estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_cambio_estadoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_bitacora_cambio_estados
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_bitacora_cambio_estadoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_cambio_estadoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_bitacora_cambio_estado.
     * @param {t_bitacora_cambio_estadoUpsertArgs} args - Arguments to update or create a T_bitacora_cambio_estado.
     * @example
     * // Update or create a T_bitacora_cambio_estado
     * const t_bitacora_cambio_estado = await prisma.t_bitacora_cambio_estado.upsert({
     *   create: {
     *     // ... data to create a T_bitacora_cambio_estado
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_bitacora_cambio_estado we want to update
     *   }
     * })
    **/
    upsert<T extends t_bitacora_cambio_estadoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_bitacora_cambio_estadoUpsertArgs<ExtArgs>>
    ): Prisma__t_bitacora_cambio_estadoClient<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_bitacora_cambio_estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_cambio_estadoCountArgs} args - Arguments to filter T_bitacora_cambio_estados to count.
     * @example
     * // Count the number of T_bitacora_cambio_estados
     * const count = await prisma.t_bitacora_cambio_estado.count({
     *   where: {
     *     // ... the filter for the T_bitacora_cambio_estados we want to count
     *   }
     * })
    **/
    count<T extends t_bitacora_cambio_estadoCountArgs>(
      args?: Subset<T, t_bitacora_cambio_estadoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_bitacora_cambio_estadoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_bitacora_cambio_estado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_bitacora_cambio_estadoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_bitacora_cambio_estadoAggregateArgs>(args: Subset<T, T_bitacora_cambio_estadoAggregateArgs>): Prisma.PrismaPromise<GetT_bitacora_cambio_estadoAggregateType<T>>

    /**
     * Group by T_bitacora_cambio_estado.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_bitacora_cambio_estadoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_bitacora_cambio_estadoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_bitacora_cambio_estadoGroupByArgs['orderBy'] }
        : { orderBy?: t_bitacora_cambio_estadoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_bitacora_cambio_estadoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_bitacora_cambio_estadoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_bitacora_cambio_estado model
   */
  readonly fields: t_bitacora_cambio_estadoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_bitacora_cambio_estado.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_bitacora_cambio_estadoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencias<T extends t_incidenciasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_incidenciasDefaultArgs<ExtArgs>>): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    usuario<T extends t_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_usuariosDefaultArgs<ExtArgs>>): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_bitacora_cambio_estado model
   */ 
  interface t_bitacora_cambio_estadoFieldRefs {
    readonly codigoBitacora: FieldRef<"t_bitacora_cambio_estado", 'Int'>
    readonly idIncidencia: FieldRef<"t_bitacora_cambio_estado", 'String'>
    readonly fechaCambio: FieldRef<"t_bitacora_cambio_estado", 'DateTime'>
    readonly idEstadoActual: FieldRef<"t_bitacora_cambio_estado", 'Int'>
    readonly idEstadoAnterior: FieldRef<"t_bitacora_cambio_estado", 'Int'>
    readonly idUsuario: FieldRef<"t_bitacora_cambio_estado", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_bitacora_cambio_estado findUnique
   */
  export type t_bitacora_cambio_estadoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_cambio_estado to fetch.
     */
    where: t_bitacora_cambio_estadoWhereUniqueInput
  }

  /**
   * t_bitacora_cambio_estado findUniqueOrThrow
   */
  export type t_bitacora_cambio_estadoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_cambio_estado to fetch.
     */
    where: t_bitacora_cambio_estadoWhereUniqueInput
  }

  /**
   * t_bitacora_cambio_estado findFirst
   */
  export type t_bitacora_cambio_estadoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_cambio_estado to fetch.
     */
    where?: t_bitacora_cambio_estadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_cambio_estados to fetch.
     */
    orderBy?: t_bitacora_cambio_estadoOrderByWithRelationInput | t_bitacora_cambio_estadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_bitacora_cambio_estados.
     */
    cursor?: t_bitacora_cambio_estadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_cambio_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_cambio_estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_bitacora_cambio_estados.
     */
    distinct?: T_bitacora_cambio_estadoScalarFieldEnum | T_bitacora_cambio_estadoScalarFieldEnum[]
  }

  /**
   * t_bitacora_cambio_estado findFirstOrThrow
   */
  export type t_bitacora_cambio_estadoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_cambio_estado to fetch.
     */
    where?: t_bitacora_cambio_estadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_cambio_estados to fetch.
     */
    orderBy?: t_bitacora_cambio_estadoOrderByWithRelationInput | t_bitacora_cambio_estadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_bitacora_cambio_estados.
     */
    cursor?: t_bitacora_cambio_estadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_cambio_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_cambio_estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_bitacora_cambio_estados.
     */
    distinct?: T_bitacora_cambio_estadoScalarFieldEnum | T_bitacora_cambio_estadoScalarFieldEnum[]
  }

  /**
   * t_bitacora_cambio_estado findMany
   */
  export type t_bitacora_cambio_estadoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * Filter, which t_bitacora_cambio_estados to fetch.
     */
    where?: t_bitacora_cambio_estadoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_bitacora_cambio_estados to fetch.
     */
    orderBy?: t_bitacora_cambio_estadoOrderByWithRelationInput | t_bitacora_cambio_estadoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_bitacora_cambio_estados.
     */
    cursor?: t_bitacora_cambio_estadoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_bitacora_cambio_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_bitacora_cambio_estados.
     */
    skip?: number
    distinct?: T_bitacora_cambio_estadoScalarFieldEnum | T_bitacora_cambio_estadoScalarFieldEnum[]
  }

  /**
   * t_bitacora_cambio_estado create
   */
  export type t_bitacora_cambio_estadoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * The data needed to create a t_bitacora_cambio_estado.
     */
    data: XOR<t_bitacora_cambio_estadoCreateInput, t_bitacora_cambio_estadoUncheckedCreateInput>
  }

  /**
   * t_bitacora_cambio_estado createMany
   */
  export type t_bitacora_cambio_estadoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_bitacora_cambio_estados.
     */
    data: t_bitacora_cambio_estadoCreateManyInput | t_bitacora_cambio_estadoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_bitacora_cambio_estado update
   */
  export type t_bitacora_cambio_estadoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * The data needed to update a t_bitacora_cambio_estado.
     */
    data: XOR<t_bitacora_cambio_estadoUpdateInput, t_bitacora_cambio_estadoUncheckedUpdateInput>
    /**
     * Choose, which t_bitacora_cambio_estado to update.
     */
    where: t_bitacora_cambio_estadoWhereUniqueInput
  }

  /**
   * t_bitacora_cambio_estado updateMany
   */
  export type t_bitacora_cambio_estadoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_bitacora_cambio_estados.
     */
    data: XOR<t_bitacora_cambio_estadoUpdateManyMutationInput, t_bitacora_cambio_estadoUncheckedUpdateManyInput>
    /**
     * Filter which t_bitacora_cambio_estados to update
     */
    where?: t_bitacora_cambio_estadoWhereInput
  }

  /**
   * t_bitacora_cambio_estado upsert
   */
  export type t_bitacora_cambio_estadoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * The filter to search for the t_bitacora_cambio_estado to update in case it exists.
     */
    where: t_bitacora_cambio_estadoWhereUniqueInput
    /**
     * In case the t_bitacora_cambio_estado found by the `where` argument doesn't exist, create a new t_bitacora_cambio_estado with this data.
     */
    create: XOR<t_bitacora_cambio_estadoCreateInput, t_bitacora_cambio_estadoUncheckedCreateInput>
    /**
     * In case the t_bitacora_cambio_estado was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_bitacora_cambio_estadoUpdateInput, t_bitacora_cambio_estadoUncheckedUpdateInput>
  }

  /**
   * t_bitacora_cambio_estado delete
   */
  export type t_bitacora_cambio_estadoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    /**
     * Filter which t_bitacora_cambio_estado to delete.
     */
    where: t_bitacora_cambio_estadoWhereUniqueInput
  }

  /**
   * t_bitacora_cambio_estado deleteMany
   */
  export type t_bitacora_cambio_estadoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_bitacora_cambio_estados to delete
     */
    where?: t_bitacora_cambio_estadoWhereInput
  }

  /**
   * t_bitacora_cambio_estado without action
   */
  export type t_bitacora_cambio_estadoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
  }


  /**
   * Model t_usuarios_x_rol
   */

  export type AggregateT_usuarios_x_rol = {
    _count: T_usuarios_x_rolCountAggregateOutputType | null
    _avg: T_usuarios_x_rolAvgAggregateOutputType | null
    _sum: T_usuarios_x_rolSumAggregateOutputType | null
    _min: T_usuarios_x_rolMinAggregateOutputType | null
    _max: T_usuarios_x_rolMaxAggregateOutputType | null
  }

  export type T_usuarios_x_rolAvgAggregateOutputType = {
    roleId: number | null
  }

  export type T_usuarios_x_rolSumAggregateOutputType = {
    roleId: number | null
  }

  export type T_usuarios_x_rolMinAggregateOutputType = {
    userId: string | null
    roleId: number | null
  }

  export type T_usuarios_x_rolMaxAggregateOutputType = {
    userId: string | null
    roleId: number | null
  }

  export type T_usuarios_x_rolCountAggregateOutputType = {
    userId: number
    roleId: number
    _all: number
  }


  export type T_usuarios_x_rolAvgAggregateInputType = {
    roleId?: true
  }

  export type T_usuarios_x_rolSumAggregateInputType = {
    roleId?: true
  }

  export type T_usuarios_x_rolMinAggregateInputType = {
    userId?: true
    roleId?: true
  }

  export type T_usuarios_x_rolMaxAggregateInputType = {
    userId?: true
    roleId?: true
  }

  export type T_usuarios_x_rolCountAggregateInputType = {
    userId?: true
    roleId?: true
    _all?: true
  }

  export type T_usuarios_x_rolAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_usuarios_x_rol to aggregate.
     */
    where?: t_usuarios_x_rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios_x_rols to fetch.
     */
    orderBy?: t_usuarios_x_rolOrderByWithRelationInput | t_usuarios_x_rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_usuarios_x_rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios_x_rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios_x_rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_usuarios_x_rols
    **/
    _count?: true | T_usuarios_x_rolCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_usuarios_x_rolAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_usuarios_x_rolSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_usuarios_x_rolMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_usuarios_x_rolMaxAggregateInputType
  }

  export type GetT_usuarios_x_rolAggregateType<T extends T_usuarios_x_rolAggregateArgs> = {
        [P in keyof T & keyof AggregateT_usuarios_x_rol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_usuarios_x_rol[P]>
      : GetScalarType<T[P], AggregateT_usuarios_x_rol[P]>
  }




  export type t_usuarios_x_rolGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_usuarios_x_rolWhereInput
    orderBy?: t_usuarios_x_rolOrderByWithAggregationInput | t_usuarios_x_rolOrderByWithAggregationInput[]
    by: T_usuarios_x_rolScalarFieldEnum[] | T_usuarios_x_rolScalarFieldEnum
    having?: t_usuarios_x_rolScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_usuarios_x_rolCountAggregateInputType | true
    _avg?: T_usuarios_x_rolAvgAggregateInputType
    _sum?: T_usuarios_x_rolSumAggregateInputType
    _min?: T_usuarios_x_rolMinAggregateInputType
    _max?: T_usuarios_x_rolMaxAggregateInputType
  }

  export type T_usuarios_x_rolGroupByOutputType = {
    userId: string
    roleId: number
    _count: T_usuarios_x_rolCountAggregateOutputType | null
    _avg: T_usuarios_x_rolAvgAggregateOutputType | null
    _sum: T_usuarios_x_rolSumAggregateOutputType | null
    _min: T_usuarios_x_rolMinAggregateOutputType | null
    _max: T_usuarios_x_rolMaxAggregateOutputType | null
  }

  type GetT_usuarios_x_rolGroupByPayload<T extends t_usuarios_x_rolGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_usuarios_x_rolGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_usuarios_x_rolGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_usuarios_x_rolGroupByOutputType[P]>
            : GetScalarType<T[P], T_usuarios_x_rolGroupByOutputType[P]>
        }
      >
    >


  export type t_usuarios_x_rolSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    userId?: boolean
    roleId?: boolean
    usuarios?: boolean | t_usuariosDefaultArgs<ExtArgs>
    roles?: boolean | t_rolesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_usuarios_x_rol"]>

  export type t_usuarios_x_rolSelectScalar = {
    userId?: boolean
    roleId?: boolean
  }


  export type t_usuarios_x_rolInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    usuarios?: boolean | t_usuariosDefaultArgs<ExtArgs>
    roles?: boolean | t_rolesDefaultArgs<ExtArgs>
  }


  export type $t_usuarios_x_rolPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_usuarios_x_rol"
    objects: {
      usuarios: Prisma.$t_usuariosPayload<ExtArgs>
      roles: Prisma.$t_rolesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      userId: string
      roleId: number
    }, ExtArgs["result"]["t_usuarios_x_rol"]>
    composites: {}
  }


  type t_usuarios_x_rolGetPayload<S extends boolean | null | undefined | t_usuarios_x_rolDefaultArgs> = $Result.GetResult<Prisma.$t_usuarios_x_rolPayload, S>

  type t_usuarios_x_rolCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_usuarios_x_rolFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_usuarios_x_rolCountAggregateInputType | true
    }

  export interface t_usuarios_x_rolDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_usuarios_x_rol'], meta: { name: 't_usuarios_x_rol' } }
    /**
     * Find zero or one T_usuarios_x_rol that matches the filter.
     * @param {t_usuarios_x_rolFindUniqueArgs} args - Arguments to find a T_usuarios_x_rol
     * @example
     * // Get one T_usuarios_x_rol
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_usuarios_x_rolFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuarios_x_rolFindUniqueArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_usuarios_x_rol that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_usuarios_x_rolFindUniqueOrThrowArgs} args - Arguments to find a T_usuarios_x_rol
     * @example
     * // Get one T_usuarios_x_rol
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_usuarios_x_rolFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuarios_x_rolFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_usuarios_x_rol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuarios_x_rolFindFirstArgs} args - Arguments to find a T_usuarios_x_rol
     * @example
     * // Get one T_usuarios_x_rol
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_usuarios_x_rolFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuarios_x_rolFindFirstArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_usuarios_x_rol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuarios_x_rolFindFirstOrThrowArgs} args - Arguments to find a T_usuarios_x_rol
     * @example
     * // Get one T_usuarios_x_rol
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_usuarios_x_rolFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuarios_x_rolFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_usuarios_x_rols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuarios_x_rolFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_usuarios_x_rols
     * const t_usuarios_x_rols = await prisma.t_usuarios_x_rol.findMany()
     * 
     * // Get first 10 T_usuarios_x_rols
     * const t_usuarios_x_rols = await prisma.t_usuarios_x_rol.findMany({ take: 10 })
     * 
     * // Only select the `userId`
     * const t_usuarios_x_rolWithUserIdOnly = await prisma.t_usuarios_x_rol.findMany({ select: { userId: true } })
     * 
    **/
    findMany<T extends t_usuarios_x_rolFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuarios_x_rolFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_usuarios_x_rol.
     * @param {t_usuarios_x_rolCreateArgs} args - Arguments to create a T_usuarios_x_rol.
     * @example
     * // Create one T_usuarios_x_rol
     * const T_usuarios_x_rol = await prisma.t_usuarios_x_rol.create({
     *   data: {
     *     // ... data to create a T_usuarios_x_rol
     *   }
     * })
     * 
    **/
    create<T extends t_usuarios_x_rolCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuarios_x_rolCreateArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_usuarios_x_rols.
     * @param {t_usuarios_x_rolCreateManyArgs} args - Arguments to create many T_usuarios_x_rols.
     * @example
     * // Create many T_usuarios_x_rols
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_usuarios_x_rolCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuarios_x_rolCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_usuarios_x_rol.
     * @param {t_usuarios_x_rolDeleteArgs} args - Arguments to delete one T_usuarios_x_rol.
     * @example
     * // Delete one T_usuarios_x_rol
     * const T_usuarios_x_rol = await prisma.t_usuarios_x_rol.delete({
     *   where: {
     *     // ... filter to delete one T_usuarios_x_rol
     *   }
     * })
     * 
    **/
    delete<T extends t_usuarios_x_rolDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuarios_x_rolDeleteArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_usuarios_x_rol.
     * @param {t_usuarios_x_rolUpdateArgs} args - Arguments to update one T_usuarios_x_rol.
     * @example
     * // Update one T_usuarios_x_rol
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_usuarios_x_rolUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuarios_x_rolUpdateArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_usuarios_x_rols.
     * @param {t_usuarios_x_rolDeleteManyArgs} args - Arguments to filter T_usuarios_x_rols to delete.
     * @example
     * // Delete a few T_usuarios_x_rols
     * const { count } = await prisma.t_usuarios_x_rol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_usuarios_x_rolDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_usuarios_x_rolDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_usuarios_x_rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuarios_x_rolUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_usuarios_x_rols
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_usuarios_x_rolUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuarios_x_rolUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_usuarios_x_rol.
     * @param {t_usuarios_x_rolUpsertArgs} args - Arguments to update or create a T_usuarios_x_rol.
     * @example
     * // Update or create a T_usuarios_x_rol
     * const t_usuarios_x_rol = await prisma.t_usuarios_x_rol.upsert({
     *   create: {
     *     // ... data to create a T_usuarios_x_rol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_usuarios_x_rol we want to update
     *   }
     * })
    **/
    upsert<T extends t_usuarios_x_rolUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_usuarios_x_rolUpsertArgs<ExtArgs>>
    ): Prisma__t_usuarios_x_rolClient<$Result.GetResult<Prisma.$t_usuarios_x_rolPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_usuarios_x_rols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuarios_x_rolCountArgs} args - Arguments to filter T_usuarios_x_rols to count.
     * @example
     * // Count the number of T_usuarios_x_rols
     * const count = await prisma.t_usuarios_x_rol.count({
     *   where: {
     *     // ... the filter for the T_usuarios_x_rols we want to count
     *   }
     * })
    **/
    count<T extends t_usuarios_x_rolCountArgs>(
      args?: Subset<T, t_usuarios_x_rolCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_usuarios_x_rolCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_usuarios_x_rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_usuarios_x_rolAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_usuarios_x_rolAggregateArgs>(args: Subset<T, T_usuarios_x_rolAggregateArgs>): Prisma.PrismaPromise<GetT_usuarios_x_rolAggregateType<T>>

    /**
     * Group by T_usuarios_x_rol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_usuarios_x_rolGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_usuarios_x_rolGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_usuarios_x_rolGroupByArgs['orderBy'] }
        : { orderBy?: t_usuarios_x_rolGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_usuarios_x_rolGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_usuarios_x_rolGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_usuarios_x_rol model
   */
  readonly fields: t_usuarios_x_rolFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_usuarios_x_rol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_usuarios_x_rolClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    usuarios<T extends t_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_usuariosDefaultArgs<ExtArgs>>): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    roles<T extends t_rolesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_rolesDefaultArgs<ExtArgs>>): Prisma__t_rolesClient<$Result.GetResult<Prisma.$t_rolesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_usuarios_x_rol model
   */ 
  interface t_usuarios_x_rolFieldRefs {
    readonly userId: FieldRef<"t_usuarios_x_rol", 'String'>
    readonly roleId: FieldRef<"t_usuarios_x_rol", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * t_usuarios_x_rol findUnique
   */
  export type t_usuarios_x_rolFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios_x_rol to fetch.
     */
    where: t_usuarios_x_rolWhereUniqueInput
  }

  /**
   * t_usuarios_x_rol findUniqueOrThrow
   */
  export type t_usuarios_x_rolFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios_x_rol to fetch.
     */
    where: t_usuarios_x_rolWhereUniqueInput
  }

  /**
   * t_usuarios_x_rol findFirst
   */
  export type t_usuarios_x_rolFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios_x_rol to fetch.
     */
    where?: t_usuarios_x_rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios_x_rols to fetch.
     */
    orderBy?: t_usuarios_x_rolOrderByWithRelationInput | t_usuarios_x_rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_usuarios_x_rols.
     */
    cursor?: t_usuarios_x_rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios_x_rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios_x_rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_usuarios_x_rols.
     */
    distinct?: T_usuarios_x_rolScalarFieldEnum | T_usuarios_x_rolScalarFieldEnum[]
  }

  /**
   * t_usuarios_x_rol findFirstOrThrow
   */
  export type t_usuarios_x_rolFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios_x_rol to fetch.
     */
    where?: t_usuarios_x_rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios_x_rols to fetch.
     */
    orderBy?: t_usuarios_x_rolOrderByWithRelationInput | t_usuarios_x_rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_usuarios_x_rols.
     */
    cursor?: t_usuarios_x_rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios_x_rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios_x_rols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_usuarios_x_rols.
     */
    distinct?: T_usuarios_x_rolScalarFieldEnum | T_usuarios_x_rolScalarFieldEnum[]
  }

  /**
   * t_usuarios_x_rol findMany
   */
  export type t_usuarios_x_rolFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * Filter, which t_usuarios_x_rols to fetch.
     */
    where?: t_usuarios_x_rolWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_usuarios_x_rols to fetch.
     */
    orderBy?: t_usuarios_x_rolOrderByWithRelationInput | t_usuarios_x_rolOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_usuarios_x_rols.
     */
    cursor?: t_usuarios_x_rolWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_usuarios_x_rols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_usuarios_x_rols.
     */
    skip?: number
    distinct?: T_usuarios_x_rolScalarFieldEnum | T_usuarios_x_rolScalarFieldEnum[]
  }

  /**
   * t_usuarios_x_rol create
   */
  export type t_usuarios_x_rolCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * The data needed to create a t_usuarios_x_rol.
     */
    data: XOR<t_usuarios_x_rolCreateInput, t_usuarios_x_rolUncheckedCreateInput>
  }

  /**
   * t_usuarios_x_rol createMany
   */
  export type t_usuarios_x_rolCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_usuarios_x_rols.
     */
    data: t_usuarios_x_rolCreateManyInput | t_usuarios_x_rolCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_usuarios_x_rol update
   */
  export type t_usuarios_x_rolUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * The data needed to update a t_usuarios_x_rol.
     */
    data: XOR<t_usuarios_x_rolUpdateInput, t_usuarios_x_rolUncheckedUpdateInput>
    /**
     * Choose, which t_usuarios_x_rol to update.
     */
    where: t_usuarios_x_rolWhereUniqueInput
  }

  /**
   * t_usuarios_x_rol updateMany
   */
  export type t_usuarios_x_rolUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_usuarios_x_rols.
     */
    data: XOR<t_usuarios_x_rolUpdateManyMutationInput, t_usuarios_x_rolUncheckedUpdateManyInput>
    /**
     * Filter which t_usuarios_x_rols to update
     */
    where?: t_usuarios_x_rolWhereInput
  }

  /**
   * t_usuarios_x_rol upsert
   */
  export type t_usuarios_x_rolUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * The filter to search for the t_usuarios_x_rol to update in case it exists.
     */
    where: t_usuarios_x_rolWhereUniqueInput
    /**
     * In case the t_usuarios_x_rol found by the `where` argument doesn't exist, create a new t_usuarios_x_rol with this data.
     */
    create: XOR<t_usuarios_x_rolCreateInput, t_usuarios_x_rolUncheckedCreateInput>
    /**
     * In case the t_usuarios_x_rol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_usuarios_x_rolUpdateInput, t_usuarios_x_rolUncheckedUpdateInput>
  }

  /**
   * t_usuarios_x_rol delete
   */
  export type t_usuarios_x_rolDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
    /**
     * Filter which t_usuarios_x_rol to delete.
     */
    where: t_usuarios_x_rolWhereUniqueInput
  }

  /**
   * t_usuarios_x_rol deleteMany
   */
  export type t_usuarios_x_rolDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_usuarios_x_rols to delete
     */
    where?: t_usuarios_x_rolWhereInput
  }

  /**
   * t_usuarios_x_rol without action
   */
  export type t_usuarios_x_rolDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuarios_x_rol
     */
    select?: t_usuarios_x_rolSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuarios_x_rolInclude<ExtArgs> | null
  }


  /**
   * Model t_afectaciones
   */

  export type AggregateT_afectaciones = {
    _count: T_afectacionesCountAggregateOutputType | null
    _avg: T_afectacionesAvgAggregateOutputType | null
    _sum: T_afectacionesSumAggregateOutputType | null
    _min: T_afectacionesMinAggregateOutputType | null
    _max: T_afectacionesMaxAggregateOutputType | null
  }

  export type T_afectacionesAvgAggregateOutputType = {
    id: number | null
  }

  export type T_afectacionesSumAggregateOutputType = {
    id: number | null
  }

  export type T_afectacionesMinAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_afectacionesMaxAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_afectacionesCountAggregateOutputType = {
    id: number
    descripcion: number
    _all: number
  }


  export type T_afectacionesAvgAggregateInputType = {
    id?: true
  }

  export type T_afectacionesSumAggregateInputType = {
    id?: true
  }

  export type T_afectacionesMinAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_afectacionesMaxAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_afectacionesCountAggregateInputType = {
    id?: true
    descripcion?: true
    _all?: true
  }

  export type T_afectacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_afectaciones to aggregate.
     */
    where?: t_afectacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_afectaciones to fetch.
     */
    orderBy?: t_afectacionesOrderByWithRelationInput | t_afectacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_afectacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_afectaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_afectaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_afectaciones
    **/
    _count?: true | T_afectacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_afectacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_afectacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_afectacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_afectacionesMaxAggregateInputType
  }

  export type GetT_afectacionesAggregateType<T extends T_afectacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateT_afectaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_afectaciones[P]>
      : GetScalarType<T[P], AggregateT_afectaciones[P]>
  }




  export type t_afectacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_afectacionesWhereInput
    orderBy?: t_afectacionesOrderByWithAggregationInput | t_afectacionesOrderByWithAggregationInput[]
    by: T_afectacionesScalarFieldEnum[] | T_afectacionesScalarFieldEnum
    having?: t_afectacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_afectacionesCountAggregateInputType | true
    _avg?: T_afectacionesAvgAggregateInputType
    _sum?: T_afectacionesSumAggregateInputType
    _min?: T_afectacionesMinAggregateInputType
    _max?: T_afectacionesMaxAggregateInputType
  }

  export type T_afectacionesGroupByOutputType = {
    id: number
    descripcion: string
    _count: T_afectacionesCountAggregateOutputType | null
    _avg: T_afectacionesAvgAggregateOutputType | null
    _sum: T_afectacionesSumAggregateOutputType | null
    _min: T_afectacionesMinAggregateOutputType | null
    _max: T_afectacionesMaxAggregateOutputType | null
  }

  type GetT_afectacionesGroupByPayload<T extends t_afectacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_afectacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_afectacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_afectacionesGroupByOutputType[P]>
            : GetScalarType<T[P], T_afectacionesGroupByOutputType[P]>
        }
      >
    >


  export type t_afectacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    incidencias?: boolean | t_afectaciones$incidenciasArgs<ExtArgs>
    _count?: boolean | T_afectacionesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_afectaciones"]>

  export type t_afectacionesSelectScalar = {
    id?: boolean
    descripcion?: boolean
  }


  export type t_afectacionesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | t_afectaciones$incidenciasArgs<ExtArgs>
    _count?: boolean | T_afectacionesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_afectacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_afectaciones"
    objects: {
      incidencias: Prisma.$t_incidenciasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descripcion: string
    }, ExtArgs["result"]["t_afectaciones"]>
    composites: {}
  }


  type t_afectacionesGetPayload<S extends boolean | null | undefined | t_afectacionesDefaultArgs> = $Result.GetResult<Prisma.$t_afectacionesPayload, S>

  type t_afectacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_afectacionesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_afectacionesCountAggregateInputType | true
    }

  export interface t_afectacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_afectaciones'], meta: { name: 't_afectaciones' } }
    /**
     * Find zero or one T_afectaciones that matches the filter.
     * @param {t_afectacionesFindUniqueArgs} args - Arguments to find a T_afectaciones
     * @example
     * // Get one T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_afectacionesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_afectacionesFindUniqueArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_afectaciones that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_afectacionesFindUniqueOrThrowArgs} args - Arguments to find a T_afectaciones
     * @example
     * // Get one T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_afectacionesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_afectacionesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_afectaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_afectacionesFindFirstArgs} args - Arguments to find a T_afectaciones
     * @example
     * // Get one T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_afectacionesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_afectacionesFindFirstArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_afectaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_afectacionesFindFirstOrThrowArgs} args - Arguments to find a T_afectaciones
     * @example
     * // Get one T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_afectacionesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_afectacionesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_afectaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_afectacionesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.findMany()
     * 
     * // Get first 10 T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const t_afectacionesWithIdOnly = await prisma.t_afectaciones.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends t_afectacionesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_afectacionesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_afectaciones.
     * @param {t_afectacionesCreateArgs} args - Arguments to create a T_afectaciones.
     * @example
     * // Create one T_afectaciones
     * const T_afectaciones = await prisma.t_afectaciones.create({
     *   data: {
     *     // ... data to create a T_afectaciones
     *   }
     * })
     * 
    **/
    create<T extends t_afectacionesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_afectacionesCreateArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_afectaciones.
     * @param {t_afectacionesCreateManyArgs} args - Arguments to create many T_afectaciones.
     * @example
     * // Create many T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_afectacionesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_afectacionesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_afectaciones.
     * @param {t_afectacionesDeleteArgs} args - Arguments to delete one T_afectaciones.
     * @example
     * // Delete one T_afectaciones
     * const T_afectaciones = await prisma.t_afectaciones.delete({
     *   where: {
     *     // ... filter to delete one T_afectaciones
     *   }
     * })
     * 
    **/
    delete<T extends t_afectacionesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_afectacionesDeleteArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_afectaciones.
     * @param {t_afectacionesUpdateArgs} args - Arguments to update one T_afectaciones.
     * @example
     * // Update one T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_afectacionesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_afectacionesUpdateArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_afectaciones.
     * @param {t_afectacionesDeleteManyArgs} args - Arguments to filter T_afectaciones to delete.
     * @example
     * // Delete a few T_afectaciones
     * const { count } = await prisma.t_afectaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_afectacionesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_afectacionesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_afectaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_afectacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_afectacionesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_afectacionesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_afectaciones.
     * @param {t_afectacionesUpsertArgs} args - Arguments to update or create a T_afectaciones.
     * @example
     * // Update or create a T_afectaciones
     * const t_afectaciones = await prisma.t_afectaciones.upsert({
     *   create: {
     *     // ... data to create a T_afectaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_afectaciones we want to update
     *   }
     * })
    **/
    upsert<T extends t_afectacionesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_afectacionesUpsertArgs<ExtArgs>>
    ): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_afectaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_afectacionesCountArgs} args - Arguments to filter T_afectaciones to count.
     * @example
     * // Count the number of T_afectaciones
     * const count = await prisma.t_afectaciones.count({
     *   where: {
     *     // ... the filter for the T_afectaciones we want to count
     *   }
     * })
    **/
    count<T extends t_afectacionesCountArgs>(
      args?: Subset<T, t_afectacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_afectacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_afectaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_afectacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_afectacionesAggregateArgs>(args: Subset<T, T_afectacionesAggregateArgs>): Prisma.PrismaPromise<GetT_afectacionesAggregateType<T>>

    /**
     * Group by T_afectaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_afectacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_afectacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_afectacionesGroupByArgs['orderBy'] }
        : { orderBy?: t_afectacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_afectacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_afectacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_afectaciones model
   */
  readonly fields: t_afectacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_afectaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_afectacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencias<T extends t_afectaciones$incidenciasArgs<ExtArgs> = {}>(args?: Subset<T, t_afectaciones$incidenciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_afectaciones model
   */ 
  interface t_afectacionesFieldRefs {
    readonly id: FieldRef<"t_afectaciones", 'Int'>
    readonly descripcion: FieldRef<"t_afectaciones", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_afectaciones findUnique
   */
  export type t_afectacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * Filter, which t_afectaciones to fetch.
     */
    where: t_afectacionesWhereUniqueInput
  }

  /**
   * t_afectaciones findUniqueOrThrow
   */
  export type t_afectacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * Filter, which t_afectaciones to fetch.
     */
    where: t_afectacionesWhereUniqueInput
  }

  /**
   * t_afectaciones findFirst
   */
  export type t_afectacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * Filter, which t_afectaciones to fetch.
     */
    where?: t_afectacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_afectaciones to fetch.
     */
    orderBy?: t_afectacionesOrderByWithRelationInput | t_afectacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_afectaciones.
     */
    cursor?: t_afectacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_afectaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_afectaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_afectaciones.
     */
    distinct?: T_afectacionesScalarFieldEnum | T_afectacionesScalarFieldEnum[]
  }

  /**
   * t_afectaciones findFirstOrThrow
   */
  export type t_afectacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * Filter, which t_afectaciones to fetch.
     */
    where?: t_afectacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_afectaciones to fetch.
     */
    orderBy?: t_afectacionesOrderByWithRelationInput | t_afectacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_afectaciones.
     */
    cursor?: t_afectacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_afectaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_afectaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_afectaciones.
     */
    distinct?: T_afectacionesScalarFieldEnum | T_afectacionesScalarFieldEnum[]
  }

  /**
   * t_afectaciones findMany
   */
  export type t_afectacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * Filter, which t_afectaciones to fetch.
     */
    where?: t_afectacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_afectaciones to fetch.
     */
    orderBy?: t_afectacionesOrderByWithRelationInput | t_afectacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_afectaciones.
     */
    cursor?: t_afectacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_afectaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_afectaciones.
     */
    skip?: number
    distinct?: T_afectacionesScalarFieldEnum | T_afectacionesScalarFieldEnum[]
  }

  /**
   * t_afectaciones create
   */
  export type t_afectacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * The data needed to create a t_afectaciones.
     */
    data: XOR<t_afectacionesCreateInput, t_afectacionesUncheckedCreateInput>
  }

  /**
   * t_afectaciones createMany
   */
  export type t_afectacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_afectaciones.
     */
    data: t_afectacionesCreateManyInput | t_afectacionesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_afectaciones update
   */
  export type t_afectacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * The data needed to update a t_afectaciones.
     */
    data: XOR<t_afectacionesUpdateInput, t_afectacionesUncheckedUpdateInput>
    /**
     * Choose, which t_afectaciones to update.
     */
    where: t_afectacionesWhereUniqueInput
  }

  /**
   * t_afectaciones updateMany
   */
  export type t_afectacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_afectaciones.
     */
    data: XOR<t_afectacionesUpdateManyMutationInput, t_afectacionesUncheckedUpdateManyInput>
    /**
     * Filter which t_afectaciones to update
     */
    where?: t_afectacionesWhereInput
  }

  /**
   * t_afectaciones upsert
   */
  export type t_afectacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * The filter to search for the t_afectaciones to update in case it exists.
     */
    where: t_afectacionesWhereUniqueInput
    /**
     * In case the t_afectaciones found by the `where` argument doesn't exist, create a new t_afectaciones with this data.
     */
    create: XOR<t_afectacionesCreateInput, t_afectacionesUncheckedCreateInput>
    /**
     * In case the t_afectaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_afectacionesUpdateInput, t_afectacionesUncheckedUpdateInput>
  }

  /**
   * t_afectaciones delete
   */
  export type t_afectacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
    /**
     * Filter which t_afectaciones to delete.
     */
    where: t_afectacionesWhereUniqueInput
  }

  /**
   * t_afectaciones deleteMany
   */
  export type t_afectacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_afectaciones to delete
     */
    where?: t_afectacionesWhereInput
  }

  /**
   * t_afectaciones.incidencias
   */
  export type t_afectaciones$incidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    where?: t_incidenciasWhereInput
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    cursor?: t_incidenciasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_afectaciones without action
   */
  export type t_afectacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_afectaciones
     */
    select?: t_afectacionesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_afectacionesInclude<ExtArgs> | null
  }


  /**
   * Model t_categorias
   */

  export type AggregateT_categorias = {
    _count: T_categoriasCountAggregateOutputType | null
    _avg: T_categoriasAvgAggregateOutputType | null
    _sum: T_categoriasSumAggregateOutputType | null
    _min: T_categoriasMinAggregateOutputType | null
    _max: T_categoriasMaxAggregateOutputType | null
  }

  export type T_categoriasAvgAggregateOutputType = {
    id: number | null
  }

  export type T_categoriasSumAggregateOutputType = {
    id: number | null
  }

  export type T_categoriasMinAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_categoriasMaxAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_categoriasCountAggregateOutputType = {
    id: number
    descripcion: number
    _all: number
  }


  export type T_categoriasAvgAggregateInputType = {
    id?: true
  }

  export type T_categoriasSumAggregateInputType = {
    id?: true
  }

  export type T_categoriasMinAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_categoriasMaxAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_categoriasCountAggregateInputType = {
    id?: true
    descripcion?: true
    _all?: true
  }

  export type T_categoriasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_categorias to aggregate.
     */
    where?: t_categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_categorias to fetch.
     */
    orderBy?: t_categoriasOrderByWithRelationInput | t_categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_categorias
    **/
    _count?: true | T_categoriasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_categoriasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_categoriasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_categoriasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_categoriasMaxAggregateInputType
  }

  export type GetT_categoriasAggregateType<T extends T_categoriasAggregateArgs> = {
        [P in keyof T & keyof AggregateT_categorias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_categorias[P]>
      : GetScalarType<T[P], AggregateT_categorias[P]>
  }




  export type t_categoriasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_categoriasWhereInput
    orderBy?: t_categoriasOrderByWithAggregationInput | t_categoriasOrderByWithAggregationInput[]
    by: T_categoriasScalarFieldEnum[] | T_categoriasScalarFieldEnum
    having?: t_categoriasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_categoriasCountAggregateInputType | true
    _avg?: T_categoriasAvgAggregateInputType
    _sum?: T_categoriasSumAggregateInputType
    _min?: T_categoriasMinAggregateInputType
    _max?: T_categoriasMaxAggregateInputType
  }

  export type T_categoriasGroupByOutputType = {
    id: number
    descripcion: string
    _count: T_categoriasCountAggregateOutputType | null
    _avg: T_categoriasAvgAggregateOutputType | null
    _sum: T_categoriasSumAggregateOutputType | null
    _min: T_categoriasMinAggregateOutputType | null
    _max: T_categoriasMaxAggregateOutputType | null
  }

  type GetT_categoriasGroupByPayload<T extends t_categoriasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_categoriasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_categoriasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_categoriasGroupByOutputType[P]>
            : GetScalarType<T[P], T_categoriasGroupByOutputType[P]>
        }
      >
    >


  export type t_categoriasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    incidencias?: boolean | t_categorias$incidenciasArgs<ExtArgs>
    _count?: boolean | T_categoriasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_categorias"]>

  export type t_categoriasSelectScalar = {
    id?: boolean
    descripcion?: boolean
  }


  export type t_categoriasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | t_categorias$incidenciasArgs<ExtArgs>
    _count?: boolean | T_categoriasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_categoriasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_categorias"
    objects: {
      incidencias: Prisma.$t_incidenciasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descripcion: string
    }, ExtArgs["result"]["t_categorias"]>
    composites: {}
  }


  type t_categoriasGetPayload<S extends boolean | null | undefined | t_categoriasDefaultArgs> = $Result.GetResult<Prisma.$t_categoriasPayload, S>

  type t_categoriasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_categoriasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_categoriasCountAggregateInputType | true
    }

  export interface t_categoriasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_categorias'], meta: { name: 't_categorias' } }
    /**
     * Find zero or one T_categorias that matches the filter.
     * @param {t_categoriasFindUniqueArgs} args - Arguments to find a T_categorias
     * @example
     * // Get one T_categorias
     * const t_categorias = await prisma.t_categorias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_categoriasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_categoriasFindUniqueArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_categorias that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_categoriasFindUniqueOrThrowArgs} args - Arguments to find a T_categorias
     * @example
     * // Get one T_categorias
     * const t_categorias = await prisma.t_categorias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_categoriasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_categoriasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_categoriasFindFirstArgs} args - Arguments to find a T_categorias
     * @example
     * // Get one T_categorias
     * const t_categorias = await prisma.t_categorias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_categoriasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_categoriasFindFirstArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_categorias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_categoriasFindFirstOrThrowArgs} args - Arguments to find a T_categorias
     * @example
     * // Get one T_categorias
     * const t_categorias = await prisma.t_categorias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_categoriasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_categoriasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_categorias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_categoriasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_categorias
     * const t_categorias = await prisma.t_categorias.findMany()
     * 
     * // Get first 10 T_categorias
     * const t_categorias = await prisma.t_categorias.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const t_categoriasWithIdOnly = await prisma.t_categorias.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends t_categoriasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_categoriasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_categorias.
     * @param {t_categoriasCreateArgs} args - Arguments to create a T_categorias.
     * @example
     * // Create one T_categorias
     * const T_categorias = await prisma.t_categorias.create({
     *   data: {
     *     // ... data to create a T_categorias
     *   }
     * })
     * 
    **/
    create<T extends t_categoriasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_categoriasCreateArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_categorias.
     * @param {t_categoriasCreateManyArgs} args - Arguments to create many T_categorias.
     * @example
     * // Create many T_categorias
     * const t_categorias = await prisma.t_categorias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_categoriasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_categoriasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_categorias.
     * @param {t_categoriasDeleteArgs} args - Arguments to delete one T_categorias.
     * @example
     * // Delete one T_categorias
     * const T_categorias = await prisma.t_categorias.delete({
     *   where: {
     *     // ... filter to delete one T_categorias
     *   }
     * })
     * 
    **/
    delete<T extends t_categoriasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_categoriasDeleteArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_categorias.
     * @param {t_categoriasUpdateArgs} args - Arguments to update one T_categorias.
     * @example
     * // Update one T_categorias
     * const t_categorias = await prisma.t_categorias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_categoriasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_categoriasUpdateArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_categorias.
     * @param {t_categoriasDeleteManyArgs} args - Arguments to filter T_categorias to delete.
     * @example
     * // Delete a few T_categorias
     * const { count } = await prisma.t_categorias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_categoriasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_categoriasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_categoriasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_categorias
     * const t_categorias = await prisma.t_categorias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_categoriasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_categoriasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_categorias.
     * @param {t_categoriasUpsertArgs} args - Arguments to update or create a T_categorias.
     * @example
     * // Update or create a T_categorias
     * const t_categorias = await prisma.t_categorias.upsert({
     *   create: {
     *     // ... data to create a T_categorias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_categorias we want to update
     *   }
     * })
    **/
    upsert<T extends t_categoriasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_categoriasUpsertArgs<ExtArgs>>
    ): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_categoriasCountArgs} args - Arguments to filter T_categorias to count.
     * @example
     * // Count the number of T_categorias
     * const count = await prisma.t_categorias.count({
     *   where: {
     *     // ... the filter for the T_categorias we want to count
     *   }
     * })
    **/
    count<T extends t_categoriasCountArgs>(
      args?: Subset<T, t_categoriasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_categoriasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_categoriasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_categoriasAggregateArgs>(args: Subset<T, T_categoriasAggregateArgs>): Prisma.PrismaPromise<GetT_categoriasAggregateType<T>>

    /**
     * Group by T_categorias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_categoriasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_categoriasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_categoriasGroupByArgs['orderBy'] }
        : { orderBy?: t_categoriasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_categoriasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_categoriasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_categorias model
   */
  readonly fields: t_categoriasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_categorias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_categoriasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencias<T extends t_categorias$incidenciasArgs<ExtArgs> = {}>(args?: Subset<T, t_categorias$incidenciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_categorias model
   */ 
  interface t_categoriasFieldRefs {
    readonly id: FieldRef<"t_categorias", 'Int'>
    readonly descripcion: FieldRef<"t_categorias", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_categorias findUnique
   */
  export type t_categoriasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * Filter, which t_categorias to fetch.
     */
    where: t_categoriasWhereUniqueInput
  }

  /**
   * t_categorias findUniqueOrThrow
   */
  export type t_categoriasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * Filter, which t_categorias to fetch.
     */
    where: t_categoriasWhereUniqueInput
  }

  /**
   * t_categorias findFirst
   */
  export type t_categoriasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * Filter, which t_categorias to fetch.
     */
    where?: t_categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_categorias to fetch.
     */
    orderBy?: t_categoriasOrderByWithRelationInput | t_categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_categorias.
     */
    cursor?: t_categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_categorias.
     */
    distinct?: T_categoriasScalarFieldEnum | T_categoriasScalarFieldEnum[]
  }

  /**
   * t_categorias findFirstOrThrow
   */
  export type t_categoriasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * Filter, which t_categorias to fetch.
     */
    where?: t_categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_categorias to fetch.
     */
    orderBy?: t_categoriasOrderByWithRelationInput | t_categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_categorias.
     */
    cursor?: t_categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_categorias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_categorias.
     */
    distinct?: T_categoriasScalarFieldEnum | T_categoriasScalarFieldEnum[]
  }

  /**
   * t_categorias findMany
   */
  export type t_categoriasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * Filter, which t_categorias to fetch.
     */
    where?: t_categoriasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_categorias to fetch.
     */
    orderBy?: t_categoriasOrderByWithRelationInput | t_categoriasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_categorias.
     */
    cursor?: t_categoriasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_categorias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_categorias.
     */
    skip?: number
    distinct?: T_categoriasScalarFieldEnum | T_categoriasScalarFieldEnum[]
  }

  /**
   * t_categorias create
   */
  export type t_categoriasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * The data needed to create a t_categorias.
     */
    data: XOR<t_categoriasCreateInput, t_categoriasUncheckedCreateInput>
  }

  /**
   * t_categorias createMany
   */
  export type t_categoriasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_categorias.
     */
    data: t_categoriasCreateManyInput | t_categoriasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_categorias update
   */
  export type t_categoriasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * The data needed to update a t_categorias.
     */
    data: XOR<t_categoriasUpdateInput, t_categoriasUncheckedUpdateInput>
    /**
     * Choose, which t_categorias to update.
     */
    where: t_categoriasWhereUniqueInput
  }

  /**
   * t_categorias updateMany
   */
  export type t_categoriasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_categorias.
     */
    data: XOR<t_categoriasUpdateManyMutationInput, t_categoriasUncheckedUpdateManyInput>
    /**
     * Filter which t_categorias to update
     */
    where?: t_categoriasWhereInput
  }

  /**
   * t_categorias upsert
   */
  export type t_categoriasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * The filter to search for the t_categorias to update in case it exists.
     */
    where: t_categoriasWhereUniqueInput
    /**
     * In case the t_categorias found by the `where` argument doesn't exist, create a new t_categorias with this data.
     */
    create: XOR<t_categoriasCreateInput, t_categoriasUncheckedCreateInput>
    /**
     * In case the t_categorias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_categoriasUpdateInput, t_categoriasUncheckedUpdateInput>
  }

  /**
   * t_categorias delete
   */
  export type t_categoriasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
    /**
     * Filter which t_categorias to delete.
     */
    where: t_categoriasWhereUniqueInput
  }

  /**
   * t_categorias deleteMany
   */
  export type t_categoriasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_categorias to delete
     */
    where?: t_categoriasWhereInput
  }

  /**
   * t_categorias.incidencias
   */
  export type t_categorias$incidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    where?: t_incidenciasWhereInput
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    cursor?: t_incidenciasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_categorias without action
   */
  export type t_categoriasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_categorias
     */
    select?: t_categoriasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_categoriasInclude<ExtArgs> | null
  }


  /**
   * Model t_estados
   */

  export type AggregateT_estados = {
    _count: T_estadosCountAggregateOutputType | null
    _avg: T_estadosAvgAggregateOutputType | null
    _sum: T_estadosSumAggregateOutputType | null
    _min: T_estadosMinAggregateOutputType | null
    _max: T_estadosMaxAggregateOutputType | null
  }

  export type T_estadosAvgAggregateOutputType = {
    id: number | null
  }

  export type T_estadosSumAggregateOutputType = {
    id: number | null
  }

  export type T_estadosMinAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_estadosMaxAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_estadosCountAggregateOutputType = {
    id: number
    descripcion: number
    _all: number
  }


  export type T_estadosAvgAggregateInputType = {
    id?: true
  }

  export type T_estadosSumAggregateInputType = {
    id?: true
  }

  export type T_estadosMinAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_estadosMaxAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_estadosCountAggregateInputType = {
    id?: true
    descripcion?: true
    _all?: true
  }

  export type T_estadosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_estados to aggregate.
     */
    where?: t_estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_estados to fetch.
     */
    orderBy?: t_estadosOrderByWithRelationInput | t_estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_estados
    **/
    _count?: true | T_estadosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_estadosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_estadosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_estadosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_estadosMaxAggregateInputType
  }

  export type GetT_estadosAggregateType<T extends T_estadosAggregateArgs> = {
        [P in keyof T & keyof AggregateT_estados]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_estados[P]>
      : GetScalarType<T[P], AggregateT_estados[P]>
  }




  export type t_estadosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_estadosWhereInput
    orderBy?: t_estadosOrderByWithAggregationInput | t_estadosOrderByWithAggregationInput[]
    by: T_estadosScalarFieldEnum[] | T_estadosScalarFieldEnum
    having?: t_estadosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_estadosCountAggregateInputType | true
    _avg?: T_estadosAvgAggregateInputType
    _sum?: T_estadosSumAggregateInputType
    _min?: T_estadosMinAggregateInputType
    _max?: T_estadosMaxAggregateInputType
  }

  export type T_estadosGroupByOutputType = {
    id: number
    descripcion: string
    _count: T_estadosCountAggregateOutputType | null
    _avg: T_estadosAvgAggregateOutputType | null
    _sum: T_estadosSumAggregateOutputType | null
    _min: T_estadosMinAggregateOutputType | null
    _max: T_estadosMaxAggregateOutputType | null
  }

  type GetT_estadosGroupByPayload<T extends t_estadosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_estadosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_estadosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_estadosGroupByOutputType[P]>
            : GetScalarType<T[P], T_estadosGroupByOutputType[P]>
        }
      >
    >


  export type t_estadosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    incidencias?: boolean | t_estados$incidenciasArgs<ExtArgs>
    _count?: boolean | T_estadosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_estados"]>

  export type t_estadosSelectScalar = {
    id?: boolean
    descripcion?: boolean
  }


  export type t_estadosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | t_estados$incidenciasArgs<ExtArgs>
    _count?: boolean | T_estadosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_estadosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_estados"
    objects: {
      incidencias: Prisma.$t_incidenciasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descripcion: string
    }, ExtArgs["result"]["t_estados"]>
    composites: {}
  }


  type t_estadosGetPayload<S extends boolean | null | undefined | t_estadosDefaultArgs> = $Result.GetResult<Prisma.$t_estadosPayload, S>

  type t_estadosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_estadosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_estadosCountAggregateInputType | true
    }

  export interface t_estadosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_estados'], meta: { name: 't_estados' } }
    /**
     * Find zero or one T_estados that matches the filter.
     * @param {t_estadosFindUniqueArgs} args - Arguments to find a T_estados
     * @example
     * // Get one T_estados
     * const t_estados = await prisma.t_estados.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_estadosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_estadosFindUniqueArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_estados that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_estadosFindUniqueOrThrowArgs} args - Arguments to find a T_estados
     * @example
     * // Get one T_estados
     * const t_estados = await prisma.t_estados.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_estadosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_estadosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_estados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_estadosFindFirstArgs} args - Arguments to find a T_estados
     * @example
     * // Get one T_estados
     * const t_estados = await prisma.t_estados.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_estadosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_estadosFindFirstArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_estados that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_estadosFindFirstOrThrowArgs} args - Arguments to find a T_estados
     * @example
     * // Get one T_estados
     * const t_estados = await prisma.t_estados.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_estadosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_estadosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_estados that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_estadosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_estados
     * const t_estados = await prisma.t_estados.findMany()
     * 
     * // Get first 10 T_estados
     * const t_estados = await prisma.t_estados.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const t_estadosWithIdOnly = await prisma.t_estados.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends t_estadosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_estadosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_estados.
     * @param {t_estadosCreateArgs} args - Arguments to create a T_estados.
     * @example
     * // Create one T_estados
     * const T_estados = await prisma.t_estados.create({
     *   data: {
     *     // ... data to create a T_estados
     *   }
     * })
     * 
    **/
    create<T extends t_estadosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_estadosCreateArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_estados.
     * @param {t_estadosCreateManyArgs} args - Arguments to create many T_estados.
     * @example
     * // Create many T_estados
     * const t_estados = await prisma.t_estados.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_estadosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_estadosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_estados.
     * @param {t_estadosDeleteArgs} args - Arguments to delete one T_estados.
     * @example
     * // Delete one T_estados
     * const T_estados = await prisma.t_estados.delete({
     *   where: {
     *     // ... filter to delete one T_estados
     *   }
     * })
     * 
    **/
    delete<T extends t_estadosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_estadosDeleteArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_estados.
     * @param {t_estadosUpdateArgs} args - Arguments to update one T_estados.
     * @example
     * // Update one T_estados
     * const t_estados = await prisma.t_estados.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_estadosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_estadosUpdateArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_estados.
     * @param {t_estadosDeleteManyArgs} args - Arguments to filter T_estados to delete.
     * @example
     * // Delete a few T_estados
     * const { count } = await prisma.t_estados.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_estadosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_estadosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_estadosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_estados
     * const t_estados = await prisma.t_estados.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_estadosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_estadosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_estados.
     * @param {t_estadosUpsertArgs} args - Arguments to update or create a T_estados.
     * @example
     * // Update or create a T_estados
     * const t_estados = await prisma.t_estados.upsert({
     *   create: {
     *     // ... data to create a T_estados
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_estados we want to update
     *   }
     * })
    **/
    upsert<T extends t_estadosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_estadosUpsertArgs<ExtArgs>>
    ): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_estadosCountArgs} args - Arguments to filter T_estados to count.
     * @example
     * // Count the number of T_estados
     * const count = await prisma.t_estados.count({
     *   where: {
     *     // ... the filter for the T_estados we want to count
     *   }
     * })
    **/
    count<T extends t_estadosCountArgs>(
      args?: Subset<T, t_estadosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_estadosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_estadosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_estadosAggregateArgs>(args: Subset<T, T_estadosAggregateArgs>): Prisma.PrismaPromise<GetT_estadosAggregateType<T>>

    /**
     * Group by T_estados.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_estadosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_estadosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_estadosGroupByArgs['orderBy'] }
        : { orderBy?: t_estadosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_estadosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_estadosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_estados model
   */
  readonly fields: t_estadosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_estados.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_estadosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencias<T extends t_estados$incidenciasArgs<ExtArgs> = {}>(args?: Subset<T, t_estados$incidenciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_estados model
   */ 
  interface t_estadosFieldRefs {
    readonly id: FieldRef<"t_estados", 'Int'>
    readonly descripcion: FieldRef<"t_estados", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_estados findUnique
   */
  export type t_estadosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * Filter, which t_estados to fetch.
     */
    where: t_estadosWhereUniqueInput
  }

  /**
   * t_estados findUniqueOrThrow
   */
  export type t_estadosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * Filter, which t_estados to fetch.
     */
    where: t_estadosWhereUniqueInput
  }

  /**
   * t_estados findFirst
   */
  export type t_estadosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * Filter, which t_estados to fetch.
     */
    where?: t_estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_estados to fetch.
     */
    orderBy?: t_estadosOrderByWithRelationInput | t_estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_estados.
     */
    cursor?: t_estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_estados.
     */
    distinct?: T_estadosScalarFieldEnum | T_estadosScalarFieldEnum[]
  }

  /**
   * t_estados findFirstOrThrow
   */
  export type t_estadosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * Filter, which t_estados to fetch.
     */
    where?: t_estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_estados to fetch.
     */
    orderBy?: t_estadosOrderByWithRelationInput | t_estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_estados.
     */
    cursor?: t_estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_estados.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_estados.
     */
    distinct?: T_estadosScalarFieldEnum | T_estadosScalarFieldEnum[]
  }

  /**
   * t_estados findMany
   */
  export type t_estadosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * Filter, which t_estados to fetch.
     */
    where?: t_estadosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_estados to fetch.
     */
    orderBy?: t_estadosOrderByWithRelationInput | t_estadosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_estados.
     */
    cursor?: t_estadosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_estados from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_estados.
     */
    skip?: number
    distinct?: T_estadosScalarFieldEnum | T_estadosScalarFieldEnum[]
  }

  /**
   * t_estados create
   */
  export type t_estadosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * The data needed to create a t_estados.
     */
    data: XOR<t_estadosCreateInput, t_estadosUncheckedCreateInput>
  }

  /**
   * t_estados createMany
   */
  export type t_estadosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_estados.
     */
    data: t_estadosCreateManyInput | t_estadosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_estados update
   */
  export type t_estadosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * The data needed to update a t_estados.
     */
    data: XOR<t_estadosUpdateInput, t_estadosUncheckedUpdateInput>
    /**
     * Choose, which t_estados to update.
     */
    where: t_estadosWhereUniqueInput
  }

  /**
   * t_estados updateMany
   */
  export type t_estadosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_estados.
     */
    data: XOR<t_estadosUpdateManyMutationInput, t_estadosUncheckedUpdateManyInput>
    /**
     * Filter which t_estados to update
     */
    where?: t_estadosWhereInput
  }

  /**
   * t_estados upsert
   */
  export type t_estadosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * The filter to search for the t_estados to update in case it exists.
     */
    where: t_estadosWhereUniqueInput
    /**
     * In case the t_estados found by the `where` argument doesn't exist, create a new t_estados with this data.
     */
    create: XOR<t_estadosCreateInput, t_estadosUncheckedCreateInput>
    /**
     * In case the t_estados was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_estadosUpdateInput, t_estadosUncheckedUpdateInput>
  }

  /**
   * t_estados delete
   */
  export type t_estadosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
    /**
     * Filter which t_estados to delete.
     */
    where: t_estadosWhereUniqueInput
  }

  /**
   * t_estados deleteMany
   */
  export type t_estadosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_estados to delete
     */
    where?: t_estadosWhereInput
  }

  /**
   * t_estados.incidencias
   */
  export type t_estados$incidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    where?: t_incidenciasWhereInput
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    cursor?: t_incidenciasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_estados without action
   */
  export type t_estadosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_estados
     */
    select?: t_estadosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_estadosInclude<ExtArgs> | null
  }


  /**
   * Model t_riesgos
   */

  export type AggregateT_riesgos = {
    _count: T_riesgosCountAggregateOutputType | null
    _avg: T_riesgosAvgAggregateOutputType | null
    _sum: T_riesgosSumAggregateOutputType | null
    _min: T_riesgosMinAggregateOutputType | null
    _max: T_riesgosMaxAggregateOutputType | null
  }

  export type T_riesgosAvgAggregateOutputType = {
    id: number | null
  }

  export type T_riesgosSumAggregateOutputType = {
    id: number | null
  }

  export type T_riesgosMinAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_riesgosMaxAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_riesgosCountAggregateOutputType = {
    id: number
    descripcion: number
    _all: number
  }


  export type T_riesgosAvgAggregateInputType = {
    id?: true
  }

  export type T_riesgosSumAggregateInputType = {
    id?: true
  }

  export type T_riesgosMinAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_riesgosMaxAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_riesgosCountAggregateInputType = {
    id?: true
    descripcion?: true
    _all?: true
  }

  export type T_riesgosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_riesgos to aggregate.
     */
    where?: t_riesgosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_riesgos to fetch.
     */
    orderBy?: t_riesgosOrderByWithRelationInput | t_riesgosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_riesgosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_riesgos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_riesgos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_riesgos
    **/
    _count?: true | T_riesgosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_riesgosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_riesgosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_riesgosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_riesgosMaxAggregateInputType
  }

  export type GetT_riesgosAggregateType<T extends T_riesgosAggregateArgs> = {
        [P in keyof T & keyof AggregateT_riesgos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_riesgos[P]>
      : GetScalarType<T[P], AggregateT_riesgos[P]>
  }




  export type t_riesgosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_riesgosWhereInput
    orderBy?: t_riesgosOrderByWithAggregationInput | t_riesgosOrderByWithAggregationInput[]
    by: T_riesgosScalarFieldEnum[] | T_riesgosScalarFieldEnum
    having?: t_riesgosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_riesgosCountAggregateInputType | true
    _avg?: T_riesgosAvgAggregateInputType
    _sum?: T_riesgosSumAggregateInputType
    _min?: T_riesgosMinAggregateInputType
    _max?: T_riesgosMaxAggregateInputType
  }

  export type T_riesgosGroupByOutputType = {
    id: number
    descripcion: string
    _count: T_riesgosCountAggregateOutputType | null
    _avg: T_riesgosAvgAggregateOutputType | null
    _sum: T_riesgosSumAggregateOutputType | null
    _min: T_riesgosMinAggregateOutputType | null
    _max: T_riesgosMaxAggregateOutputType | null
  }

  type GetT_riesgosGroupByPayload<T extends t_riesgosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_riesgosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_riesgosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_riesgosGroupByOutputType[P]>
            : GetScalarType<T[P], T_riesgosGroupByOutputType[P]>
        }
      >
    >


  export type t_riesgosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    incidencias?: boolean | t_riesgos$incidenciasArgs<ExtArgs>
    _count?: boolean | T_riesgosCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_riesgos"]>

  export type t_riesgosSelectScalar = {
    id?: boolean
    descripcion?: boolean
  }


  export type t_riesgosInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | t_riesgos$incidenciasArgs<ExtArgs>
    _count?: boolean | T_riesgosCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_riesgosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_riesgos"
    objects: {
      incidencias: Prisma.$t_incidenciasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descripcion: string
    }, ExtArgs["result"]["t_riesgos"]>
    composites: {}
  }


  type t_riesgosGetPayload<S extends boolean | null | undefined | t_riesgosDefaultArgs> = $Result.GetResult<Prisma.$t_riesgosPayload, S>

  type t_riesgosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_riesgosFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_riesgosCountAggregateInputType | true
    }

  export interface t_riesgosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_riesgos'], meta: { name: 't_riesgos' } }
    /**
     * Find zero or one T_riesgos that matches the filter.
     * @param {t_riesgosFindUniqueArgs} args - Arguments to find a T_riesgos
     * @example
     * // Get one T_riesgos
     * const t_riesgos = await prisma.t_riesgos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_riesgosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_riesgosFindUniqueArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_riesgos that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_riesgosFindUniqueOrThrowArgs} args - Arguments to find a T_riesgos
     * @example
     * // Get one T_riesgos
     * const t_riesgos = await prisma.t_riesgos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_riesgosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_riesgosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_riesgos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_riesgosFindFirstArgs} args - Arguments to find a T_riesgos
     * @example
     * // Get one T_riesgos
     * const t_riesgos = await prisma.t_riesgos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_riesgosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_riesgosFindFirstArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_riesgos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_riesgosFindFirstOrThrowArgs} args - Arguments to find a T_riesgos
     * @example
     * // Get one T_riesgos
     * const t_riesgos = await prisma.t_riesgos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_riesgosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_riesgosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_riesgos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_riesgosFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_riesgos
     * const t_riesgos = await prisma.t_riesgos.findMany()
     * 
     * // Get first 10 T_riesgos
     * const t_riesgos = await prisma.t_riesgos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const t_riesgosWithIdOnly = await prisma.t_riesgos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends t_riesgosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_riesgosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_riesgos.
     * @param {t_riesgosCreateArgs} args - Arguments to create a T_riesgos.
     * @example
     * // Create one T_riesgos
     * const T_riesgos = await prisma.t_riesgos.create({
     *   data: {
     *     // ... data to create a T_riesgos
     *   }
     * })
     * 
    **/
    create<T extends t_riesgosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_riesgosCreateArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_riesgos.
     * @param {t_riesgosCreateManyArgs} args - Arguments to create many T_riesgos.
     * @example
     * // Create many T_riesgos
     * const t_riesgos = await prisma.t_riesgos.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_riesgosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_riesgosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_riesgos.
     * @param {t_riesgosDeleteArgs} args - Arguments to delete one T_riesgos.
     * @example
     * // Delete one T_riesgos
     * const T_riesgos = await prisma.t_riesgos.delete({
     *   where: {
     *     // ... filter to delete one T_riesgos
     *   }
     * })
     * 
    **/
    delete<T extends t_riesgosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_riesgosDeleteArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_riesgos.
     * @param {t_riesgosUpdateArgs} args - Arguments to update one T_riesgos.
     * @example
     * // Update one T_riesgos
     * const t_riesgos = await prisma.t_riesgos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_riesgosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_riesgosUpdateArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_riesgos.
     * @param {t_riesgosDeleteManyArgs} args - Arguments to filter T_riesgos to delete.
     * @example
     * // Delete a few T_riesgos
     * const { count } = await prisma.t_riesgos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_riesgosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_riesgosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_riesgos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_riesgosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_riesgos
     * const t_riesgos = await prisma.t_riesgos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_riesgosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_riesgosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_riesgos.
     * @param {t_riesgosUpsertArgs} args - Arguments to update or create a T_riesgos.
     * @example
     * // Update or create a T_riesgos
     * const t_riesgos = await prisma.t_riesgos.upsert({
     *   create: {
     *     // ... data to create a T_riesgos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_riesgos we want to update
     *   }
     * })
    **/
    upsert<T extends t_riesgosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_riesgosUpsertArgs<ExtArgs>>
    ): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_riesgos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_riesgosCountArgs} args - Arguments to filter T_riesgos to count.
     * @example
     * // Count the number of T_riesgos
     * const count = await prisma.t_riesgos.count({
     *   where: {
     *     // ... the filter for the T_riesgos we want to count
     *   }
     * })
    **/
    count<T extends t_riesgosCountArgs>(
      args?: Subset<T, t_riesgosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_riesgosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_riesgos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_riesgosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_riesgosAggregateArgs>(args: Subset<T, T_riesgosAggregateArgs>): Prisma.PrismaPromise<GetT_riesgosAggregateType<T>>

    /**
     * Group by T_riesgos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_riesgosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_riesgosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_riesgosGroupByArgs['orderBy'] }
        : { orderBy?: t_riesgosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_riesgosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_riesgosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_riesgos model
   */
  readonly fields: t_riesgosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_riesgos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_riesgosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencias<T extends t_riesgos$incidenciasArgs<ExtArgs> = {}>(args?: Subset<T, t_riesgos$incidenciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_riesgos model
   */ 
  interface t_riesgosFieldRefs {
    readonly id: FieldRef<"t_riesgos", 'Int'>
    readonly descripcion: FieldRef<"t_riesgos", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_riesgos findUnique
   */
  export type t_riesgosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * Filter, which t_riesgos to fetch.
     */
    where: t_riesgosWhereUniqueInput
  }

  /**
   * t_riesgos findUniqueOrThrow
   */
  export type t_riesgosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * Filter, which t_riesgos to fetch.
     */
    where: t_riesgosWhereUniqueInput
  }

  /**
   * t_riesgos findFirst
   */
  export type t_riesgosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * Filter, which t_riesgos to fetch.
     */
    where?: t_riesgosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_riesgos to fetch.
     */
    orderBy?: t_riesgosOrderByWithRelationInput | t_riesgosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_riesgos.
     */
    cursor?: t_riesgosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_riesgos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_riesgos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_riesgos.
     */
    distinct?: T_riesgosScalarFieldEnum | T_riesgosScalarFieldEnum[]
  }

  /**
   * t_riesgos findFirstOrThrow
   */
  export type t_riesgosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * Filter, which t_riesgos to fetch.
     */
    where?: t_riesgosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_riesgos to fetch.
     */
    orderBy?: t_riesgosOrderByWithRelationInput | t_riesgosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_riesgos.
     */
    cursor?: t_riesgosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_riesgos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_riesgos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_riesgos.
     */
    distinct?: T_riesgosScalarFieldEnum | T_riesgosScalarFieldEnum[]
  }

  /**
   * t_riesgos findMany
   */
  export type t_riesgosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * Filter, which t_riesgos to fetch.
     */
    where?: t_riesgosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_riesgos to fetch.
     */
    orderBy?: t_riesgosOrderByWithRelationInput | t_riesgosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_riesgos.
     */
    cursor?: t_riesgosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_riesgos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_riesgos.
     */
    skip?: number
    distinct?: T_riesgosScalarFieldEnum | T_riesgosScalarFieldEnum[]
  }

  /**
   * t_riesgos create
   */
  export type t_riesgosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * The data needed to create a t_riesgos.
     */
    data: XOR<t_riesgosCreateInput, t_riesgosUncheckedCreateInput>
  }

  /**
   * t_riesgos createMany
   */
  export type t_riesgosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_riesgos.
     */
    data: t_riesgosCreateManyInput | t_riesgosCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_riesgos update
   */
  export type t_riesgosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * The data needed to update a t_riesgos.
     */
    data: XOR<t_riesgosUpdateInput, t_riesgosUncheckedUpdateInput>
    /**
     * Choose, which t_riesgos to update.
     */
    where: t_riesgosWhereUniqueInput
  }

  /**
   * t_riesgos updateMany
   */
  export type t_riesgosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_riesgos.
     */
    data: XOR<t_riesgosUpdateManyMutationInput, t_riesgosUncheckedUpdateManyInput>
    /**
     * Filter which t_riesgos to update
     */
    where?: t_riesgosWhereInput
  }

  /**
   * t_riesgos upsert
   */
  export type t_riesgosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * The filter to search for the t_riesgos to update in case it exists.
     */
    where: t_riesgosWhereUniqueInput
    /**
     * In case the t_riesgos found by the `where` argument doesn't exist, create a new t_riesgos with this data.
     */
    create: XOR<t_riesgosCreateInput, t_riesgosUncheckedCreateInput>
    /**
     * In case the t_riesgos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_riesgosUpdateInput, t_riesgosUncheckedUpdateInput>
  }

  /**
   * t_riesgos delete
   */
  export type t_riesgosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
    /**
     * Filter which t_riesgos to delete.
     */
    where: t_riesgosWhereUniqueInput
  }

  /**
   * t_riesgos deleteMany
   */
  export type t_riesgosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_riesgos to delete
     */
    where?: t_riesgosWhereInput
  }

  /**
   * t_riesgos.incidencias
   */
  export type t_riesgos$incidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    where?: t_incidenciasWhereInput
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    cursor?: t_incidenciasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_riesgos without action
   */
  export type t_riesgosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_riesgos
     */
    select?: t_riesgosSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_riesgosInclude<ExtArgs> | null
  }


  /**
   * Model t_prioridades
   */

  export type AggregateT_prioridades = {
    _count: T_prioridadesCountAggregateOutputType | null
    _avg: T_prioridadesAvgAggregateOutputType | null
    _sum: T_prioridadesSumAggregateOutputType | null
    _min: T_prioridadesMinAggregateOutputType | null
    _max: T_prioridadesMaxAggregateOutputType | null
  }

  export type T_prioridadesAvgAggregateOutputType = {
    id: number | null
  }

  export type T_prioridadesSumAggregateOutputType = {
    id: number | null
  }

  export type T_prioridadesMinAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_prioridadesMaxAggregateOutputType = {
    id: number | null
    descripcion: string | null
  }

  export type T_prioridadesCountAggregateOutputType = {
    id: number
    descripcion: number
    _all: number
  }


  export type T_prioridadesAvgAggregateInputType = {
    id?: true
  }

  export type T_prioridadesSumAggregateInputType = {
    id?: true
  }

  export type T_prioridadesMinAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_prioridadesMaxAggregateInputType = {
    id?: true
    descripcion?: true
  }

  export type T_prioridadesCountAggregateInputType = {
    id?: true
    descripcion?: true
    _all?: true
  }

  export type T_prioridadesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_prioridades to aggregate.
     */
    where?: t_prioridadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_prioridades to fetch.
     */
    orderBy?: t_prioridadesOrderByWithRelationInput | t_prioridadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_prioridadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_prioridades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_prioridades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_prioridades
    **/
    _count?: true | T_prioridadesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_prioridadesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_prioridadesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_prioridadesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_prioridadesMaxAggregateInputType
  }

  export type GetT_prioridadesAggregateType<T extends T_prioridadesAggregateArgs> = {
        [P in keyof T & keyof AggregateT_prioridades]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_prioridades[P]>
      : GetScalarType<T[P], AggregateT_prioridades[P]>
  }




  export type t_prioridadesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_prioridadesWhereInput
    orderBy?: t_prioridadesOrderByWithAggregationInput | t_prioridadesOrderByWithAggregationInput[]
    by: T_prioridadesScalarFieldEnum[] | T_prioridadesScalarFieldEnum
    having?: t_prioridadesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_prioridadesCountAggregateInputType | true
    _avg?: T_prioridadesAvgAggregateInputType
    _sum?: T_prioridadesSumAggregateInputType
    _min?: T_prioridadesMinAggregateInputType
    _max?: T_prioridadesMaxAggregateInputType
  }

  export type T_prioridadesGroupByOutputType = {
    id: number
    descripcion: string
    _count: T_prioridadesCountAggregateOutputType | null
    _avg: T_prioridadesAvgAggregateOutputType | null
    _sum: T_prioridadesSumAggregateOutputType | null
    _min: T_prioridadesMinAggregateOutputType | null
    _max: T_prioridadesMaxAggregateOutputType | null
  }

  type GetT_prioridadesGroupByPayload<T extends t_prioridadesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_prioridadesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_prioridadesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_prioridadesGroupByOutputType[P]>
            : GetScalarType<T[P], T_prioridadesGroupByOutputType[P]>
        }
      >
    >


  export type t_prioridadesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    descripcion?: boolean
    incidencias?: boolean | t_prioridades$incidenciasArgs<ExtArgs>
    _count?: boolean | T_prioridadesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_prioridades"]>

  export type t_prioridadesSelectScalar = {
    id?: boolean
    descripcion?: boolean
  }


  export type t_prioridadesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    incidencias?: boolean | t_prioridades$incidenciasArgs<ExtArgs>
    _count?: boolean | T_prioridadesCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_prioridadesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_prioridades"
    objects: {
      incidencias: Prisma.$t_incidenciasPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      descripcion: string
    }, ExtArgs["result"]["t_prioridades"]>
    composites: {}
  }


  type t_prioridadesGetPayload<S extends boolean | null | undefined | t_prioridadesDefaultArgs> = $Result.GetResult<Prisma.$t_prioridadesPayload, S>

  type t_prioridadesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_prioridadesFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_prioridadesCountAggregateInputType | true
    }

  export interface t_prioridadesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_prioridades'], meta: { name: 't_prioridades' } }
    /**
     * Find zero or one T_prioridades that matches the filter.
     * @param {t_prioridadesFindUniqueArgs} args - Arguments to find a T_prioridades
     * @example
     * // Get one T_prioridades
     * const t_prioridades = await prisma.t_prioridades.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_prioridadesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_prioridadesFindUniqueArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_prioridades that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_prioridadesFindUniqueOrThrowArgs} args - Arguments to find a T_prioridades
     * @example
     * // Get one T_prioridades
     * const t_prioridades = await prisma.t_prioridades.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_prioridadesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_prioridadesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_prioridades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_prioridadesFindFirstArgs} args - Arguments to find a T_prioridades
     * @example
     * // Get one T_prioridades
     * const t_prioridades = await prisma.t_prioridades.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_prioridadesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_prioridadesFindFirstArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_prioridades that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_prioridadesFindFirstOrThrowArgs} args - Arguments to find a T_prioridades
     * @example
     * // Get one T_prioridades
     * const t_prioridades = await prisma.t_prioridades.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_prioridadesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_prioridadesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_prioridades that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_prioridadesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_prioridades
     * const t_prioridades = await prisma.t_prioridades.findMany()
     * 
     * // Get first 10 T_prioridades
     * const t_prioridades = await prisma.t_prioridades.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const t_prioridadesWithIdOnly = await prisma.t_prioridades.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends t_prioridadesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_prioridadesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_prioridades.
     * @param {t_prioridadesCreateArgs} args - Arguments to create a T_prioridades.
     * @example
     * // Create one T_prioridades
     * const T_prioridades = await prisma.t_prioridades.create({
     *   data: {
     *     // ... data to create a T_prioridades
     *   }
     * })
     * 
    **/
    create<T extends t_prioridadesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_prioridadesCreateArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_prioridades.
     * @param {t_prioridadesCreateManyArgs} args - Arguments to create many T_prioridades.
     * @example
     * // Create many T_prioridades
     * const t_prioridades = await prisma.t_prioridades.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_prioridadesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_prioridadesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_prioridades.
     * @param {t_prioridadesDeleteArgs} args - Arguments to delete one T_prioridades.
     * @example
     * // Delete one T_prioridades
     * const T_prioridades = await prisma.t_prioridades.delete({
     *   where: {
     *     // ... filter to delete one T_prioridades
     *   }
     * })
     * 
    **/
    delete<T extends t_prioridadesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_prioridadesDeleteArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_prioridades.
     * @param {t_prioridadesUpdateArgs} args - Arguments to update one T_prioridades.
     * @example
     * // Update one T_prioridades
     * const t_prioridades = await prisma.t_prioridades.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_prioridadesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_prioridadesUpdateArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_prioridades.
     * @param {t_prioridadesDeleteManyArgs} args - Arguments to filter T_prioridades to delete.
     * @example
     * // Delete a few T_prioridades
     * const { count } = await prisma.t_prioridades.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_prioridadesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_prioridadesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_prioridades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_prioridadesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_prioridades
     * const t_prioridades = await prisma.t_prioridades.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_prioridadesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_prioridadesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_prioridades.
     * @param {t_prioridadesUpsertArgs} args - Arguments to update or create a T_prioridades.
     * @example
     * // Update or create a T_prioridades
     * const t_prioridades = await prisma.t_prioridades.upsert({
     *   create: {
     *     // ... data to create a T_prioridades
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_prioridades we want to update
     *   }
     * })
    **/
    upsert<T extends t_prioridadesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_prioridadesUpsertArgs<ExtArgs>>
    ): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_prioridades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_prioridadesCountArgs} args - Arguments to filter T_prioridades to count.
     * @example
     * // Count the number of T_prioridades
     * const count = await prisma.t_prioridades.count({
     *   where: {
     *     // ... the filter for the T_prioridades we want to count
     *   }
     * })
    **/
    count<T extends t_prioridadesCountArgs>(
      args?: Subset<T, t_prioridadesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_prioridadesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_prioridades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_prioridadesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_prioridadesAggregateArgs>(args: Subset<T, T_prioridadesAggregateArgs>): Prisma.PrismaPromise<GetT_prioridadesAggregateType<T>>

    /**
     * Group by T_prioridades.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_prioridadesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_prioridadesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_prioridadesGroupByArgs['orderBy'] }
        : { orderBy?: t_prioridadesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_prioridadesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_prioridadesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_prioridades model
   */
  readonly fields: t_prioridadesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_prioridades.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_prioridadesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    incidencias<T extends t_prioridades$incidenciasArgs<ExtArgs> = {}>(args?: Subset<T, t_prioridades$incidenciasArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_prioridades model
   */ 
  interface t_prioridadesFieldRefs {
    readonly id: FieldRef<"t_prioridades", 'Int'>
    readonly descripcion: FieldRef<"t_prioridades", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_prioridades findUnique
   */
  export type t_prioridadesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * Filter, which t_prioridades to fetch.
     */
    where: t_prioridadesWhereUniqueInput
  }

  /**
   * t_prioridades findUniqueOrThrow
   */
  export type t_prioridadesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * Filter, which t_prioridades to fetch.
     */
    where: t_prioridadesWhereUniqueInput
  }

  /**
   * t_prioridades findFirst
   */
  export type t_prioridadesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * Filter, which t_prioridades to fetch.
     */
    where?: t_prioridadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_prioridades to fetch.
     */
    orderBy?: t_prioridadesOrderByWithRelationInput | t_prioridadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_prioridades.
     */
    cursor?: t_prioridadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_prioridades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_prioridades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_prioridades.
     */
    distinct?: T_prioridadesScalarFieldEnum | T_prioridadesScalarFieldEnum[]
  }

  /**
   * t_prioridades findFirstOrThrow
   */
  export type t_prioridadesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * Filter, which t_prioridades to fetch.
     */
    where?: t_prioridadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_prioridades to fetch.
     */
    orderBy?: t_prioridadesOrderByWithRelationInput | t_prioridadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_prioridades.
     */
    cursor?: t_prioridadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_prioridades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_prioridades.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_prioridades.
     */
    distinct?: T_prioridadesScalarFieldEnum | T_prioridadesScalarFieldEnum[]
  }

  /**
   * t_prioridades findMany
   */
  export type t_prioridadesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * Filter, which t_prioridades to fetch.
     */
    where?: t_prioridadesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_prioridades to fetch.
     */
    orderBy?: t_prioridadesOrderByWithRelationInput | t_prioridadesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_prioridades.
     */
    cursor?: t_prioridadesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_prioridades from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_prioridades.
     */
    skip?: number
    distinct?: T_prioridadesScalarFieldEnum | T_prioridadesScalarFieldEnum[]
  }

  /**
   * t_prioridades create
   */
  export type t_prioridadesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * The data needed to create a t_prioridades.
     */
    data: XOR<t_prioridadesCreateInput, t_prioridadesUncheckedCreateInput>
  }

  /**
   * t_prioridades createMany
   */
  export type t_prioridadesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_prioridades.
     */
    data: t_prioridadesCreateManyInput | t_prioridadesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_prioridades update
   */
  export type t_prioridadesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * The data needed to update a t_prioridades.
     */
    data: XOR<t_prioridadesUpdateInput, t_prioridadesUncheckedUpdateInput>
    /**
     * Choose, which t_prioridades to update.
     */
    where: t_prioridadesWhereUniqueInput
  }

  /**
   * t_prioridades updateMany
   */
  export type t_prioridadesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_prioridades.
     */
    data: XOR<t_prioridadesUpdateManyMutationInput, t_prioridadesUncheckedUpdateManyInput>
    /**
     * Filter which t_prioridades to update
     */
    where?: t_prioridadesWhereInput
  }

  /**
   * t_prioridades upsert
   */
  export type t_prioridadesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * The filter to search for the t_prioridades to update in case it exists.
     */
    where: t_prioridadesWhereUniqueInput
    /**
     * In case the t_prioridades found by the `where` argument doesn't exist, create a new t_prioridades with this data.
     */
    create: XOR<t_prioridadesCreateInput, t_prioridadesUncheckedCreateInput>
    /**
     * In case the t_prioridades was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_prioridadesUpdateInput, t_prioridadesUncheckedUpdateInput>
  }

  /**
   * t_prioridades delete
   */
  export type t_prioridadesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
    /**
     * Filter which t_prioridades to delete.
     */
    where: t_prioridadesWhereUniqueInput
  }

  /**
   * t_prioridades deleteMany
   */
  export type t_prioridadesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_prioridades to delete
     */
    where?: t_prioridadesWhereInput
  }

  /**
   * t_prioridades.incidencias
   */
  export type t_prioridades$incidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    where?: t_incidenciasWhereInput
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    cursor?: t_incidenciasWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_prioridades without action
   */
  export type t_prioridadesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_prioridades
     */
    select?: t_prioridadesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_prioridadesInclude<ExtArgs> | null
  }


  /**
   * Model t_incidencias
   */

  export type AggregateT_incidencias = {
    _count: T_incidenciasCountAggregateOutputType | null
    _avg: T_incidenciasAvgAggregateOutputType | null
    _sum: T_incidenciasSumAggregateOutputType | null
    _min: T_incidenciasMinAggregateOutputType | null
    _max: T_incidenciasMaxAggregateOutputType | null
  }

  export type T_incidenciasAvgAggregateOutputType = {
    costo: number | null
    duracionGestion: number | null
    idAfectacion: number | null
    idRiesgo: number | null
    idCategoria: number | null
    idPrioridad: number | null
    idEstado: number | null
  }

  export type T_incidenciasSumAggregateOutputType = {
    costo: number | null
    duracionGestion: number | null
    idAfectacion: number | null
    idRiesgo: number | null
    idCategoria: number | null
    idPrioridad: number | null
    idEstado: number | null
  }

  export type T_incidenciasMinAggregateOutputType = {
    codigoIncidencia: string | null
    nombre: string | null
    descripcion: string | null
    justificacionCierre: string | null
    lugarIncidencia: string | null
    fechaRegistro: Date | null
    costo: number | null
    duracionGestion: number | null
    idUsuario: string | null
    idAfectacion: number | null
    idRiesgo: number | null
    idCategoria: number | null
    idPrioridad: number | null
    idEstado: number | null
  }

  export type T_incidenciasMaxAggregateOutputType = {
    codigoIncidencia: string | null
    nombre: string | null
    descripcion: string | null
    justificacionCierre: string | null
    lugarIncidencia: string | null
    fechaRegistro: Date | null
    costo: number | null
    duracionGestion: number | null
    idUsuario: string | null
    idAfectacion: number | null
    idRiesgo: number | null
    idCategoria: number | null
    idPrioridad: number | null
    idEstado: number | null
  }

  export type T_incidenciasCountAggregateOutputType = {
    codigoIncidencia: number
    nombre: number
    descripcion: number
    justificacionCierre: number
    lugarIncidencia: number
    fechaRegistro: number
    costo: number
    duracionGestion: number
    idUsuario: number
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    _all: number
  }


  export type T_incidenciasAvgAggregateInputType = {
    costo?: true
    duracionGestion?: true
    idAfectacion?: true
    idRiesgo?: true
    idCategoria?: true
    idPrioridad?: true
    idEstado?: true
  }

  export type T_incidenciasSumAggregateInputType = {
    costo?: true
    duracionGestion?: true
    idAfectacion?: true
    idRiesgo?: true
    idCategoria?: true
    idPrioridad?: true
    idEstado?: true
  }

  export type T_incidenciasMinAggregateInputType = {
    codigoIncidencia?: true
    nombre?: true
    descripcion?: true
    justificacionCierre?: true
    lugarIncidencia?: true
    fechaRegistro?: true
    costo?: true
    duracionGestion?: true
    idUsuario?: true
    idAfectacion?: true
    idRiesgo?: true
    idCategoria?: true
    idPrioridad?: true
    idEstado?: true
  }

  export type T_incidenciasMaxAggregateInputType = {
    codigoIncidencia?: true
    nombre?: true
    descripcion?: true
    justificacionCierre?: true
    lugarIncidencia?: true
    fechaRegistro?: true
    costo?: true
    duracionGestion?: true
    idUsuario?: true
    idAfectacion?: true
    idRiesgo?: true
    idCategoria?: true
    idPrioridad?: true
    idEstado?: true
  }

  export type T_incidenciasCountAggregateInputType = {
    codigoIncidencia?: true
    nombre?: true
    descripcion?: true
    justificacionCierre?: true
    lugarIncidencia?: true
    fechaRegistro?: true
    costo?: true
    duracionGestion?: true
    idUsuario?: true
    idAfectacion?: true
    idRiesgo?: true
    idCategoria?: true
    idPrioridad?: true
    idEstado?: true
    _all?: true
  }

  export type T_incidenciasAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_incidencias to aggregate.
     */
    where?: t_incidenciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_incidencias to fetch.
     */
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_incidenciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_incidencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_incidencias
    **/
    _count?: true | T_incidenciasCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_incidenciasAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_incidenciasSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_incidenciasMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_incidenciasMaxAggregateInputType
  }

  export type GetT_incidenciasAggregateType<T extends T_incidenciasAggregateArgs> = {
        [P in keyof T & keyof AggregateT_incidencias]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_incidencias[P]>
      : GetScalarType<T[P], AggregateT_incidencias[P]>
  }




  export type t_incidenciasGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_incidenciasWhereInput
    orderBy?: t_incidenciasOrderByWithAggregationInput | t_incidenciasOrderByWithAggregationInput[]
    by: T_incidenciasScalarFieldEnum[] | T_incidenciasScalarFieldEnum
    having?: t_incidenciasScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_incidenciasCountAggregateInputType | true
    _avg?: T_incidenciasAvgAggregateInputType
    _sum?: T_incidenciasSumAggregateInputType
    _min?: T_incidenciasMinAggregateInputType
    _max?: T_incidenciasMaxAggregateInputType
  }

  export type T_incidenciasGroupByOutputType = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    _count: T_incidenciasCountAggregateOutputType | null
    _avg: T_incidenciasAvgAggregateOutputType | null
    _sum: T_incidenciasSumAggregateOutputType | null
    _min: T_incidenciasMinAggregateOutputType | null
    _max: T_incidenciasMaxAggregateOutputType | null
  }

  type GetT_incidenciasGroupByPayload<T extends t_incidenciasGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_incidenciasGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_incidenciasGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_incidenciasGroupByOutputType[P]>
            : GetScalarType<T[P], T_incidenciasGroupByOutputType[P]>
        }
      >
    >


  export type t_incidenciasSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoIncidencia?: boolean
    nombre?: boolean
    descripcion?: boolean
    justificacionCierre?: boolean
    lugarIncidencia?: boolean
    fechaRegistro?: boolean
    costo?: boolean
    duracionGestion?: boolean
    idUsuario?: boolean
    idAfectacion?: boolean
    idRiesgo?: boolean
    idCategoria?: boolean
    idPrioridad?: boolean
    idEstado?: boolean
    Usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    Afectacion?: boolean | t_afectacionesDefaultArgs<ExtArgs>
    Riesgo?: boolean | t_riesgosDefaultArgs<ExtArgs>
    Categoria?: boolean | t_categoriasDefaultArgs<ExtArgs>
    Prioridad?: boolean | t_prioridadesDefaultArgs<ExtArgs>
    Estado?: boolean | t_estadosDefaultArgs<ExtArgs>
    imagenes?: boolean | t_incidencias$imagenesArgs<ExtArgs>
    diagnostico?: boolean | t_incidencias$diagnosticoArgs<ExtArgs>
    incidencia?: boolean | t_incidencias$incidenciaArgs<ExtArgs>
    t_bitacora_cambio_estado?: boolean | t_incidencias$t_bitacora_cambio_estadoArgs<ExtArgs>
    _count?: boolean | T_incidenciasCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_incidencias"]>

  export type t_incidenciasSelectScalar = {
    codigoIncidencia?: boolean
    nombre?: boolean
    descripcion?: boolean
    justificacionCierre?: boolean
    lugarIncidencia?: boolean
    fechaRegistro?: boolean
    costo?: boolean
    duracionGestion?: boolean
    idUsuario?: boolean
    idAfectacion?: boolean
    idRiesgo?: boolean
    idCategoria?: boolean
    idPrioridad?: boolean
    idEstado?: boolean
  }


  export type t_incidenciasInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    Afectacion?: boolean | t_afectacionesDefaultArgs<ExtArgs>
    Riesgo?: boolean | t_riesgosDefaultArgs<ExtArgs>
    Categoria?: boolean | t_categoriasDefaultArgs<ExtArgs>
    Prioridad?: boolean | t_prioridadesDefaultArgs<ExtArgs>
    Estado?: boolean | t_estadosDefaultArgs<ExtArgs>
    imagenes?: boolean | t_incidencias$imagenesArgs<ExtArgs>
    diagnostico?: boolean | t_incidencias$diagnosticoArgs<ExtArgs>
    incidencia?: boolean | t_incidencias$incidenciaArgs<ExtArgs>
    t_bitacora_cambio_estado?: boolean | t_incidencias$t_bitacora_cambio_estadoArgs<ExtArgs>
    _count?: boolean | T_incidenciasCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_incidenciasPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_incidencias"
    objects: {
      Usuario: Prisma.$t_usuariosPayload<ExtArgs>
      Afectacion: Prisma.$t_afectacionesPayload<ExtArgs>
      Riesgo: Prisma.$t_riesgosPayload<ExtArgs>
      Categoria: Prisma.$t_categoriasPayload<ExtArgs>
      Prioridad: Prisma.$t_prioridadesPayload<ExtArgs>
      Estado: Prisma.$t_estadosPayload<ExtArgs>
      imagenes: Prisma.$t_imagenesPayload<ExtArgs>[]
      diagnostico: Prisma.$t_diagnosticoPayload<ExtArgs>[]
      incidencia: Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>[]
      t_bitacora_cambio_estado: Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codigoIncidencia: string
      nombre: string
      descripcion: string
      justificacionCierre: string
      lugarIncidencia: string
      fechaRegistro: Date
      costo: number
      duracionGestion: number
      idUsuario: string
      idAfectacion: number
      idRiesgo: number
      idCategoria: number
      idPrioridad: number
      idEstado: number
    }, ExtArgs["result"]["t_incidencias"]>
    composites: {}
  }


  type t_incidenciasGetPayload<S extends boolean | null | undefined | t_incidenciasDefaultArgs> = $Result.GetResult<Prisma.$t_incidenciasPayload, S>

  type t_incidenciasCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_incidenciasFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_incidenciasCountAggregateInputType | true
    }

  export interface t_incidenciasDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_incidencias'], meta: { name: 't_incidencias' } }
    /**
     * Find zero or one T_incidencias that matches the filter.
     * @param {t_incidenciasFindUniqueArgs} args - Arguments to find a T_incidencias
     * @example
     * // Get one T_incidencias
     * const t_incidencias = await prisma.t_incidencias.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_incidenciasFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_incidenciasFindUniqueArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_incidencias that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_incidenciasFindUniqueOrThrowArgs} args - Arguments to find a T_incidencias
     * @example
     * // Get one T_incidencias
     * const t_incidencias = await prisma.t_incidencias.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_incidenciasFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_incidenciasFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_incidencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_incidenciasFindFirstArgs} args - Arguments to find a T_incidencias
     * @example
     * // Get one T_incidencias
     * const t_incidencias = await prisma.t_incidencias.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_incidenciasFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_incidenciasFindFirstArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_incidencias that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_incidenciasFindFirstOrThrowArgs} args - Arguments to find a T_incidencias
     * @example
     * // Get one T_incidencias
     * const t_incidencias = await prisma.t_incidencias.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_incidenciasFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_incidenciasFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_incidencias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_incidenciasFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_incidencias
     * const t_incidencias = await prisma.t_incidencias.findMany()
     * 
     * // Get first 10 T_incidencias
     * const t_incidencias = await prisma.t_incidencias.findMany({ take: 10 })
     * 
     * // Only select the `codigoIncidencia`
     * const t_incidenciasWithCodigoIncidenciaOnly = await prisma.t_incidencias.findMany({ select: { codigoIncidencia: true } })
     * 
    **/
    findMany<T extends t_incidenciasFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_incidenciasFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_incidencias.
     * @param {t_incidenciasCreateArgs} args - Arguments to create a T_incidencias.
     * @example
     * // Create one T_incidencias
     * const T_incidencias = await prisma.t_incidencias.create({
     *   data: {
     *     // ... data to create a T_incidencias
     *   }
     * })
     * 
    **/
    create<T extends t_incidenciasCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_incidenciasCreateArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_incidencias.
     * @param {t_incidenciasCreateManyArgs} args - Arguments to create many T_incidencias.
     * @example
     * // Create many T_incidencias
     * const t_incidencias = await prisma.t_incidencias.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_incidenciasCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_incidenciasCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_incidencias.
     * @param {t_incidenciasDeleteArgs} args - Arguments to delete one T_incidencias.
     * @example
     * // Delete one T_incidencias
     * const T_incidencias = await prisma.t_incidencias.delete({
     *   where: {
     *     // ... filter to delete one T_incidencias
     *   }
     * })
     * 
    **/
    delete<T extends t_incidenciasDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_incidenciasDeleteArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_incidencias.
     * @param {t_incidenciasUpdateArgs} args - Arguments to update one T_incidencias.
     * @example
     * // Update one T_incidencias
     * const t_incidencias = await prisma.t_incidencias.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_incidenciasUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_incidenciasUpdateArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_incidencias.
     * @param {t_incidenciasDeleteManyArgs} args - Arguments to filter T_incidencias to delete.
     * @example
     * // Delete a few T_incidencias
     * const { count } = await prisma.t_incidencias.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_incidenciasDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_incidenciasDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_incidencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_incidenciasUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_incidencias
     * const t_incidencias = await prisma.t_incidencias.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_incidenciasUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_incidenciasUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_incidencias.
     * @param {t_incidenciasUpsertArgs} args - Arguments to update or create a T_incidencias.
     * @example
     * // Update or create a T_incidencias
     * const t_incidencias = await prisma.t_incidencias.upsert({
     *   create: {
     *     // ... data to create a T_incidencias
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_incidencias we want to update
     *   }
     * })
    **/
    upsert<T extends t_incidenciasUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_incidenciasUpsertArgs<ExtArgs>>
    ): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_incidencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_incidenciasCountArgs} args - Arguments to filter T_incidencias to count.
     * @example
     * // Count the number of T_incidencias
     * const count = await prisma.t_incidencias.count({
     *   where: {
     *     // ... the filter for the T_incidencias we want to count
     *   }
     * })
    **/
    count<T extends t_incidenciasCountArgs>(
      args?: Subset<T, t_incidenciasCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_incidenciasCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_incidencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_incidenciasAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_incidenciasAggregateArgs>(args: Subset<T, T_incidenciasAggregateArgs>): Prisma.PrismaPromise<GetT_incidenciasAggregateType<T>>

    /**
     * Group by T_incidencias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_incidenciasGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_incidenciasGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_incidenciasGroupByArgs['orderBy'] }
        : { orderBy?: t_incidenciasGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_incidenciasGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_incidenciasGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_incidencias model
   */
  readonly fields: t_incidenciasFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_incidencias.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_incidenciasClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Usuario<T extends t_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_usuariosDefaultArgs<ExtArgs>>): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Afectacion<T extends t_afectacionesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_afectacionesDefaultArgs<ExtArgs>>): Prisma__t_afectacionesClient<$Result.GetResult<Prisma.$t_afectacionesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Riesgo<T extends t_riesgosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_riesgosDefaultArgs<ExtArgs>>): Prisma__t_riesgosClient<$Result.GetResult<Prisma.$t_riesgosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Categoria<T extends t_categoriasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_categoriasDefaultArgs<ExtArgs>>): Prisma__t_categoriasClient<$Result.GetResult<Prisma.$t_categoriasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Prioridad<T extends t_prioridadesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_prioridadesDefaultArgs<ExtArgs>>): Prisma__t_prioridadesClient<$Result.GetResult<Prisma.$t_prioridadesPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Estado<T extends t_estadosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_estadosDefaultArgs<ExtArgs>>): Prisma__t_estadosClient<$Result.GetResult<Prisma.$t_estadosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    imagenes<T extends t_incidencias$imagenesArgs<ExtArgs> = {}>(args?: Subset<T, t_incidencias$imagenesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'findMany'> | Null>;

    diagnostico<T extends t_incidencias$diagnosticoArgs<ExtArgs> = {}>(args?: Subset<T, t_incidencias$diagnosticoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findMany'> | Null>;

    incidencia<T extends t_incidencias$incidenciaArgs<ExtArgs> = {}>(args?: Subset<T, t_incidencias$incidenciaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_usuario_x_incidenciaPayload<ExtArgs>, T, 'findMany'> | Null>;

    t_bitacora_cambio_estado<T extends t_incidencias$t_bitacora_cambio_estadoArgs<ExtArgs> = {}>(args?: Subset<T, t_incidencias$t_bitacora_cambio_estadoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_bitacora_cambio_estadoPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_incidencias model
   */ 
  interface t_incidenciasFieldRefs {
    readonly codigoIncidencia: FieldRef<"t_incidencias", 'String'>
    readonly nombre: FieldRef<"t_incidencias", 'String'>
    readonly descripcion: FieldRef<"t_incidencias", 'String'>
    readonly justificacionCierre: FieldRef<"t_incidencias", 'String'>
    readonly lugarIncidencia: FieldRef<"t_incidencias", 'String'>
    readonly fechaRegistro: FieldRef<"t_incidencias", 'DateTime'>
    readonly costo: FieldRef<"t_incidencias", 'Float'>
    readonly duracionGestion: FieldRef<"t_incidencias", 'Int'>
    readonly idUsuario: FieldRef<"t_incidencias", 'String'>
    readonly idAfectacion: FieldRef<"t_incidencias", 'Int'>
    readonly idRiesgo: FieldRef<"t_incidencias", 'Int'>
    readonly idCategoria: FieldRef<"t_incidencias", 'Int'>
    readonly idPrioridad: FieldRef<"t_incidencias", 'Int'>
    readonly idEstado: FieldRef<"t_incidencias", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * t_incidencias findUnique
   */
  export type t_incidenciasFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * Filter, which t_incidencias to fetch.
     */
    where: t_incidenciasWhereUniqueInput
  }

  /**
   * t_incidencias findUniqueOrThrow
   */
  export type t_incidenciasFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * Filter, which t_incidencias to fetch.
     */
    where: t_incidenciasWhereUniqueInput
  }

  /**
   * t_incidencias findFirst
   */
  export type t_incidenciasFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * Filter, which t_incidencias to fetch.
     */
    where?: t_incidenciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_incidencias to fetch.
     */
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_incidencias.
     */
    cursor?: t_incidenciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_incidencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_incidencias.
     */
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_incidencias findFirstOrThrow
   */
  export type t_incidenciasFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * Filter, which t_incidencias to fetch.
     */
    where?: t_incidenciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_incidencias to fetch.
     */
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_incidencias.
     */
    cursor?: t_incidenciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_incidencias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_incidencias.
     */
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_incidencias findMany
   */
  export type t_incidenciasFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * Filter, which t_incidencias to fetch.
     */
    where?: t_incidenciasWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_incidencias to fetch.
     */
    orderBy?: t_incidenciasOrderByWithRelationInput | t_incidenciasOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_incidencias.
     */
    cursor?: t_incidenciasWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_incidencias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_incidencias.
     */
    skip?: number
    distinct?: T_incidenciasScalarFieldEnum | T_incidenciasScalarFieldEnum[]
  }

  /**
   * t_incidencias create
   */
  export type t_incidenciasCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * The data needed to create a t_incidencias.
     */
    data: XOR<t_incidenciasCreateInput, t_incidenciasUncheckedCreateInput>
  }

  /**
   * t_incidencias createMany
   */
  export type t_incidenciasCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_incidencias.
     */
    data: t_incidenciasCreateManyInput | t_incidenciasCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_incidencias update
   */
  export type t_incidenciasUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * The data needed to update a t_incidencias.
     */
    data: XOR<t_incidenciasUpdateInput, t_incidenciasUncheckedUpdateInput>
    /**
     * Choose, which t_incidencias to update.
     */
    where: t_incidenciasWhereUniqueInput
  }

  /**
   * t_incidencias updateMany
   */
  export type t_incidenciasUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_incidencias.
     */
    data: XOR<t_incidenciasUpdateManyMutationInput, t_incidenciasUncheckedUpdateManyInput>
    /**
     * Filter which t_incidencias to update
     */
    where?: t_incidenciasWhereInput
  }

  /**
   * t_incidencias upsert
   */
  export type t_incidenciasUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * The filter to search for the t_incidencias to update in case it exists.
     */
    where: t_incidenciasWhereUniqueInput
    /**
     * In case the t_incidencias found by the `where` argument doesn't exist, create a new t_incidencias with this data.
     */
    create: XOR<t_incidenciasCreateInput, t_incidenciasUncheckedCreateInput>
    /**
     * In case the t_incidencias was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_incidenciasUpdateInput, t_incidenciasUncheckedUpdateInput>
  }

  /**
   * t_incidencias delete
   */
  export type t_incidenciasDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
    /**
     * Filter which t_incidencias to delete.
     */
    where: t_incidenciasWhereUniqueInput
  }

  /**
   * t_incidencias deleteMany
   */
  export type t_incidenciasDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_incidencias to delete
     */
    where?: t_incidenciasWhereInput
  }

  /**
   * t_incidencias.imagenes
   */
  export type t_incidencias$imagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    where?: t_imagenesWhereInput
    orderBy?: t_imagenesOrderByWithRelationInput | t_imagenesOrderByWithRelationInput[]
    cursor?: t_imagenesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_imagenesScalarFieldEnum | T_imagenesScalarFieldEnum[]
  }

  /**
   * t_incidencias.diagnostico
   */
  export type t_incidencias$diagnosticoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    where?: t_diagnosticoWhereInput
    orderBy?: t_diagnosticoOrderByWithRelationInput | t_diagnosticoOrderByWithRelationInput[]
    cursor?: t_diagnosticoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_diagnosticoScalarFieldEnum | T_diagnosticoScalarFieldEnum[]
  }

  /**
   * t_incidencias.incidencia
   */
  export type t_incidencias$incidenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_usuario_x_incidencia
     */
    select?: t_usuario_x_incidenciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_usuario_x_incidenciaInclude<ExtArgs> | null
    where?: t_usuario_x_incidenciaWhereInput
    orderBy?: t_usuario_x_incidenciaOrderByWithRelationInput | t_usuario_x_incidenciaOrderByWithRelationInput[]
    cursor?: t_usuario_x_incidenciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_usuario_x_incidenciaScalarFieldEnum | T_usuario_x_incidenciaScalarFieldEnum[]
  }

  /**
   * t_incidencias.t_bitacora_cambio_estado
   */
  export type t_incidencias$t_bitacora_cambio_estadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_bitacora_cambio_estado
     */
    select?: t_bitacora_cambio_estadoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_bitacora_cambio_estadoInclude<ExtArgs> | null
    where?: t_bitacora_cambio_estadoWhereInput
    orderBy?: t_bitacora_cambio_estadoOrderByWithRelationInput | t_bitacora_cambio_estadoOrderByWithRelationInput[]
    cursor?: t_bitacora_cambio_estadoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_bitacora_cambio_estadoScalarFieldEnum | T_bitacora_cambio_estadoScalarFieldEnum[]
  }

  /**
   * t_incidencias without action
   */
  export type t_incidenciasDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_incidencias
     */
    select?: t_incidenciasSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_incidenciasInclude<ExtArgs> | null
  }


  /**
   * Model t_diagnostico
   */

  export type AggregateT_diagnostico = {
    _count: T_diagnosticoCountAggregateOutputType | null
    _avg: T_diagnosticoAvgAggregateOutputType | null
    _sum: T_diagnosticoSumAggregateOutputType | null
    _min: T_diagnosticoMinAggregateOutputType | null
    _max: T_diagnosticoMaxAggregateOutputType | null
  }

  export type T_diagnosticoAvgAggregateOutputType = {
    codigoDiagnostico: number | null
    tiempoEstimado: number | null
  }

  export type T_diagnosticoSumAggregateOutputType = {
    codigoDiagnostico: number | null
    tiempoEstimado: number | null
  }

  export type T_diagnosticoMinAggregateOutputType = {
    codigoDiagnostico: number | null
    fechaDiagnostico: Date | null
    diagnostico: string | null
    tiempoEstimado: number | null
    observacion: string | null
    compra: boolean | null
    idUsuario: string | null
    idIncidencia: string | null
  }

  export type T_diagnosticoMaxAggregateOutputType = {
    codigoDiagnostico: number | null
    fechaDiagnostico: Date | null
    diagnostico: string | null
    tiempoEstimado: number | null
    observacion: string | null
    compra: boolean | null
    idUsuario: string | null
    idIncidencia: string | null
  }

  export type T_diagnosticoCountAggregateOutputType = {
    codigoDiagnostico: number
    fechaDiagnostico: number
    diagnostico: number
    tiempoEstimado: number
    observacion: number
    compra: number
    idUsuario: number
    idIncidencia: number
    _all: number
  }


  export type T_diagnosticoAvgAggregateInputType = {
    codigoDiagnostico?: true
    tiempoEstimado?: true
  }

  export type T_diagnosticoSumAggregateInputType = {
    codigoDiagnostico?: true
    tiempoEstimado?: true
  }

  export type T_diagnosticoMinAggregateInputType = {
    codigoDiagnostico?: true
    fechaDiagnostico?: true
    diagnostico?: true
    tiempoEstimado?: true
    observacion?: true
    compra?: true
    idUsuario?: true
    idIncidencia?: true
  }

  export type T_diagnosticoMaxAggregateInputType = {
    codigoDiagnostico?: true
    fechaDiagnostico?: true
    diagnostico?: true
    tiempoEstimado?: true
    observacion?: true
    compra?: true
    idUsuario?: true
    idIncidencia?: true
  }

  export type T_diagnosticoCountAggregateInputType = {
    codigoDiagnostico?: true
    fechaDiagnostico?: true
    diagnostico?: true
    tiempoEstimado?: true
    observacion?: true
    compra?: true
    idUsuario?: true
    idIncidencia?: true
    _all?: true
  }

  export type T_diagnosticoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_diagnostico to aggregate.
     */
    where?: t_diagnosticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_diagnosticos to fetch.
     */
    orderBy?: t_diagnosticoOrderByWithRelationInput | t_diagnosticoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: t_diagnosticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_diagnosticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_diagnosticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned t_diagnosticos
    **/
    _count?: true | T_diagnosticoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: T_diagnosticoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: T_diagnosticoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: T_diagnosticoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: T_diagnosticoMaxAggregateInputType
  }

  export type GetT_diagnosticoAggregateType<T extends T_diagnosticoAggregateArgs> = {
        [P in keyof T & keyof AggregateT_diagnostico]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateT_diagnostico[P]>
      : GetScalarType<T[P], AggregateT_diagnostico[P]>
  }




  export type t_diagnosticoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: t_diagnosticoWhereInput
    orderBy?: t_diagnosticoOrderByWithAggregationInput | t_diagnosticoOrderByWithAggregationInput[]
    by: T_diagnosticoScalarFieldEnum[] | T_diagnosticoScalarFieldEnum
    having?: t_diagnosticoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: T_diagnosticoCountAggregateInputType | true
    _avg?: T_diagnosticoAvgAggregateInputType
    _sum?: T_diagnosticoSumAggregateInputType
    _min?: T_diagnosticoMinAggregateInputType
    _max?: T_diagnosticoMaxAggregateInputType
  }

  export type T_diagnosticoGroupByOutputType = {
    codigoDiagnostico: number
    fechaDiagnostico: Date
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idUsuario: string
    idIncidencia: string
    _count: T_diagnosticoCountAggregateOutputType | null
    _avg: T_diagnosticoAvgAggregateOutputType | null
    _sum: T_diagnosticoSumAggregateOutputType | null
    _min: T_diagnosticoMinAggregateOutputType | null
    _max: T_diagnosticoMaxAggregateOutputType | null
  }

  type GetT_diagnosticoGroupByPayload<T extends t_diagnosticoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<T_diagnosticoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof T_diagnosticoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], T_diagnosticoGroupByOutputType[P]>
            : GetScalarType<T[P], T_diagnosticoGroupByOutputType[P]>
        }
      >
    >


  export type t_diagnosticoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    codigoDiagnostico?: boolean
    fechaDiagnostico?: boolean
    diagnostico?: boolean
    tiempoEstimado?: boolean
    observacion?: boolean
    compra?: boolean
    idUsuario?: boolean
    idIncidencia?: boolean
    Usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    Incidencia?: boolean | t_incidenciasDefaultArgs<ExtArgs>
    imagenes?: boolean | t_diagnostico$imagenesArgs<ExtArgs>
    _count?: boolean | T_diagnosticoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["t_diagnostico"]>

  export type t_diagnosticoSelectScalar = {
    codigoDiagnostico?: boolean
    fechaDiagnostico?: boolean
    diagnostico?: boolean
    tiempoEstimado?: boolean
    observacion?: boolean
    compra?: boolean
    idUsuario?: boolean
    idIncidencia?: boolean
  }


  export type t_diagnosticoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Usuario?: boolean | t_usuariosDefaultArgs<ExtArgs>
    Incidencia?: boolean | t_incidenciasDefaultArgs<ExtArgs>
    imagenes?: boolean | t_diagnostico$imagenesArgs<ExtArgs>
    _count?: boolean | T_diagnosticoCountOutputTypeDefaultArgs<ExtArgs>
  }


  export type $t_diagnosticoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "t_diagnostico"
    objects: {
      Usuario: Prisma.$t_usuariosPayload<ExtArgs>
      Incidencia: Prisma.$t_incidenciasPayload<ExtArgs>
      imagenes: Prisma.$t_imagenesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      codigoDiagnostico: number
      fechaDiagnostico: Date
      diagnostico: string
      tiempoEstimado: number
      observacion: string
      compra: boolean
      idUsuario: string
      idIncidencia: string
    }, ExtArgs["result"]["t_diagnostico"]>
    composites: {}
  }


  type t_diagnosticoGetPayload<S extends boolean | null | undefined | t_diagnosticoDefaultArgs> = $Result.GetResult<Prisma.$t_diagnosticoPayload, S>

  type t_diagnosticoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<t_diagnosticoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: T_diagnosticoCountAggregateInputType | true
    }

  export interface t_diagnosticoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['t_diagnostico'], meta: { name: 't_diagnostico' } }
    /**
     * Find zero or one T_diagnostico that matches the filter.
     * @param {t_diagnosticoFindUniqueArgs} args - Arguments to find a T_diagnostico
     * @example
     * // Get one T_diagnostico
     * const t_diagnostico = await prisma.t_diagnostico.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends t_diagnosticoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, t_diagnosticoFindUniqueArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one T_diagnostico that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {t_diagnosticoFindUniqueOrThrowArgs} args - Arguments to find a T_diagnostico
     * @example
     * // Get one T_diagnostico
     * const t_diagnostico = await prisma.t_diagnostico.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends t_diagnosticoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_diagnosticoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first T_diagnostico that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_diagnosticoFindFirstArgs} args - Arguments to find a T_diagnostico
     * @example
     * // Get one T_diagnostico
     * const t_diagnostico = await prisma.t_diagnostico.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends t_diagnosticoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, t_diagnosticoFindFirstArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first T_diagnostico that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_diagnosticoFindFirstOrThrowArgs} args - Arguments to find a T_diagnostico
     * @example
     * // Get one T_diagnostico
     * const t_diagnostico = await prisma.t_diagnostico.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends t_diagnosticoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, t_diagnosticoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more T_diagnosticos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_diagnosticoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all T_diagnosticos
     * const t_diagnosticos = await prisma.t_diagnostico.findMany()
     * 
     * // Get first 10 T_diagnosticos
     * const t_diagnosticos = await prisma.t_diagnostico.findMany({ take: 10 })
     * 
     * // Only select the `codigoDiagnostico`
     * const t_diagnosticoWithCodigoDiagnosticoOnly = await prisma.t_diagnostico.findMany({ select: { codigoDiagnostico: true } })
     * 
    **/
    findMany<T extends t_diagnosticoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_diagnosticoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a T_diagnostico.
     * @param {t_diagnosticoCreateArgs} args - Arguments to create a T_diagnostico.
     * @example
     * // Create one T_diagnostico
     * const T_diagnostico = await prisma.t_diagnostico.create({
     *   data: {
     *     // ... data to create a T_diagnostico
     *   }
     * })
     * 
    **/
    create<T extends t_diagnosticoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, t_diagnosticoCreateArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many T_diagnosticos.
     * @param {t_diagnosticoCreateManyArgs} args - Arguments to create many T_diagnosticos.
     * @example
     * // Create many T_diagnosticos
     * const t_diagnostico = await prisma.t_diagnostico.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends t_diagnosticoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_diagnosticoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a T_diagnostico.
     * @param {t_diagnosticoDeleteArgs} args - Arguments to delete one T_diagnostico.
     * @example
     * // Delete one T_diagnostico
     * const T_diagnostico = await prisma.t_diagnostico.delete({
     *   where: {
     *     // ... filter to delete one T_diagnostico
     *   }
     * })
     * 
    **/
    delete<T extends t_diagnosticoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, t_diagnosticoDeleteArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one T_diagnostico.
     * @param {t_diagnosticoUpdateArgs} args - Arguments to update one T_diagnostico.
     * @example
     * // Update one T_diagnostico
     * const t_diagnostico = await prisma.t_diagnostico.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends t_diagnosticoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, t_diagnosticoUpdateArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more T_diagnosticos.
     * @param {t_diagnosticoDeleteManyArgs} args - Arguments to filter T_diagnosticos to delete.
     * @example
     * // Delete a few T_diagnosticos
     * const { count } = await prisma.t_diagnostico.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends t_diagnosticoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, t_diagnosticoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more T_diagnosticos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_diagnosticoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many T_diagnosticos
     * const t_diagnostico = await prisma.t_diagnostico.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends t_diagnosticoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, t_diagnosticoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one T_diagnostico.
     * @param {t_diagnosticoUpsertArgs} args - Arguments to update or create a T_diagnostico.
     * @example
     * // Update or create a T_diagnostico
     * const t_diagnostico = await prisma.t_diagnostico.upsert({
     *   create: {
     *     // ... data to create a T_diagnostico
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the T_diagnostico we want to update
     *   }
     * })
    **/
    upsert<T extends t_diagnosticoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, t_diagnosticoUpsertArgs<ExtArgs>>
    ): Prisma__t_diagnosticoClient<$Result.GetResult<Prisma.$t_diagnosticoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of T_diagnosticos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_diagnosticoCountArgs} args - Arguments to filter T_diagnosticos to count.
     * @example
     * // Count the number of T_diagnosticos
     * const count = await prisma.t_diagnostico.count({
     *   where: {
     *     // ... the filter for the T_diagnosticos we want to count
     *   }
     * })
    **/
    count<T extends t_diagnosticoCountArgs>(
      args?: Subset<T, t_diagnosticoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], T_diagnosticoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a T_diagnostico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {T_diagnosticoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends T_diagnosticoAggregateArgs>(args: Subset<T, T_diagnosticoAggregateArgs>): Prisma.PrismaPromise<GetT_diagnosticoAggregateType<T>>

    /**
     * Group by T_diagnostico.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {t_diagnosticoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends t_diagnosticoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: t_diagnosticoGroupByArgs['orderBy'] }
        : { orderBy?: t_diagnosticoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, t_diagnosticoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetT_diagnosticoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the t_diagnostico model
   */
  readonly fields: t_diagnosticoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for t_diagnostico.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__t_diagnosticoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    Usuario<T extends t_usuariosDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_usuariosDefaultArgs<ExtArgs>>): Prisma__t_usuariosClient<$Result.GetResult<Prisma.$t_usuariosPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    Incidencia<T extends t_incidenciasDefaultArgs<ExtArgs> = {}>(args?: Subset<T, t_incidenciasDefaultArgs<ExtArgs>>): Prisma__t_incidenciasClient<$Result.GetResult<Prisma.$t_incidenciasPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    imagenes<T extends t_diagnostico$imagenesArgs<ExtArgs> = {}>(args?: Subset<T, t_diagnostico$imagenesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$t_imagenesPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the t_diagnostico model
   */ 
  interface t_diagnosticoFieldRefs {
    readonly codigoDiagnostico: FieldRef<"t_diagnostico", 'Int'>
    readonly fechaDiagnostico: FieldRef<"t_diagnostico", 'DateTime'>
    readonly diagnostico: FieldRef<"t_diagnostico", 'String'>
    readonly tiempoEstimado: FieldRef<"t_diagnostico", 'Int'>
    readonly observacion: FieldRef<"t_diagnostico", 'String'>
    readonly compra: FieldRef<"t_diagnostico", 'Boolean'>
    readonly idUsuario: FieldRef<"t_diagnostico", 'String'>
    readonly idIncidencia: FieldRef<"t_diagnostico", 'String'>
  }
    

  // Custom InputTypes
  /**
   * t_diagnostico findUnique
   */
  export type t_diagnosticoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * Filter, which t_diagnostico to fetch.
     */
    where: t_diagnosticoWhereUniqueInput
  }

  /**
   * t_diagnostico findUniqueOrThrow
   */
  export type t_diagnosticoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * Filter, which t_diagnostico to fetch.
     */
    where: t_diagnosticoWhereUniqueInput
  }

  /**
   * t_diagnostico findFirst
   */
  export type t_diagnosticoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * Filter, which t_diagnostico to fetch.
     */
    where?: t_diagnosticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_diagnosticos to fetch.
     */
    orderBy?: t_diagnosticoOrderByWithRelationInput | t_diagnosticoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_diagnosticos.
     */
    cursor?: t_diagnosticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_diagnosticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_diagnosticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_diagnosticos.
     */
    distinct?: T_diagnosticoScalarFieldEnum | T_diagnosticoScalarFieldEnum[]
  }

  /**
   * t_diagnostico findFirstOrThrow
   */
  export type t_diagnosticoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * Filter, which t_diagnostico to fetch.
     */
    where?: t_diagnosticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_diagnosticos to fetch.
     */
    orderBy?: t_diagnosticoOrderByWithRelationInput | t_diagnosticoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for t_diagnosticos.
     */
    cursor?: t_diagnosticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_diagnosticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_diagnosticos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of t_diagnosticos.
     */
    distinct?: T_diagnosticoScalarFieldEnum | T_diagnosticoScalarFieldEnum[]
  }

  /**
   * t_diagnostico findMany
   */
  export type t_diagnosticoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * Filter, which t_diagnosticos to fetch.
     */
    where?: t_diagnosticoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of t_diagnosticos to fetch.
     */
    orderBy?: t_diagnosticoOrderByWithRelationInput | t_diagnosticoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing t_diagnosticos.
     */
    cursor?: t_diagnosticoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` t_diagnosticos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` t_diagnosticos.
     */
    skip?: number
    distinct?: T_diagnosticoScalarFieldEnum | T_diagnosticoScalarFieldEnum[]
  }

  /**
   * t_diagnostico create
   */
  export type t_diagnosticoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * The data needed to create a t_diagnostico.
     */
    data: XOR<t_diagnosticoCreateInput, t_diagnosticoUncheckedCreateInput>
  }

  /**
   * t_diagnostico createMany
   */
  export type t_diagnosticoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many t_diagnosticos.
     */
    data: t_diagnosticoCreateManyInput | t_diagnosticoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * t_diagnostico update
   */
  export type t_diagnosticoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * The data needed to update a t_diagnostico.
     */
    data: XOR<t_diagnosticoUpdateInput, t_diagnosticoUncheckedUpdateInput>
    /**
     * Choose, which t_diagnostico to update.
     */
    where: t_diagnosticoWhereUniqueInput
  }

  /**
   * t_diagnostico updateMany
   */
  export type t_diagnosticoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update t_diagnosticos.
     */
    data: XOR<t_diagnosticoUpdateManyMutationInput, t_diagnosticoUncheckedUpdateManyInput>
    /**
     * Filter which t_diagnosticos to update
     */
    where?: t_diagnosticoWhereInput
  }

  /**
   * t_diagnostico upsert
   */
  export type t_diagnosticoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * The filter to search for the t_diagnostico to update in case it exists.
     */
    where: t_diagnosticoWhereUniqueInput
    /**
     * In case the t_diagnostico found by the `where` argument doesn't exist, create a new t_diagnostico with this data.
     */
    create: XOR<t_diagnosticoCreateInput, t_diagnosticoUncheckedCreateInput>
    /**
     * In case the t_diagnostico was found with the provided `where` argument, update it with this data.
     */
    update: XOR<t_diagnosticoUpdateInput, t_diagnosticoUncheckedUpdateInput>
  }

  /**
   * t_diagnostico delete
   */
  export type t_diagnosticoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
    /**
     * Filter which t_diagnostico to delete.
     */
    where: t_diagnosticoWhereUniqueInput
  }

  /**
   * t_diagnostico deleteMany
   */
  export type t_diagnosticoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which t_diagnosticos to delete
     */
    where?: t_diagnosticoWhereInput
  }

  /**
   * t_diagnostico.imagenes
   */
  export type t_diagnostico$imagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_imagenes
     */
    select?: t_imagenesSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_imagenesInclude<ExtArgs> | null
    where?: t_imagenesWhereInput
    orderBy?: t_imagenesOrderByWithRelationInput | t_imagenesOrderByWithRelationInput[]
    cursor?: t_imagenesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: T_imagenesScalarFieldEnum | T_imagenesScalarFieldEnum[]
  }

  /**
   * t_diagnostico without action
   */
  export type t_diagnosticoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the t_diagnostico
     */
    select?: t_diagnosticoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: t_diagnosticoInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const T_imagenesScalarFieldEnum: {
    idImagen: 'idImagen',
    rutaImagen: 'rutaImagen',
    tipoImagen: 'tipoImagen',
    idDiagnostico: 'idDiagnostico',
    idIncidencia: 'idIncidencia'
  };

  export type T_imagenesScalarFieldEnum = (typeof T_imagenesScalarFieldEnum)[keyof typeof T_imagenesScalarFieldEnum]


  export const T_rolesScalarFieldEnum: {
    idRol: 'idRol',
    descripcion: 'descripcion',
    sistema: 'sistema',
    estado: 'estado'
  };

  export type T_rolesScalarFieldEnum = (typeof T_rolesScalarFieldEnum)[keyof typeof T_rolesScalarFieldEnum]


  export const T_bitacora_generalScalarFieldEnum: {
    codigoBitacora: 'codigoBitacora',
    sistema: 'sistema',
    referencia: 'referencia',
    idUsuario: 'idUsuario',
    idPantalla: 'idPantalla'
  };

  export type T_bitacora_generalScalarFieldEnum = (typeof T_bitacora_generalScalarFieldEnum)[keyof typeof T_bitacora_generalScalarFieldEnum]


  export const T_pantallaScalarFieldEnum: {
    codigoPantalla: 'codigoPantalla',
    nombre: 'nombre',
    descripcion: 'descripcion'
  };

  export type T_pantallaScalarFieldEnum = (typeof T_pantallaScalarFieldEnum)[keyof typeof T_pantallaScalarFieldEnum]


  export const T_usuariosScalarFieldEnum: {
    cedula: 'cedula',
    nombre: 'nombre',
    apellidoUno: 'apellidoUno',
    apellidoDos: 'apellidoDos',
    telefono: 'telefono',
    correo: 'correo',
    puesto: 'puesto',
    departamento: 'departamento',
    estado: 'estado',
    contrasena: 'contrasena'
  };

  export type T_usuariosScalarFieldEnum = (typeof T_usuariosScalarFieldEnum)[keyof typeof T_usuariosScalarFieldEnum]


  export const T_usuario_x_incidenciaScalarFieldEnum: {
    codigoAsignacion: 'codigoAsignacion',
    idUsuario: 'idUsuario',
    idIncidencia: 'idIncidencia',
    fechaAsignacion: 'fechaAsignacion'
  };

  export type T_usuario_x_incidenciaScalarFieldEnum = (typeof T_usuario_x_incidenciaScalarFieldEnum)[keyof typeof T_usuario_x_incidenciaScalarFieldEnum]


  export const T_PantallasScalarFieldEnum: {
    codigoPantalla: 'codigoPantalla',
    nombrePantalla: 'nombrePantalla',
    descripcionPantalla: 'descripcionPantalla'
  };

  export type T_PantallasScalarFieldEnum = (typeof T_PantallasScalarFieldEnum)[keyof typeof T_PantallasScalarFieldEnum]


  export const T_bitacora_cambio_estadoScalarFieldEnum: {
    codigoBitacora: 'codigoBitacora',
    idIncidencia: 'idIncidencia',
    fechaCambio: 'fechaCambio',
    idEstadoActual: 'idEstadoActual',
    idEstadoAnterior: 'idEstadoAnterior',
    idUsuario: 'idUsuario'
  };

  export type T_bitacora_cambio_estadoScalarFieldEnum = (typeof T_bitacora_cambio_estadoScalarFieldEnum)[keyof typeof T_bitacora_cambio_estadoScalarFieldEnum]


  export const T_usuarios_x_rolScalarFieldEnum: {
    userId: 'userId',
    roleId: 'roleId'
  };

  export type T_usuarios_x_rolScalarFieldEnum = (typeof T_usuarios_x_rolScalarFieldEnum)[keyof typeof T_usuarios_x_rolScalarFieldEnum]


  export const T_afectacionesScalarFieldEnum: {
    id: 'id',
    descripcion: 'descripcion'
  };

  export type T_afectacionesScalarFieldEnum = (typeof T_afectacionesScalarFieldEnum)[keyof typeof T_afectacionesScalarFieldEnum]


  export const T_categoriasScalarFieldEnum: {
    id: 'id',
    descripcion: 'descripcion'
  };

  export type T_categoriasScalarFieldEnum = (typeof T_categoriasScalarFieldEnum)[keyof typeof T_categoriasScalarFieldEnum]


  export const T_estadosScalarFieldEnum: {
    id: 'id',
    descripcion: 'descripcion'
  };

  export type T_estadosScalarFieldEnum = (typeof T_estadosScalarFieldEnum)[keyof typeof T_estadosScalarFieldEnum]


  export const T_riesgosScalarFieldEnum: {
    id: 'id',
    descripcion: 'descripcion'
  };

  export type T_riesgosScalarFieldEnum = (typeof T_riesgosScalarFieldEnum)[keyof typeof T_riesgosScalarFieldEnum]


  export const T_prioridadesScalarFieldEnum: {
    id: 'id',
    descripcion: 'descripcion'
  };

  export type T_prioridadesScalarFieldEnum = (typeof T_prioridadesScalarFieldEnum)[keyof typeof T_prioridadesScalarFieldEnum]


  export const T_incidenciasScalarFieldEnum: {
    codigoIncidencia: 'codigoIncidencia',
    nombre: 'nombre',
    descripcion: 'descripcion',
    justificacionCierre: 'justificacionCierre',
    lugarIncidencia: 'lugarIncidencia',
    fechaRegistro: 'fechaRegistro',
    costo: 'costo',
    duracionGestion: 'duracionGestion',
    idUsuario: 'idUsuario',
    idAfectacion: 'idAfectacion',
    idRiesgo: 'idRiesgo',
    idCategoria: 'idCategoria',
    idPrioridad: 'idPrioridad',
    idEstado: 'idEstado'
  };

  export type T_incidenciasScalarFieldEnum = (typeof T_incidenciasScalarFieldEnum)[keyof typeof T_incidenciasScalarFieldEnum]


  export const T_diagnosticoScalarFieldEnum: {
    codigoDiagnostico: 'codigoDiagnostico',
    fechaDiagnostico: 'fechaDiagnostico',
    diagnostico: 'diagnostico',
    tiempoEstimado: 'tiempoEstimado',
    observacion: 'observacion',
    compra: 'compra',
    idUsuario: 'idUsuario',
    idIncidencia: 'idIncidencia'
  };

  export type T_diagnosticoScalarFieldEnum = (typeof T_diagnosticoScalarFieldEnum)[keyof typeof T_diagnosticoScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type t_imagenesWhereInput = {
    AND?: t_imagenesWhereInput | t_imagenesWhereInput[]
    OR?: t_imagenesWhereInput[]
    NOT?: t_imagenesWhereInput | t_imagenesWhereInput[]
    idImagen?: IntFilter<"t_imagenes"> | number
    rutaImagen?: StringFilter<"t_imagenes"> | string
    tipoImagen?: BoolFilter<"t_imagenes"> | boolean
    idDiagnostico?: IntNullableFilter<"t_imagenes"> | number | null
    idIncidencia?: StringFilter<"t_imagenes"> | string
    incidencia?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
    diagnostico?: XOR<T_diagnosticoNullableRelationFilter, t_diagnosticoWhereInput> | null
  }

  export type t_imagenesOrderByWithRelationInput = {
    idImagen?: SortOrder
    rutaImagen?: SortOrder
    tipoImagen?: SortOrder
    idDiagnostico?: SortOrderInput | SortOrder
    idIncidencia?: SortOrder
    incidencia?: t_incidenciasOrderByWithRelationInput
    diagnostico?: t_diagnosticoOrderByWithRelationInput
  }

  export type t_imagenesWhereUniqueInput = Prisma.AtLeast<{
    idImagen?: number
    AND?: t_imagenesWhereInput | t_imagenesWhereInput[]
    OR?: t_imagenesWhereInput[]
    NOT?: t_imagenesWhereInput | t_imagenesWhereInput[]
    rutaImagen?: StringFilter<"t_imagenes"> | string
    tipoImagen?: BoolFilter<"t_imagenes"> | boolean
    idDiagnostico?: IntNullableFilter<"t_imagenes"> | number | null
    idIncidencia?: StringFilter<"t_imagenes"> | string
    incidencia?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
    diagnostico?: XOR<T_diagnosticoNullableRelationFilter, t_diagnosticoWhereInput> | null
  }, "idImagen" | "idImagen">

  export type t_imagenesOrderByWithAggregationInput = {
    idImagen?: SortOrder
    rutaImagen?: SortOrder
    tipoImagen?: SortOrder
    idDiagnostico?: SortOrderInput | SortOrder
    idIncidencia?: SortOrder
    _count?: t_imagenesCountOrderByAggregateInput
    _avg?: t_imagenesAvgOrderByAggregateInput
    _max?: t_imagenesMaxOrderByAggregateInput
    _min?: t_imagenesMinOrderByAggregateInput
    _sum?: t_imagenesSumOrderByAggregateInput
  }

  export type t_imagenesScalarWhereWithAggregatesInput = {
    AND?: t_imagenesScalarWhereWithAggregatesInput | t_imagenesScalarWhereWithAggregatesInput[]
    OR?: t_imagenesScalarWhereWithAggregatesInput[]
    NOT?: t_imagenesScalarWhereWithAggregatesInput | t_imagenesScalarWhereWithAggregatesInput[]
    idImagen?: IntWithAggregatesFilter<"t_imagenes"> | number
    rutaImagen?: StringWithAggregatesFilter<"t_imagenes"> | string
    tipoImagen?: BoolWithAggregatesFilter<"t_imagenes"> | boolean
    idDiagnostico?: IntNullableWithAggregatesFilter<"t_imagenes"> | number | null
    idIncidencia?: StringWithAggregatesFilter<"t_imagenes"> | string
  }

  export type t_rolesWhereInput = {
    AND?: t_rolesWhereInput | t_rolesWhereInput[]
    OR?: t_rolesWhereInput[]
    NOT?: t_rolesWhereInput | t_rolesWhereInput[]
    idRol?: IntFilter<"t_roles"> | number
    descripcion?: StringFilter<"t_roles"> | string
    sistema?: StringFilter<"t_roles"> | string
    estado?: BoolFilter<"t_roles"> | boolean
    usuarios?: T_usuariosListRelationFilter
    t_usuarios_x_rol?: T_usuarios_x_rolListRelationFilter
  }

  export type t_rolesOrderByWithRelationInput = {
    idRol?: SortOrder
    descripcion?: SortOrder
    sistema?: SortOrder
    estado?: SortOrder
    usuarios?: t_usuariosOrderByRelationAggregateInput
    t_usuarios_x_rol?: t_usuarios_x_rolOrderByRelationAggregateInput
  }

  export type t_rolesWhereUniqueInput = Prisma.AtLeast<{
    idRol?: number
    AND?: t_rolesWhereInput | t_rolesWhereInput[]
    OR?: t_rolesWhereInput[]
    NOT?: t_rolesWhereInput | t_rolesWhereInput[]
    descripcion?: StringFilter<"t_roles"> | string
    sistema?: StringFilter<"t_roles"> | string
    estado?: BoolFilter<"t_roles"> | boolean
    usuarios?: T_usuariosListRelationFilter
    t_usuarios_x_rol?: T_usuarios_x_rolListRelationFilter
  }, "idRol" | "idRol">

  export type t_rolesOrderByWithAggregationInput = {
    idRol?: SortOrder
    descripcion?: SortOrder
    sistema?: SortOrder
    estado?: SortOrder
    _count?: t_rolesCountOrderByAggregateInput
    _avg?: t_rolesAvgOrderByAggregateInput
    _max?: t_rolesMaxOrderByAggregateInput
    _min?: t_rolesMinOrderByAggregateInput
    _sum?: t_rolesSumOrderByAggregateInput
  }

  export type t_rolesScalarWhereWithAggregatesInput = {
    AND?: t_rolesScalarWhereWithAggregatesInput | t_rolesScalarWhereWithAggregatesInput[]
    OR?: t_rolesScalarWhereWithAggregatesInput[]
    NOT?: t_rolesScalarWhereWithAggregatesInput | t_rolesScalarWhereWithAggregatesInput[]
    idRol?: IntWithAggregatesFilter<"t_roles"> | number
    descripcion?: StringWithAggregatesFilter<"t_roles"> | string
    sistema?: StringWithAggregatesFilter<"t_roles"> | string
    estado?: BoolWithAggregatesFilter<"t_roles"> | boolean
  }

  export type t_bitacora_generalWhereInput = {
    AND?: t_bitacora_generalWhereInput | t_bitacora_generalWhereInput[]
    OR?: t_bitacora_generalWhereInput[]
    NOT?: t_bitacora_generalWhereInput | t_bitacora_generalWhereInput[]
    codigoBitacora?: IntFilter<"t_bitacora_general"> | number
    sistema?: StringFilter<"t_bitacora_general"> | string
    referencia?: StringFilter<"t_bitacora_general"> | string
    idUsuario?: StringFilter<"t_bitacora_general"> | string
    idPantalla?: IntFilter<"t_bitacora_general"> | number
    Usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    Pantalla?: XOR<T_pantallaRelationFilter, t_pantallaWhereInput>
  }

  export type t_bitacora_generalOrderByWithRelationInput = {
    codigoBitacora?: SortOrder
    sistema?: SortOrder
    referencia?: SortOrder
    idUsuario?: SortOrder
    idPantalla?: SortOrder
    Usuario?: t_usuariosOrderByWithRelationInput
    Pantalla?: t_pantallaOrderByWithRelationInput
  }

  export type t_bitacora_generalWhereUniqueInput = Prisma.AtLeast<{
    codigoBitacora?: number
    AND?: t_bitacora_generalWhereInput | t_bitacora_generalWhereInput[]
    OR?: t_bitacora_generalWhereInput[]
    NOT?: t_bitacora_generalWhereInput | t_bitacora_generalWhereInput[]
    sistema?: StringFilter<"t_bitacora_general"> | string
    referencia?: StringFilter<"t_bitacora_general"> | string
    idUsuario?: StringFilter<"t_bitacora_general"> | string
    idPantalla?: IntFilter<"t_bitacora_general"> | number
    Usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    Pantalla?: XOR<T_pantallaRelationFilter, t_pantallaWhereInput>
  }, "codigoBitacora" | "codigoBitacora">

  export type t_bitacora_generalOrderByWithAggregationInput = {
    codigoBitacora?: SortOrder
    sistema?: SortOrder
    referencia?: SortOrder
    idUsuario?: SortOrder
    idPantalla?: SortOrder
    _count?: t_bitacora_generalCountOrderByAggregateInput
    _avg?: t_bitacora_generalAvgOrderByAggregateInput
    _max?: t_bitacora_generalMaxOrderByAggregateInput
    _min?: t_bitacora_generalMinOrderByAggregateInput
    _sum?: t_bitacora_generalSumOrderByAggregateInput
  }

  export type t_bitacora_generalScalarWhereWithAggregatesInput = {
    AND?: t_bitacora_generalScalarWhereWithAggregatesInput | t_bitacora_generalScalarWhereWithAggregatesInput[]
    OR?: t_bitacora_generalScalarWhereWithAggregatesInput[]
    NOT?: t_bitacora_generalScalarWhereWithAggregatesInput | t_bitacora_generalScalarWhereWithAggregatesInput[]
    codigoBitacora?: IntWithAggregatesFilter<"t_bitacora_general"> | number
    sistema?: StringWithAggregatesFilter<"t_bitacora_general"> | string
    referencia?: StringWithAggregatesFilter<"t_bitacora_general"> | string
    idUsuario?: StringWithAggregatesFilter<"t_bitacora_general"> | string
    idPantalla?: IntWithAggregatesFilter<"t_bitacora_general"> | number
  }

  export type t_pantallaWhereInput = {
    AND?: t_pantallaWhereInput | t_pantallaWhereInput[]
    OR?: t_pantallaWhereInput[]
    NOT?: t_pantallaWhereInput | t_pantallaWhereInput[]
    codigoPantalla?: IntFilter<"t_pantalla"> | number
    nombre?: StringFilter<"t_pantalla"> | string
    descripcion?: StringFilter<"t_pantalla"> | string
    t_bitacora_general?: T_bitacora_generalListRelationFilter
  }

  export type t_pantallaOrderByWithRelationInput = {
    codigoPantalla?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    t_bitacora_general?: t_bitacora_generalOrderByRelationAggregateInput
  }

  export type t_pantallaWhereUniqueInput = Prisma.AtLeast<{
    codigoPantalla?: number
    AND?: t_pantallaWhereInput | t_pantallaWhereInput[]
    OR?: t_pantallaWhereInput[]
    NOT?: t_pantallaWhereInput | t_pantallaWhereInput[]
    nombre?: StringFilter<"t_pantalla"> | string
    descripcion?: StringFilter<"t_pantalla"> | string
    t_bitacora_general?: T_bitacora_generalListRelationFilter
  }, "codigoPantalla" | "codigoPantalla">

  export type t_pantallaOrderByWithAggregationInput = {
    codigoPantalla?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    _count?: t_pantallaCountOrderByAggregateInput
    _avg?: t_pantallaAvgOrderByAggregateInput
    _max?: t_pantallaMaxOrderByAggregateInput
    _min?: t_pantallaMinOrderByAggregateInput
    _sum?: t_pantallaSumOrderByAggregateInput
  }

  export type t_pantallaScalarWhereWithAggregatesInput = {
    AND?: t_pantallaScalarWhereWithAggregatesInput | t_pantallaScalarWhereWithAggregatesInput[]
    OR?: t_pantallaScalarWhereWithAggregatesInput[]
    NOT?: t_pantallaScalarWhereWithAggregatesInput | t_pantallaScalarWhereWithAggregatesInput[]
    codigoPantalla?: IntWithAggregatesFilter<"t_pantalla"> | number
    nombre?: StringWithAggregatesFilter<"t_pantalla"> | string
    descripcion?: StringWithAggregatesFilter<"t_pantalla"> | string
  }

  export type t_usuariosWhereInput = {
    AND?: t_usuariosWhereInput | t_usuariosWhereInput[]
    OR?: t_usuariosWhereInput[]
    NOT?: t_usuariosWhereInput | t_usuariosWhereInput[]
    cedula?: StringFilter<"t_usuarios"> | string
    nombre?: StringFilter<"t_usuarios"> | string
    apellidoUno?: StringFilter<"t_usuarios"> | string
    apellidoDos?: StringFilter<"t_usuarios"> | string
    telefono?: IntNullableFilter<"t_usuarios"> | number | null
    correo?: StringFilter<"t_usuarios"> | string
    puesto?: StringFilter<"t_usuarios"> | string
    departamento?: IntFilter<"t_usuarios"> | number
    estado?: BoolFilter<"t_usuarios"> | boolean
    contrasena?: StringFilter<"t_usuarios"> | string
    incidencias?: T_incidenciasListRelationFilter
    roles?: T_rolesListRelationFilter
    t_usuarios_x_rol?: T_usuarios_x_rolListRelationFilter
    diagnostico?: T_diagnosticoListRelationFilter
    usuario?: T_usuario_x_incidenciaListRelationFilter
    t_bitacora_cambio_estado?: T_bitacora_cambio_estadoListRelationFilter
    t_bitacora_general?: T_bitacora_generalListRelationFilter
  }

  export type t_usuariosOrderByWithRelationInput = {
    cedula?: SortOrder
    nombre?: SortOrder
    apellidoUno?: SortOrder
    apellidoDos?: SortOrder
    telefono?: SortOrderInput | SortOrder
    correo?: SortOrder
    puesto?: SortOrder
    departamento?: SortOrder
    estado?: SortOrder
    contrasena?: SortOrder
    incidencias?: t_incidenciasOrderByRelationAggregateInput
    roles?: t_rolesOrderByRelationAggregateInput
    t_usuarios_x_rol?: t_usuarios_x_rolOrderByRelationAggregateInput
    diagnostico?: t_diagnosticoOrderByRelationAggregateInput
    usuario?: t_usuario_x_incidenciaOrderByRelationAggregateInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoOrderByRelationAggregateInput
    t_bitacora_general?: t_bitacora_generalOrderByRelationAggregateInput
  }

  export type t_usuariosWhereUniqueInput = Prisma.AtLeast<{
    cedula?: string
    AND?: t_usuariosWhereInput | t_usuariosWhereInput[]
    OR?: t_usuariosWhereInput[]
    NOT?: t_usuariosWhereInput | t_usuariosWhereInput[]
    nombre?: StringFilter<"t_usuarios"> | string
    apellidoUno?: StringFilter<"t_usuarios"> | string
    apellidoDos?: StringFilter<"t_usuarios"> | string
    telefono?: IntNullableFilter<"t_usuarios"> | number | null
    correo?: StringFilter<"t_usuarios"> | string
    puesto?: StringFilter<"t_usuarios"> | string
    departamento?: IntFilter<"t_usuarios"> | number
    estado?: BoolFilter<"t_usuarios"> | boolean
    contrasena?: StringFilter<"t_usuarios"> | string
    incidencias?: T_incidenciasListRelationFilter
    roles?: T_rolesListRelationFilter
    t_usuarios_x_rol?: T_usuarios_x_rolListRelationFilter
    diagnostico?: T_diagnosticoListRelationFilter
    usuario?: T_usuario_x_incidenciaListRelationFilter
    t_bitacora_cambio_estado?: T_bitacora_cambio_estadoListRelationFilter
    t_bitacora_general?: T_bitacora_generalListRelationFilter
  }, "cedula">

  export type t_usuariosOrderByWithAggregationInput = {
    cedula?: SortOrder
    nombre?: SortOrder
    apellidoUno?: SortOrder
    apellidoDos?: SortOrder
    telefono?: SortOrderInput | SortOrder
    correo?: SortOrder
    puesto?: SortOrder
    departamento?: SortOrder
    estado?: SortOrder
    contrasena?: SortOrder
    _count?: t_usuariosCountOrderByAggregateInput
    _avg?: t_usuariosAvgOrderByAggregateInput
    _max?: t_usuariosMaxOrderByAggregateInput
    _min?: t_usuariosMinOrderByAggregateInput
    _sum?: t_usuariosSumOrderByAggregateInput
  }

  export type t_usuariosScalarWhereWithAggregatesInput = {
    AND?: t_usuariosScalarWhereWithAggregatesInput | t_usuariosScalarWhereWithAggregatesInput[]
    OR?: t_usuariosScalarWhereWithAggregatesInput[]
    NOT?: t_usuariosScalarWhereWithAggregatesInput | t_usuariosScalarWhereWithAggregatesInput[]
    cedula?: StringWithAggregatesFilter<"t_usuarios"> | string
    nombre?: StringWithAggregatesFilter<"t_usuarios"> | string
    apellidoUno?: StringWithAggregatesFilter<"t_usuarios"> | string
    apellidoDos?: StringWithAggregatesFilter<"t_usuarios"> | string
    telefono?: IntNullableWithAggregatesFilter<"t_usuarios"> | number | null
    correo?: StringWithAggregatesFilter<"t_usuarios"> | string
    puesto?: StringWithAggregatesFilter<"t_usuarios"> | string
    departamento?: IntWithAggregatesFilter<"t_usuarios"> | number
    estado?: BoolWithAggregatesFilter<"t_usuarios"> | boolean
    contrasena?: StringWithAggregatesFilter<"t_usuarios"> | string
  }

  export type t_usuario_x_incidenciaWhereInput = {
    AND?: t_usuario_x_incidenciaWhereInput | t_usuario_x_incidenciaWhereInput[]
    OR?: t_usuario_x_incidenciaWhereInput[]
    NOT?: t_usuario_x_incidenciaWhereInput | t_usuario_x_incidenciaWhereInput[]
    codigoAsignacion?: IntFilter<"t_usuario_x_incidencia"> | number
    idUsuario?: StringFilter<"t_usuario_x_incidencia"> | string
    idIncidencia?: StringFilter<"t_usuario_x_incidencia"> | string
    fechaAsignacion?: DateTimeFilter<"t_usuario_x_incidencia"> | Date | string
    usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    incidencia?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
  }

  export type t_usuario_x_incidenciaOrderByWithRelationInput = {
    codigoAsignacion?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
    fechaAsignacion?: SortOrder
    usuario?: t_usuariosOrderByWithRelationInput
    incidencia?: t_incidenciasOrderByWithRelationInput
  }

  export type t_usuario_x_incidenciaWhereUniqueInput = Prisma.AtLeast<{
    codigoAsignacion?: number
    AND?: t_usuario_x_incidenciaWhereInput | t_usuario_x_incidenciaWhereInput[]
    OR?: t_usuario_x_incidenciaWhereInput[]
    NOT?: t_usuario_x_incidenciaWhereInput | t_usuario_x_incidenciaWhereInput[]
    idUsuario?: StringFilter<"t_usuario_x_incidencia"> | string
    idIncidencia?: StringFilter<"t_usuario_x_incidencia"> | string
    fechaAsignacion?: DateTimeFilter<"t_usuario_x_incidencia"> | Date | string
    usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    incidencia?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
  }, "codigoAsignacion" | "codigoAsignacion">

  export type t_usuario_x_incidenciaOrderByWithAggregationInput = {
    codigoAsignacion?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
    fechaAsignacion?: SortOrder
    _count?: t_usuario_x_incidenciaCountOrderByAggregateInput
    _avg?: t_usuario_x_incidenciaAvgOrderByAggregateInput
    _max?: t_usuario_x_incidenciaMaxOrderByAggregateInput
    _min?: t_usuario_x_incidenciaMinOrderByAggregateInput
    _sum?: t_usuario_x_incidenciaSumOrderByAggregateInput
  }

  export type t_usuario_x_incidenciaScalarWhereWithAggregatesInput = {
    AND?: t_usuario_x_incidenciaScalarWhereWithAggregatesInput | t_usuario_x_incidenciaScalarWhereWithAggregatesInput[]
    OR?: t_usuario_x_incidenciaScalarWhereWithAggregatesInput[]
    NOT?: t_usuario_x_incidenciaScalarWhereWithAggregatesInput | t_usuario_x_incidenciaScalarWhereWithAggregatesInput[]
    codigoAsignacion?: IntWithAggregatesFilter<"t_usuario_x_incidencia"> | number
    idUsuario?: StringWithAggregatesFilter<"t_usuario_x_incidencia"> | string
    idIncidencia?: StringWithAggregatesFilter<"t_usuario_x_incidencia"> | string
    fechaAsignacion?: DateTimeWithAggregatesFilter<"t_usuario_x_incidencia"> | Date | string
  }

  export type T_PantallasWhereInput = {
    AND?: T_PantallasWhereInput | T_PantallasWhereInput[]
    OR?: T_PantallasWhereInput[]
    NOT?: T_PantallasWhereInput | T_PantallasWhereInput[]
    codigoPantalla?: IntFilter<"T_Pantallas"> | number
    nombrePantalla?: StringFilter<"T_Pantallas"> | string
    descripcionPantalla?: StringFilter<"T_Pantallas"> | string
  }

  export type T_PantallasOrderByWithRelationInput = {
    codigoPantalla?: SortOrder
    nombrePantalla?: SortOrder
    descripcionPantalla?: SortOrder
  }

  export type T_PantallasWhereUniqueInput = Prisma.AtLeast<{
    codigoPantalla?: number
    AND?: T_PantallasWhereInput | T_PantallasWhereInput[]
    OR?: T_PantallasWhereInput[]
    NOT?: T_PantallasWhereInput | T_PantallasWhereInput[]
    nombrePantalla?: StringFilter<"T_Pantallas"> | string
    descripcionPantalla?: StringFilter<"T_Pantallas"> | string
  }, "codigoPantalla" | "codigoPantalla">

  export type T_PantallasOrderByWithAggregationInput = {
    codigoPantalla?: SortOrder
    nombrePantalla?: SortOrder
    descripcionPantalla?: SortOrder
    _count?: T_PantallasCountOrderByAggregateInput
    _avg?: T_PantallasAvgOrderByAggregateInput
    _max?: T_PantallasMaxOrderByAggregateInput
    _min?: T_PantallasMinOrderByAggregateInput
    _sum?: T_PantallasSumOrderByAggregateInput
  }

  export type T_PantallasScalarWhereWithAggregatesInput = {
    AND?: T_PantallasScalarWhereWithAggregatesInput | T_PantallasScalarWhereWithAggregatesInput[]
    OR?: T_PantallasScalarWhereWithAggregatesInput[]
    NOT?: T_PantallasScalarWhereWithAggregatesInput | T_PantallasScalarWhereWithAggregatesInput[]
    codigoPantalla?: IntWithAggregatesFilter<"T_Pantallas"> | number
    nombrePantalla?: StringWithAggregatesFilter<"T_Pantallas"> | string
    descripcionPantalla?: StringWithAggregatesFilter<"T_Pantallas"> | string
  }

  export type t_bitacora_cambio_estadoWhereInput = {
    AND?: t_bitacora_cambio_estadoWhereInput | t_bitacora_cambio_estadoWhereInput[]
    OR?: t_bitacora_cambio_estadoWhereInput[]
    NOT?: t_bitacora_cambio_estadoWhereInput | t_bitacora_cambio_estadoWhereInput[]
    codigoBitacora?: IntFilter<"t_bitacora_cambio_estado"> | number
    idIncidencia?: StringFilter<"t_bitacora_cambio_estado"> | string
    fechaCambio?: DateTimeFilter<"t_bitacora_cambio_estado"> | Date | string
    idEstadoActual?: IntFilter<"t_bitacora_cambio_estado"> | number
    idEstadoAnterior?: IntFilter<"t_bitacora_cambio_estado"> | number
    idUsuario?: StringFilter<"t_bitacora_cambio_estado"> | string
    incidencias?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
    usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
  }

  export type t_bitacora_cambio_estadoOrderByWithRelationInput = {
    codigoBitacora?: SortOrder
    idIncidencia?: SortOrder
    fechaCambio?: SortOrder
    idEstadoActual?: SortOrder
    idEstadoAnterior?: SortOrder
    idUsuario?: SortOrder
    incidencias?: t_incidenciasOrderByWithRelationInput
    usuario?: t_usuariosOrderByWithRelationInput
  }

  export type t_bitacora_cambio_estadoWhereUniqueInput = Prisma.AtLeast<{
    codigoBitacora?: number
    AND?: t_bitacora_cambio_estadoWhereInput | t_bitacora_cambio_estadoWhereInput[]
    OR?: t_bitacora_cambio_estadoWhereInput[]
    NOT?: t_bitacora_cambio_estadoWhereInput | t_bitacora_cambio_estadoWhereInput[]
    idIncidencia?: StringFilter<"t_bitacora_cambio_estado"> | string
    fechaCambio?: DateTimeFilter<"t_bitacora_cambio_estado"> | Date | string
    idEstadoActual?: IntFilter<"t_bitacora_cambio_estado"> | number
    idEstadoAnterior?: IntFilter<"t_bitacora_cambio_estado"> | number
    idUsuario?: StringFilter<"t_bitacora_cambio_estado"> | string
    incidencias?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
    usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
  }, "codigoBitacora" | "codigoBitacora">

  export type t_bitacora_cambio_estadoOrderByWithAggregationInput = {
    codigoBitacora?: SortOrder
    idIncidencia?: SortOrder
    fechaCambio?: SortOrder
    idEstadoActual?: SortOrder
    idEstadoAnterior?: SortOrder
    idUsuario?: SortOrder
    _count?: t_bitacora_cambio_estadoCountOrderByAggregateInput
    _avg?: t_bitacora_cambio_estadoAvgOrderByAggregateInput
    _max?: t_bitacora_cambio_estadoMaxOrderByAggregateInput
    _min?: t_bitacora_cambio_estadoMinOrderByAggregateInput
    _sum?: t_bitacora_cambio_estadoSumOrderByAggregateInput
  }

  export type t_bitacora_cambio_estadoScalarWhereWithAggregatesInput = {
    AND?: t_bitacora_cambio_estadoScalarWhereWithAggregatesInput | t_bitacora_cambio_estadoScalarWhereWithAggregatesInput[]
    OR?: t_bitacora_cambio_estadoScalarWhereWithAggregatesInput[]
    NOT?: t_bitacora_cambio_estadoScalarWhereWithAggregatesInput | t_bitacora_cambio_estadoScalarWhereWithAggregatesInput[]
    codigoBitacora?: IntWithAggregatesFilter<"t_bitacora_cambio_estado"> | number
    idIncidencia?: StringWithAggregatesFilter<"t_bitacora_cambio_estado"> | string
    fechaCambio?: DateTimeWithAggregatesFilter<"t_bitacora_cambio_estado"> | Date | string
    idEstadoActual?: IntWithAggregatesFilter<"t_bitacora_cambio_estado"> | number
    idEstadoAnterior?: IntWithAggregatesFilter<"t_bitacora_cambio_estado"> | number
    idUsuario?: StringWithAggregatesFilter<"t_bitacora_cambio_estado"> | string
  }

  export type t_usuarios_x_rolWhereInput = {
    AND?: t_usuarios_x_rolWhereInput | t_usuarios_x_rolWhereInput[]
    OR?: t_usuarios_x_rolWhereInput[]
    NOT?: t_usuarios_x_rolWhereInput | t_usuarios_x_rolWhereInput[]
    userId?: StringFilter<"t_usuarios_x_rol"> | string
    roleId?: IntFilter<"t_usuarios_x_rol"> | number
    usuarios?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    roles?: XOR<T_rolesRelationFilter, t_rolesWhereInput>
  }

  export type t_usuarios_x_rolOrderByWithRelationInput = {
    userId?: SortOrder
    roleId?: SortOrder
    usuarios?: t_usuariosOrderByWithRelationInput
    roles?: t_rolesOrderByWithRelationInput
  }

  export type t_usuarios_x_rolWhereUniqueInput = Prisma.AtLeast<{
    userId_roleId?: t_usuarios_x_rolUserIdRoleIdCompoundUniqueInput
    AND?: t_usuarios_x_rolWhereInput | t_usuarios_x_rolWhereInput[]
    OR?: t_usuarios_x_rolWhereInput[]
    NOT?: t_usuarios_x_rolWhereInput | t_usuarios_x_rolWhereInput[]
    userId?: StringFilter<"t_usuarios_x_rol"> | string
    roleId?: IntFilter<"t_usuarios_x_rol"> | number
    usuarios?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    roles?: XOR<T_rolesRelationFilter, t_rolesWhereInput>
  }, "userId_roleId">

  export type t_usuarios_x_rolOrderByWithAggregationInput = {
    userId?: SortOrder
    roleId?: SortOrder
    _count?: t_usuarios_x_rolCountOrderByAggregateInput
    _avg?: t_usuarios_x_rolAvgOrderByAggregateInput
    _max?: t_usuarios_x_rolMaxOrderByAggregateInput
    _min?: t_usuarios_x_rolMinOrderByAggregateInput
    _sum?: t_usuarios_x_rolSumOrderByAggregateInput
  }

  export type t_usuarios_x_rolScalarWhereWithAggregatesInput = {
    AND?: t_usuarios_x_rolScalarWhereWithAggregatesInput | t_usuarios_x_rolScalarWhereWithAggregatesInput[]
    OR?: t_usuarios_x_rolScalarWhereWithAggregatesInput[]
    NOT?: t_usuarios_x_rolScalarWhereWithAggregatesInput | t_usuarios_x_rolScalarWhereWithAggregatesInput[]
    userId?: StringWithAggregatesFilter<"t_usuarios_x_rol"> | string
    roleId?: IntWithAggregatesFilter<"t_usuarios_x_rol"> | number
  }

  export type t_afectacionesWhereInput = {
    AND?: t_afectacionesWhereInput | t_afectacionesWhereInput[]
    OR?: t_afectacionesWhereInput[]
    NOT?: t_afectacionesWhereInput | t_afectacionesWhereInput[]
    id?: IntFilter<"t_afectaciones"> | number
    descripcion?: StringFilter<"t_afectaciones"> | string
    incidencias?: T_incidenciasListRelationFilter
  }

  export type t_afectacionesOrderByWithRelationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    incidencias?: t_incidenciasOrderByRelationAggregateInput
  }

  export type t_afectacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: t_afectacionesWhereInput | t_afectacionesWhereInput[]
    OR?: t_afectacionesWhereInput[]
    NOT?: t_afectacionesWhereInput | t_afectacionesWhereInput[]
    descripcion?: StringFilter<"t_afectaciones"> | string
    incidencias?: T_incidenciasListRelationFilter
  }, "id" | "id">

  export type t_afectacionesOrderByWithAggregationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    _count?: t_afectacionesCountOrderByAggregateInput
    _avg?: t_afectacionesAvgOrderByAggregateInput
    _max?: t_afectacionesMaxOrderByAggregateInput
    _min?: t_afectacionesMinOrderByAggregateInput
    _sum?: t_afectacionesSumOrderByAggregateInput
  }

  export type t_afectacionesScalarWhereWithAggregatesInput = {
    AND?: t_afectacionesScalarWhereWithAggregatesInput | t_afectacionesScalarWhereWithAggregatesInput[]
    OR?: t_afectacionesScalarWhereWithAggregatesInput[]
    NOT?: t_afectacionesScalarWhereWithAggregatesInput | t_afectacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"t_afectaciones"> | number
    descripcion?: StringWithAggregatesFilter<"t_afectaciones"> | string
  }

  export type t_categoriasWhereInput = {
    AND?: t_categoriasWhereInput | t_categoriasWhereInput[]
    OR?: t_categoriasWhereInput[]
    NOT?: t_categoriasWhereInput | t_categoriasWhereInput[]
    id?: IntFilter<"t_categorias"> | number
    descripcion?: StringFilter<"t_categorias"> | string
    incidencias?: T_incidenciasListRelationFilter
  }

  export type t_categoriasOrderByWithRelationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    incidencias?: t_incidenciasOrderByRelationAggregateInput
  }

  export type t_categoriasWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: t_categoriasWhereInput | t_categoriasWhereInput[]
    OR?: t_categoriasWhereInput[]
    NOT?: t_categoriasWhereInput | t_categoriasWhereInput[]
    descripcion?: StringFilter<"t_categorias"> | string
    incidencias?: T_incidenciasListRelationFilter
  }, "id" | "id">

  export type t_categoriasOrderByWithAggregationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    _count?: t_categoriasCountOrderByAggregateInput
    _avg?: t_categoriasAvgOrderByAggregateInput
    _max?: t_categoriasMaxOrderByAggregateInput
    _min?: t_categoriasMinOrderByAggregateInput
    _sum?: t_categoriasSumOrderByAggregateInput
  }

  export type t_categoriasScalarWhereWithAggregatesInput = {
    AND?: t_categoriasScalarWhereWithAggregatesInput | t_categoriasScalarWhereWithAggregatesInput[]
    OR?: t_categoriasScalarWhereWithAggregatesInput[]
    NOT?: t_categoriasScalarWhereWithAggregatesInput | t_categoriasScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"t_categorias"> | number
    descripcion?: StringWithAggregatesFilter<"t_categorias"> | string
  }

  export type t_estadosWhereInput = {
    AND?: t_estadosWhereInput | t_estadosWhereInput[]
    OR?: t_estadosWhereInput[]
    NOT?: t_estadosWhereInput | t_estadosWhereInput[]
    id?: IntFilter<"t_estados"> | number
    descripcion?: StringFilter<"t_estados"> | string
    incidencias?: T_incidenciasListRelationFilter
  }

  export type t_estadosOrderByWithRelationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    incidencias?: t_incidenciasOrderByRelationAggregateInput
  }

  export type t_estadosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: t_estadosWhereInput | t_estadosWhereInput[]
    OR?: t_estadosWhereInput[]
    NOT?: t_estadosWhereInput | t_estadosWhereInput[]
    descripcion?: StringFilter<"t_estados"> | string
    incidencias?: T_incidenciasListRelationFilter
  }, "id" | "id">

  export type t_estadosOrderByWithAggregationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    _count?: t_estadosCountOrderByAggregateInput
    _avg?: t_estadosAvgOrderByAggregateInput
    _max?: t_estadosMaxOrderByAggregateInput
    _min?: t_estadosMinOrderByAggregateInput
    _sum?: t_estadosSumOrderByAggregateInput
  }

  export type t_estadosScalarWhereWithAggregatesInput = {
    AND?: t_estadosScalarWhereWithAggregatesInput | t_estadosScalarWhereWithAggregatesInput[]
    OR?: t_estadosScalarWhereWithAggregatesInput[]
    NOT?: t_estadosScalarWhereWithAggregatesInput | t_estadosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"t_estados"> | number
    descripcion?: StringWithAggregatesFilter<"t_estados"> | string
  }

  export type t_riesgosWhereInput = {
    AND?: t_riesgosWhereInput | t_riesgosWhereInput[]
    OR?: t_riesgosWhereInput[]
    NOT?: t_riesgosWhereInput | t_riesgosWhereInput[]
    id?: IntFilter<"t_riesgos"> | number
    descripcion?: StringFilter<"t_riesgos"> | string
    incidencias?: T_incidenciasListRelationFilter
  }

  export type t_riesgosOrderByWithRelationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    incidencias?: t_incidenciasOrderByRelationAggregateInput
  }

  export type t_riesgosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: t_riesgosWhereInput | t_riesgosWhereInput[]
    OR?: t_riesgosWhereInput[]
    NOT?: t_riesgosWhereInput | t_riesgosWhereInput[]
    descripcion?: StringFilter<"t_riesgos"> | string
    incidencias?: T_incidenciasListRelationFilter
  }, "id" | "id">

  export type t_riesgosOrderByWithAggregationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    _count?: t_riesgosCountOrderByAggregateInput
    _avg?: t_riesgosAvgOrderByAggregateInput
    _max?: t_riesgosMaxOrderByAggregateInput
    _min?: t_riesgosMinOrderByAggregateInput
    _sum?: t_riesgosSumOrderByAggregateInput
  }

  export type t_riesgosScalarWhereWithAggregatesInput = {
    AND?: t_riesgosScalarWhereWithAggregatesInput | t_riesgosScalarWhereWithAggregatesInput[]
    OR?: t_riesgosScalarWhereWithAggregatesInput[]
    NOT?: t_riesgosScalarWhereWithAggregatesInput | t_riesgosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"t_riesgos"> | number
    descripcion?: StringWithAggregatesFilter<"t_riesgos"> | string
  }

  export type t_prioridadesWhereInput = {
    AND?: t_prioridadesWhereInput | t_prioridadesWhereInput[]
    OR?: t_prioridadesWhereInput[]
    NOT?: t_prioridadesWhereInput | t_prioridadesWhereInput[]
    id?: IntFilter<"t_prioridades"> | number
    descripcion?: StringFilter<"t_prioridades"> | string
    incidencias?: T_incidenciasListRelationFilter
  }

  export type t_prioridadesOrderByWithRelationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    incidencias?: t_incidenciasOrderByRelationAggregateInput
  }

  export type t_prioridadesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: t_prioridadesWhereInput | t_prioridadesWhereInput[]
    OR?: t_prioridadesWhereInput[]
    NOT?: t_prioridadesWhereInput | t_prioridadesWhereInput[]
    descripcion?: StringFilter<"t_prioridades"> | string
    incidencias?: T_incidenciasListRelationFilter
  }, "id" | "id">

  export type t_prioridadesOrderByWithAggregationInput = {
    id?: SortOrder
    descripcion?: SortOrder
    _count?: t_prioridadesCountOrderByAggregateInput
    _avg?: t_prioridadesAvgOrderByAggregateInput
    _max?: t_prioridadesMaxOrderByAggregateInput
    _min?: t_prioridadesMinOrderByAggregateInput
    _sum?: t_prioridadesSumOrderByAggregateInput
  }

  export type t_prioridadesScalarWhereWithAggregatesInput = {
    AND?: t_prioridadesScalarWhereWithAggregatesInput | t_prioridadesScalarWhereWithAggregatesInput[]
    OR?: t_prioridadesScalarWhereWithAggregatesInput[]
    NOT?: t_prioridadesScalarWhereWithAggregatesInput | t_prioridadesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"t_prioridades"> | number
    descripcion?: StringWithAggregatesFilter<"t_prioridades"> | string
  }

  export type t_incidenciasWhereInput = {
    AND?: t_incidenciasWhereInput | t_incidenciasWhereInput[]
    OR?: t_incidenciasWhereInput[]
    NOT?: t_incidenciasWhereInput | t_incidenciasWhereInput[]
    codigoIncidencia?: StringFilter<"t_incidencias"> | string
    nombre?: StringFilter<"t_incidencias"> | string
    descripcion?: StringFilter<"t_incidencias"> | string
    justificacionCierre?: StringFilter<"t_incidencias"> | string
    lugarIncidencia?: StringFilter<"t_incidencias"> | string
    fechaRegistro?: DateTimeFilter<"t_incidencias"> | Date | string
    costo?: FloatFilter<"t_incidencias"> | number
    duracionGestion?: IntFilter<"t_incidencias"> | number
    idUsuario?: StringFilter<"t_incidencias"> | string
    idAfectacion?: IntFilter<"t_incidencias"> | number
    idRiesgo?: IntFilter<"t_incidencias"> | number
    idCategoria?: IntFilter<"t_incidencias"> | number
    idPrioridad?: IntFilter<"t_incidencias"> | number
    idEstado?: IntFilter<"t_incidencias"> | number
    Usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    Afectacion?: XOR<T_afectacionesRelationFilter, t_afectacionesWhereInput>
    Riesgo?: XOR<T_riesgosRelationFilter, t_riesgosWhereInput>
    Categoria?: XOR<T_categoriasRelationFilter, t_categoriasWhereInput>
    Prioridad?: XOR<T_prioridadesRelationFilter, t_prioridadesWhereInput>
    Estado?: XOR<T_estadosRelationFilter, t_estadosWhereInput>
    imagenes?: T_imagenesListRelationFilter
    diagnostico?: T_diagnosticoListRelationFilter
    incidencia?: T_usuario_x_incidenciaListRelationFilter
    t_bitacora_cambio_estado?: T_bitacora_cambio_estadoListRelationFilter
  }

  export type t_incidenciasOrderByWithRelationInput = {
    codigoIncidencia?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    justificacionCierre?: SortOrder
    lugarIncidencia?: SortOrder
    fechaRegistro?: SortOrder
    costo?: SortOrder
    duracionGestion?: SortOrder
    idUsuario?: SortOrder
    idAfectacion?: SortOrder
    idRiesgo?: SortOrder
    idCategoria?: SortOrder
    idPrioridad?: SortOrder
    idEstado?: SortOrder
    Usuario?: t_usuariosOrderByWithRelationInput
    Afectacion?: t_afectacionesOrderByWithRelationInput
    Riesgo?: t_riesgosOrderByWithRelationInput
    Categoria?: t_categoriasOrderByWithRelationInput
    Prioridad?: t_prioridadesOrderByWithRelationInput
    Estado?: t_estadosOrderByWithRelationInput
    imagenes?: t_imagenesOrderByRelationAggregateInput
    diagnostico?: t_diagnosticoOrderByRelationAggregateInput
    incidencia?: t_usuario_x_incidenciaOrderByRelationAggregateInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoOrderByRelationAggregateInput
  }

  export type t_incidenciasWhereUniqueInput = Prisma.AtLeast<{
    codigoIncidencia?: string
    AND?: t_incidenciasWhereInput | t_incidenciasWhereInput[]
    OR?: t_incidenciasWhereInput[]
    NOT?: t_incidenciasWhereInput | t_incidenciasWhereInput[]
    nombre?: StringFilter<"t_incidencias"> | string
    descripcion?: StringFilter<"t_incidencias"> | string
    justificacionCierre?: StringFilter<"t_incidencias"> | string
    lugarIncidencia?: StringFilter<"t_incidencias"> | string
    fechaRegistro?: DateTimeFilter<"t_incidencias"> | Date | string
    costo?: FloatFilter<"t_incidencias"> | number
    duracionGestion?: IntFilter<"t_incidencias"> | number
    idUsuario?: StringFilter<"t_incidencias"> | string
    idAfectacion?: IntFilter<"t_incidencias"> | number
    idRiesgo?: IntFilter<"t_incidencias"> | number
    idCategoria?: IntFilter<"t_incidencias"> | number
    idPrioridad?: IntFilter<"t_incidencias"> | number
    idEstado?: IntFilter<"t_incidencias"> | number
    Usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    Afectacion?: XOR<T_afectacionesRelationFilter, t_afectacionesWhereInput>
    Riesgo?: XOR<T_riesgosRelationFilter, t_riesgosWhereInput>
    Categoria?: XOR<T_categoriasRelationFilter, t_categoriasWhereInput>
    Prioridad?: XOR<T_prioridadesRelationFilter, t_prioridadesWhereInput>
    Estado?: XOR<T_estadosRelationFilter, t_estadosWhereInput>
    imagenes?: T_imagenesListRelationFilter
    diagnostico?: T_diagnosticoListRelationFilter
    incidencia?: T_usuario_x_incidenciaListRelationFilter
    t_bitacora_cambio_estado?: T_bitacora_cambio_estadoListRelationFilter
  }, "codigoIncidencia" | "codigoIncidencia">

  export type t_incidenciasOrderByWithAggregationInput = {
    codigoIncidencia?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    justificacionCierre?: SortOrder
    lugarIncidencia?: SortOrder
    fechaRegistro?: SortOrder
    costo?: SortOrder
    duracionGestion?: SortOrder
    idUsuario?: SortOrder
    idAfectacion?: SortOrder
    idRiesgo?: SortOrder
    idCategoria?: SortOrder
    idPrioridad?: SortOrder
    idEstado?: SortOrder
    _count?: t_incidenciasCountOrderByAggregateInput
    _avg?: t_incidenciasAvgOrderByAggregateInput
    _max?: t_incidenciasMaxOrderByAggregateInput
    _min?: t_incidenciasMinOrderByAggregateInput
    _sum?: t_incidenciasSumOrderByAggregateInput
  }

  export type t_incidenciasScalarWhereWithAggregatesInput = {
    AND?: t_incidenciasScalarWhereWithAggregatesInput | t_incidenciasScalarWhereWithAggregatesInput[]
    OR?: t_incidenciasScalarWhereWithAggregatesInput[]
    NOT?: t_incidenciasScalarWhereWithAggregatesInput | t_incidenciasScalarWhereWithAggregatesInput[]
    codigoIncidencia?: StringWithAggregatesFilter<"t_incidencias"> | string
    nombre?: StringWithAggregatesFilter<"t_incidencias"> | string
    descripcion?: StringWithAggregatesFilter<"t_incidencias"> | string
    justificacionCierre?: StringWithAggregatesFilter<"t_incidencias"> | string
    lugarIncidencia?: StringWithAggregatesFilter<"t_incidencias"> | string
    fechaRegistro?: DateTimeWithAggregatesFilter<"t_incidencias"> | Date | string
    costo?: FloatWithAggregatesFilter<"t_incidencias"> | number
    duracionGestion?: IntWithAggregatesFilter<"t_incidencias"> | number
    idUsuario?: StringWithAggregatesFilter<"t_incidencias"> | string
    idAfectacion?: IntWithAggregatesFilter<"t_incidencias"> | number
    idRiesgo?: IntWithAggregatesFilter<"t_incidencias"> | number
    idCategoria?: IntWithAggregatesFilter<"t_incidencias"> | number
    idPrioridad?: IntWithAggregatesFilter<"t_incidencias"> | number
    idEstado?: IntWithAggregatesFilter<"t_incidencias"> | number
  }

  export type t_diagnosticoWhereInput = {
    AND?: t_diagnosticoWhereInput | t_diagnosticoWhereInput[]
    OR?: t_diagnosticoWhereInput[]
    NOT?: t_diagnosticoWhereInput | t_diagnosticoWhereInput[]
    codigoDiagnostico?: IntFilter<"t_diagnostico"> | number
    fechaDiagnostico?: DateTimeFilter<"t_diagnostico"> | Date | string
    diagnostico?: StringFilter<"t_diagnostico"> | string
    tiempoEstimado?: IntFilter<"t_diagnostico"> | number
    observacion?: StringFilter<"t_diagnostico"> | string
    compra?: BoolFilter<"t_diagnostico"> | boolean
    idUsuario?: StringFilter<"t_diagnostico"> | string
    idIncidencia?: StringFilter<"t_diagnostico"> | string
    Usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    Incidencia?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
    imagenes?: T_imagenesListRelationFilter
  }

  export type t_diagnosticoOrderByWithRelationInput = {
    codigoDiagnostico?: SortOrder
    fechaDiagnostico?: SortOrder
    diagnostico?: SortOrder
    tiempoEstimado?: SortOrder
    observacion?: SortOrder
    compra?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
    Usuario?: t_usuariosOrderByWithRelationInput
    Incidencia?: t_incidenciasOrderByWithRelationInput
    imagenes?: t_imagenesOrderByRelationAggregateInput
  }

  export type t_diagnosticoWhereUniqueInput = Prisma.AtLeast<{
    codigoDiagnostico?: number
    AND?: t_diagnosticoWhereInput | t_diagnosticoWhereInput[]
    OR?: t_diagnosticoWhereInput[]
    NOT?: t_diagnosticoWhereInput | t_diagnosticoWhereInput[]
    fechaDiagnostico?: DateTimeFilter<"t_diagnostico"> | Date | string
    diagnostico?: StringFilter<"t_diagnostico"> | string
    tiempoEstimado?: IntFilter<"t_diagnostico"> | number
    observacion?: StringFilter<"t_diagnostico"> | string
    compra?: BoolFilter<"t_diagnostico"> | boolean
    idUsuario?: StringFilter<"t_diagnostico"> | string
    idIncidencia?: StringFilter<"t_diagnostico"> | string
    Usuario?: XOR<T_usuariosRelationFilter, t_usuariosWhereInput>
    Incidencia?: XOR<T_incidenciasRelationFilter, t_incidenciasWhereInput>
    imagenes?: T_imagenesListRelationFilter
  }, "codigoDiagnostico" | "codigoDiagnostico">

  export type t_diagnosticoOrderByWithAggregationInput = {
    codigoDiagnostico?: SortOrder
    fechaDiagnostico?: SortOrder
    diagnostico?: SortOrder
    tiempoEstimado?: SortOrder
    observacion?: SortOrder
    compra?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
    _count?: t_diagnosticoCountOrderByAggregateInput
    _avg?: t_diagnosticoAvgOrderByAggregateInput
    _max?: t_diagnosticoMaxOrderByAggregateInput
    _min?: t_diagnosticoMinOrderByAggregateInput
    _sum?: t_diagnosticoSumOrderByAggregateInput
  }

  export type t_diagnosticoScalarWhereWithAggregatesInput = {
    AND?: t_diagnosticoScalarWhereWithAggregatesInput | t_diagnosticoScalarWhereWithAggregatesInput[]
    OR?: t_diagnosticoScalarWhereWithAggregatesInput[]
    NOT?: t_diagnosticoScalarWhereWithAggregatesInput | t_diagnosticoScalarWhereWithAggregatesInput[]
    codigoDiagnostico?: IntWithAggregatesFilter<"t_diagnostico"> | number
    fechaDiagnostico?: DateTimeWithAggregatesFilter<"t_diagnostico"> | Date | string
    diagnostico?: StringWithAggregatesFilter<"t_diagnostico"> | string
    tiempoEstimado?: IntWithAggregatesFilter<"t_diagnostico"> | number
    observacion?: StringWithAggregatesFilter<"t_diagnostico"> | string
    compra?: BoolWithAggregatesFilter<"t_diagnostico"> | boolean
    idUsuario?: StringWithAggregatesFilter<"t_diagnostico"> | string
    idIncidencia?: StringWithAggregatesFilter<"t_diagnostico"> | string
  }

  export type t_imagenesCreateInput = {
    rutaImagen: string
    tipoImagen: boolean
    incidencia: t_incidenciasCreateNestedOneWithoutImagenesInput
    diagnostico?: t_diagnosticoCreateNestedOneWithoutImagenesInput
  }

  export type t_imagenesUncheckedCreateInput = {
    idImagen?: number
    rutaImagen: string
    tipoImagen: boolean
    idDiagnostico?: number | null
    idIncidencia: string
  }

  export type t_imagenesUpdateInput = {
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    incidencia?: t_incidenciasUpdateOneRequiredWithoutImagenesNestedInput
    diagnostico?: t_diagnosticoUpdateOneWithoutImagenesNestedInput
  }

  export type t_imagenesUncheckedUpdateInput = {
    idImagen?: IntFieldUpdateOperationsInput | number
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    idDiagnostico?: NullableIntFieldUpdateOperationsInput | number | null
    idIncidencia?: StringFieldUpdateOperationsInput | string
  }

  export type t_imagenesCreateManyInput = {
    idImagen?: number
    rutaImagen: string
    tipoImagen: boolean
    idDiagnostico?: number | null
    idIncidencia: string
  }

  export type t_imagenesUpdateManyMutationInput = {
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
  }

  export type t_imagenesUncheckedUpdateManyInput = {
    idImagen?: IntFieldUpdateOperationsInput | number
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    idDiagnostico?: NullableIntFieldUpdateOperationsInput | number | null
    idIncidencia?: StringFieldUpdateOperationsInput | string
  }

  export type t_rolesCreateInput = {
    descripcion: string
    sistema: string
    estado: boolean
    usuarios?: t_usuariosCreateNestedManyWithoutRolesInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutRolesInput
  }

  export type t_rolesUncheckedCreateInput = {
    idRol?: number
    descripcion: string
    sistema: string
    estado: boolean
    usuarios?: t_usuariosUncheckedCreateNestedManyWithoutRolesInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutRolesInput
  }

  export type t_rolesUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    usuarios?: t_usuariosUpdateManyWithoutRolesNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutRolesNestedInput
  }

  export type t_rolesUncheckedUpdateInput = {
    idRol?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    usuarios?: t_usuariosUncheckedUpdateManyWithoutRolesNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type t_rolesCreateManyInput = {
    idRol?: number
    descripcion: string
    sistema: string
    estado: boolean
  }

  export type t_rolesUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type t_rolesUncheckedUpdateManyInput = {
    idRol?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type t_bitacora_generalCreateInput = {
    sistema: string
    referencia: string
    Usuario: t_usuariosCreateNestedOneWithoutT_bitacora_generalInput
    Pantalla: t_pantallaCreateNestedOneWithoutT_bitacora_generalInput
  }

  export type t_bitacora_generalUncheckedCreateInput = {
    codigoBitacora?: number
    sistema: string
    referencia: string
    idUsuario: string
    idPantalla: number
  }

  export type t_bitacora_generalUpdateInput = {
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    Usuario?: t_usuariosUpdateOneRequiredWithoutT_bitacora_generalNestedInput
    Pantalla?: t_pantallaUpdateOneRequiredWithoutT_bitacora_generalNestedInput
  }

  export type t_bitacora_generalUncheckedUpdateInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
    idPantalla?: IntFieldUpdateOperationsInput | number
  }

  export type t_bitacora_generalCreateManyInput = {
    codigoBitacora?: number
    sistema: string
    referencia: string
    idUsuario: string
    idPantalla: number
  }

  export type t_bitacora_generalUpdateManyMutationInput = {
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
  }

  export type t_bitacora_generalUncheckedUpdateManyInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
    idPantalla?: IntFieldUpdateOperationsInput | number
  }

  export type t_pantallaCreateInput = {
    nombre: string
    descripcion: string
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutPantallaInput
  }

  export type t_pantallaUncheckedCreateInput = {
    codigoPantalla?: number
    nombre: string
    descripcion: string
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutPantallaInput
  }

  export type t_pantallaUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutPantallaNestedInput
  }

  export type t_pantallaUncheckedUpdateInput = {
    codigoPantalla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutPantallaNestedInput
  }

  export type t_pantallaCreateManyInput = {
    codigoPantalla?: number
    nombre: string
    descripcion: string
  }

  export type t_pantallaUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_pantallaUncheckedUpdateManyInput = {
    codigoPantalla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuariosCreateInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesUncheckedCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUpdateInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosCreateManyInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
  }

  export type t_usuariosUpdateManyMutationInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuariosUncheckedUpdateManyInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuario_x_incidenciaCreateInput = {
    fechaAsignacion: Date | string
    usuario: t_usuariosCreateNestedOneWithoutUsuarioInput
    incidencia: t_incidenciasCreateNestedOneWithoutIncidenciaInput
  }

  export type t_usuario_x_incidenciaUncheckedCreateInput = {
    codigoAsignacion?: number
    idUsuario: string
    idIncidencia: string
    fechaAsignacion: Date | string
  }

  export type t_usuario_x_incidenciaUpdateInput = {
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: t_usuariosUpdateOneRequiredWithoutUsuarioNestedInput
    incidencia?: t_incidenciasUpdateOneRequiredWithoutIncidenciaNestedInput
  }

  export type t_usuario_x_incidenciaUncheckedUpdateInput = {
    codigoAsignacion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type t_usuario_x_incidenciaCreateManyInput = {
    codigoAsignacion?: number
    idUsuario: string
    idIncidencia: string
    fechaAsignacion: Date | string
  }

  export type t_usuario_x_incidenciaUpdateManyMutationInput = {
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type t_usuario_x_incidenciaUncheckedUpdateManyInput = {
    codigoAsignacion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type T_PantallasCreateInput = {
    nombrePantalla: string
    descripcionPantalla: string
  }

  export type T_PantallasUncheckedCreateInput = {
    codigoPantalla?: number
    nombrePantalla: string
    descripcionPantalla: string
  }

  export type T_PantallasUpdateInput = {
    nombrePantalla?: StringFieldUpdateOperationsInput | string
    descripcionPantalla?: StringFieldUpdateOperationsInput | string
  }

  export type T_PantallasUncheckedUpdateInput = {
    codigoPantalla?: IntFieldUpdateOperationsInput | number
    nombrePantalla?: StringFieldUpdateOperationsInput | string
    descripcionPantalla?: StringFieldUpdateOperationsInput | string
  }

  export type T_PantallasCreateManyInput = {
    codigoPantalla?: number
    nombrePantalla: string
    descripcionPantalla: string
  }

  export type T_PantallasUpdateManyMutationInput = {
    nombrePantalla?: StringFieldUpdateOperationsInput | string
    descripcionPantalla?: StringFieldUpdateOperationsInput | string
  }

  export type T_PantallasUncheckedUpdateManyInput = {
    codigoPantalla?: IntFieldUpdateOperationsInput | number
    nombrePantalla?: StringFieldUpdateOperationsInput | string
    descripcionPantalla?: StringFieldUpdateOperationsInput | string
  }

  export type t_bitacora_cambio_estadoCreateInput = {
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
    incidencias: t_incidenciasCreateNestedOneWithoutT_bitacora_cambio_estadoInput
    usuario: t_usuariosCreateNestedOneWithoutT_bitacora_cambio_estadoInput
  }

  export type t_bitacora_cambio_estadoUncheckedCreateInput = {
    codigoBitacora?: number
    idIncidencia: string
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
    idUsuario: string
  }

  export type t_bitacora_cambio_estadoUpdateInput = {
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
    incidencias?: t_incidenciasUpdateOneRequiredWithoutT_bitacora_cambio_estadoNestedInput
    usuario?: t_usuariosUpdateOneRequiredWithoutT_bitacora_cambio_estadoNestedInput
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type t_bitacora_cambio_estadoCreateManyInput = {
    codigoBitacora?: number
    idIncidencia: string
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
    idUsuario: string
  }

  export type t_bitacora_cambio_estadoUpdateManyMutationInput = {
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateManyInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuarios_x_rolCreateInput = {
    usuarios: t_usuariosCreateNestedOneWithoutT_usuarios_x_rolInput
    roles: t_rolesCreateNestedOneWithoutT_usuarios_x_rolInput
  }

  export type t_usuarios_x_rolUncheckedCreateInput = {
    userId: string
    roleId: number
  }

  export type t_usuarios_x_rolUpdateInput = {
    usuarios?: t_usuariosUpdateOneRequiredWithoutT_usuarios_x_rolNestedInput
    roles?: t_rolesUpdateOneRequiredWithoutT_usuarios_x_rolNestedInput
  }

  export type t_usuarios_x_rolUncheckedUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type t_usuarios_x_rolCreateManyInput = {
    userId: string
    roleId: number
  }

  export type t_usuarios_x_rolUpdateManyMutationInput = {

  }

  export type t_usuarios_x_rolUncheckedUpdateManyInput = {
    userId?: StringFieldUpdateOperationsInput | string
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type t_afectacionesCreateInput = {
    descripcion: string
    incidencias?: t_incidenciasCreateNestedManyWithoutAfectacionInput
  }

  export type t_afectacionesUncheckedCreateInput = {
    id?: number
    descripcion: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutAfectacionInput
  }

  export type t_afectacionesUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutAfectacionNestedInput
  }

  export type t_afectacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutAfectacionNestedInput
  }

  export type t_afectacionesCreateManyInput = {
    id?: number
    descripcion: string
  }

  export type t_afectacionesUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_afectacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_categoriasCreateInput = {
    descripcion: string
    incidencias?: t_incidenciasCreateNestedManyWithoutCategoriaInput
  }

  export type t_categoriasUncheckedCreateInput = {
    id?: number
    descripcion: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutCategoriaInput
  }

  export type t_categoriasUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutCategoriaNestedInput
  }

  export type t_categoriasUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutCategoriaNestedInput
  }

  export type t_categoriasCreateManyInput = {
    id?: number
    descripcion: string
  }

  export type t_categoriasUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_categoriasUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_estadosCreateInput = {
    descripcion: string
    incidencias?: t_incidenciasCreateNestedManyWithoutEstadoInput
  }

  export type t_estadosUncheckedCreateInput = {
    id?: number
    descripcion: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutEstadoInput
  }

  export type t_estadosUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutEstadoNestedInput
  }

  export type t_estadosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutEstadoNestedInput
  }

  export type t_estadosCreateManyInput = {
    id?: number
    descripcion: string
  }

  export type t_estadosUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_estadosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_riesgosCreateInput = {
    descripcion: string
    incidencias?: t_incidenciasCreateNestedManyWithoutRiesgoInput
  }

  export type t_riesgosUncheckedCreateInput = {
    id?: number
    descripcion: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutRiesgoInput
  }

  export type t_riesgosUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutRiesgoNestedInput
  }

  export type t_riesgosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutRiesgoNestedInput
  }

  export type t_riesgosCreateManyInput = {
    id?: number
    descripcion: string
  }

  export type t_riesgosUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_riesgosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_prioridadesCreateInput = {
    descripcion: string
    incidencias?: t_incidenciasCreateNestedManyWithoutPrioridadInput
  }

  export type t_prioridadesUncheckedCreateInput = {
    id?: number
    descripcion: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutPrioridadInput
  }

  export type t_prioridadesUpdateInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutPrioridadNestedInput
  }

  export type t_prioridadesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutPrioridadNestedInput
  }

  export type t_prioridadesCreateManyInput = {
    id?: number
    descripcion: string
  }

  export type t_prioridadesUpdateManyMutationInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_prioridadesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_incidenciasCreateInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUpdateInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasCreateManyInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
  }

  export type t_incidenciasUpdateManyMutationInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
  }

  export type t_incidenciasUncheckedUpdateManyInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
  }

  export type t_diagnosticoCreateInput = {
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    Usuario: t_usuariosCreateNestedOneWithoutDiagnosticoInput
    Incidencia: t_incidenciasCreateNestedOneWithoutDiagnosticoInput
    imagenes?: t_imagenesCreateNestedManyWithoutDiagnosticoInput
  }

  export type t_diagnosticoUncheckedCreateInput = {
    codigoDiagnostico?: number
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idUsuario: string
    idIncidencia: string
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutDiagnosticoInput
  }

  export type t_diagnosticoUpdateInput = {
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    Usuario?: t_usuariosUpdateOneRequiredWithoutDiagnosticoNestedInput
    Incidencia?: t_incidenciasUpdateOneRequiredWithoutDiagnosticoNestedInput
    imagenes?: t_imagenesUpdateManyWithoutDiagnosticoNestedInput
  }

  export type t_diagnosticoUncheckedUpdateInput = {
    codigoDiagnostico?: IntFieldUpdateOperationsInput | number
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: StringFieldUpdateOperationsInput | string
    idIncidencia?: StringFieldUpdateOperationsInput | string
    imagenes?: t_imagenesUncheckedUpdateManyWithoutDiagnosticoNestedInput
  }

  export type t_diagnosticoCreateManyInput = {
    codigoDiagnostico?: number
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idUsuario: string
    idIncidencia: string
  }

  export type t_diagnosticoUpdateManyMutationInput = {
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
  }

  export type t_diagnosticoUncheckedUpdateManyInput = {
    codigoDiagnostico?: IntFieldUpdateOperationsInput | number
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: StringFieldUpdateOperationsInput | string
    idIncidencia?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type T_incidenciasRelationFilter = {
    is?: t_incidenciasWhereInput
    isNot?: t_incidenciasWhereInput
  }

  export type T_diagnosticoNullableRelationFilter = {
    is?: t_diagnosticoWhereInput | null
    isNot?: t_diagnosticoWhereInput | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type t_imagenesCountOrderByAggregateInput = {
    idImagen?: SortOrder
    rutaImagen?: SortOrder
    tipoImagen?: SortOrder
    idDiagnostico?: SortOrder
    idIncidencia?: SortOrder
  }

  export type t_imagenesAvgOrderByAggregateInput = {
    idImagen?: SortOrder
    idDiagnostico?: SortOrder
  }

  export type t_imagenesMaxOrderByAggregateInput = {
    idImagen?: SortOrder
    rutaImagen?: SortOrder
    tipoImagen?: SortOrder
    idDiagnostico?: SortOrder
    idIncidencia?: SortOrder
  }

  export type t_imagenesMinOrderByAggregateInput = {
    idImagen?: SortOrder
    rutaImagen?: SortOrder
    tipoImagen?: SortOrder
    idDiagnostico?: SortOrder
    idIncidencia?: SortOrder
  }

  export type t_imagenesSumOrderByAggregateInput = {
    idImagen?: SortOrder
    idDiagnostico?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type T_usuariosListRelationFilter = {
    every?: t_usuariosWhereInput
    some?: t_usuariosWhereInput
    none?: t_usuariosWhereInput
  }

  export type T_usuarios_x_rolListRelationFilter = {
    every?: t_usuarios_x_rolWhereInput
    some?: t_usuarios_x_rolWhereInput
    none?: t_usuarios_x_rolWhereInput
  }

  export type t_usuariosOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_usuarios_x_rolOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_rolesCountOrderByAggregateInput = {
    idRol?: SortOrder
    descripcion?: SortOrder
    sistema?: SortOrder
    estado?: SortOrder
  }

  export type t_rolesAvgOrderByAggregateInput = {
    idRol?: SortOrder
  }

  export type t_rolesMaxOrderByAggregateInput = {
    idRol?: SortOrder
    descripcion?: SortOrder
    sistema?: SortOrder
    estado?: SortOrder
  }

  export type t_rolesMinOrderByAggregateInput = {
    idRol?: SortOrder
    descripcion?: SortOrder
    sistema?: SortOrder
    estado?: SortOrder
  }

  export type t_rolesSumOrderByAggregateInput = {
    idRol?: SortOrder
  }

  export type T_usuariosRelationFilter = {
    is?: t_usuariosWhereInput
    isNot?: t_usuariosWhereInput
  }

  export type T_pantallaRelationFilter = {
    is?: t_pantallaWhereInput
    isNot?: t_pantallaWhereInput
  }

  export type t_bitacora_generalCountOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    sistema?: SortOrder
    referencia?: SortOrder
    idUsuario?: SortOrder
    idPantalla?: SortOrder
  }

  export type t_bitacora_generalAvgOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    idPantalla?: SortOrder
  }

  export type t_bitacora_generalMaxOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    sistema?: SortOrder
    referencia?: SortOrder
    idUsuario?: SortOrder
    idPantalla?: SortOrder
  }

  export type t_bitacora_generalMinOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    sistema?: SortOrder
    referencia?: SortOrder
    idUsuario?: SortOrder
    idPantalla?: SortOrder
  }

  export type t_bitacora_generalSumOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    idPantalla?: SortOrder
  }

  export type T_bitacora_generalListRelationFilter = {
    every?: t_bitacora_generalWhereInput
    some?: t_bitacora_generalWhereInput
    none?: t_bitacora_generalWhereInput
  }

  export type t_bitacora_generalOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_pantallaCountOrderByAggregateInput = {
    codigoPantalla?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type t_pantallaAvgOrderByAggregateInput = {
    codigoPantalla?: SortOrder
  }

  export type t_pantallaMaxOrderByAggregateInput = {
    codigoPantalla?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type t_pantallaMinOrderByAggregateInput = {
    codigoPantalla?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
  }

  export type t_pantallaSumOrderByAggregateInput = {
    codigoPantalla?: SortOrder
  }

  export type T_incidenciasListRelationFilter = {
    every?: t_incidenciasWhereInput
    some?: t_incidenciasWhereInput
    none?: t_incidenciasWhereInput
  }

  export type T_rolesListRelationFilter = {
    every?: t_rolesWhereInput
    some?: t_rolesWhereInput
    none?: t_rolesWhereInput
  }

  export type T_diagnosticoListRelationFilter = {
    every?: t_diagnosticoWhereInput
    some?: t_diagnosticoWhereInput
    none?: t_diagnosticoWhereInput
  }

  export type T_usuario_x_incidenciaListRelationFilter = {
    every?: t_usuario_x_incidenciaWhereInput
    some?: t_usuario_x_incidenciaWhereInput
    none?: t_usuario_x_incidenciaWhereInput
  }

  export type T_bitacora_cambio_estadoListRelationFilter = {
    every?: t_bitacora_cambio_estadoWhereInput
    some?: t_bitacora_cambio_estadoWhereInput
    none?: t_bitacora_cambio_estadoWhereInput
  }

  export type t_incidenciasOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_rolesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_diagnosticoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_usuario_x_incidenciaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_bitacora_cambio_estadoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_usuariosCountOrderByAggregateInput = {
    cedula?: SortOrder
    nombre?: SortOrder
    apellidoUno?: SortOrder
    apellidoDos?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    puesto?: SortOrder
    departamento?: SortOrder
    estado?: SortOrder
    contrasena?: SortOrder
  }

  export type t_usuariosAvgOrderByAggregateInput = {
    telefono?: SortOrder
    departamento?: SortOrder
  }

  export type t_usuariosMaxOrderByAggregateInput = {
    cedula?: SortOrder
    nombre?: SortOrder
    apellidoUno?: SortOrder
    apellidoDos?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    puesto?: SortOrder
    departamento?: SortOrder
    estado?: SortOrder
    contrasena?: SortOrder
  }

  export type t_usuariosMinOrderByAggregateInput = {
    cedula?: SortOrder
    nombre?: SortOrder
    apellidoUno?: SortOrder
    apellidoDos?: SortOrder
    telefono?: SortOrder
    correo?: SortOrder
    puesto?: SortOrder
    departamento?: SortOrder
    estado?: SortOrder
    contrasena?: SortOrder
  }

  export type t_usuariosSumOrderByAggregateInput = {
    telefono?: SortOrder
    departamento?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type t_usuario_x_incidenciaCountOrderByAggregateInput = {
    codigoAsignacion?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
    fechaAsignacion?: SortOrder
  }

  export type t_usuario_x_incidenciaAvgOrderByAggregateInput = {
    codigoAsignacion?: SortOrder
  }

  export type t_usuario_x_incidenciaMaxOrderByAggregateInput = {
    codigoAsignacion?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
    fechaAsignacion?: SortOrder
  }

  export type t_usuario_x_incidenciaMinOrderByAggregateInput = {
    codigoAsignacion?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
    fechaAsignacion?: SortOrder
  }

  export type t_usuario_x_incidenciaSumOrderByAggregateInput = {
    codigoAsignacion?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type T_PantallasCountOrderByAggregateInput = {
    codigoPantalla?: SortOrder
    nombrePantalla?: SortOrder
    descripcionPantalla?: SortOrder
  }

  export type T_PantallasAvgOrderByAggregateInput = {
    codigoPantalla?: SortOrder
  }

  export type T_PantallasMaxOrderByAggregateInput = {
    codigoPantalla?: SortOrder
    nombrePantalla?: SortOrder
    descripcionPantalla?: SortOrder
  }

  export type T_PantallasMinOrderByAggregateInput = {
    codigoPantalla?: SortOrder
    nombrePantalla?: SortOrder
    descripcionPantalla?: SortOrder
  }

  export type T_PantallasSumOrderByAggregateInput = {
    codigoPantalla?: SortOrder
  }

  export type t_bitacora_cambio_estadoCountOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    idIncidencia?: SortOrder
    fechaCambio?: SortOrder
    idEstadoActual?: SortOrder
    idEstadoAnterior?: SortOrder
    idUsuario?: SortOrder
  }

  export type t_bitacora_cambio_estadoAvgOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    idEstadoActual?: SortOrder
    idEstadoAnterior?: SortOrder
  }

  export type t_bitacora_cambio_estadoMaxOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    idIncidencia?: SortOrder
    fechaCambio?: SortOrder
    idEstadoActual?: SortOrder
    idEstadoAnterior?: SortOrder
    idUsuario?: SortOrder
  }

  export type t_bitacora_cambio_estadoMinOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    idIncidencia?: SortOrder
    fechaCambio?: SortOrder
    idEstadoActual?: SortOrder
    idEstadoAnterior?: SortOrder
    idUsuario?: SortOrder
  }

  export type t_bitacora_cambio_estadoSumOrderByAggregateInput = {
    codigoBitacora?: SortOrder
    idEstadoActual?: SortOrder
    idEstadoAnterior?: SortOrder
  }

  export type T_rolesRelationFilter = {
    is?: t_rolesWhereInput
    isNot?: t_rolesWhereInput
  }

  export type t_usuarios_x_rolUserIdRoleIdCompoundUniqueInput = {
    userId: string
    roleId: number
  }

  export type t_usuarios_x_rolCountOrderByAggregateInput = {
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type t_usuarios_x_rolAvgOrderByAggregateInput = {
    roleId?: SortOrder
  }

  export type t_usuarios_x_rolMaxOrderByAggregateInput = {
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type t_usuarios_x_rolMinOrderByAggregateInput = {
    userId?: SortOrder
    roleId?: SortOrder
  }

  export type t_usuarios_x_rolSumOrderByAggregateInput = {
    roleId?: SortOrder
  }

  export type t_afectacionesCountOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_afectacionesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_afectacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_afectacionesMinOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_afectacionesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_categoriasCountOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_categoriasAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_categoriasMaxOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_categoriasMinOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_categoriasSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_estadosCountOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_estadosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_estadosMaxOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_estadosMinOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_estadosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_riesgosCountOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_riesgosAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_riesgosMaxOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_riesgosMinOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_riesgosSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_prioridadesCountOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_prioridadesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type t_prioridadesMaxOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_prioridadesMinOrderByAggregateInput = {
    id?: SortOrder
    descripcion?: SortOrder
  }

  export type t_prioridadesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type T_afectacionesRelationFilter = {
    is?: t_afectacionesWhereInput
    isNot?: t_afectacionesWhereInput
  }

  export type T_riesgosRelationFilter = {
    is?: t_riesgosWhereInput
    isNot?: t_riesgosWhereInput
  }

  export type T_categoriasRelationFilter = {
    is?: t_categoriasWhereInput
    isNot?: t_categoriasWhereInput
  }

  export type T_prioridadesRelationFilter = {
    is?: t_prioridadesWhereInput
    isNot?: t_prioridadesWhereInput
  }

  export type T_estadosRelationFilter = {
    is?: t_estadosWhereInput
    isNot?: t_estadosWhereInput
  }

  export type T_imagenesListRelationFilter = {
    every?: t_imagenesWhereInput
    some?: t_imagenesWhereInput
    none?: t_imagenesWhereInput
  }

  export type t_imagenesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type t_incidenciasCountOrderByAggregateInput = {
    codigoIncidencia?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    justificacionCierre?: SortOrder
    lugarIncidencia?: SortOrder
    fechaRegistro?: SortOrder
    costo?: SortOrder
    duracionGestion?: SortOrder
    idUsuario?: SortOrder
    idAfectacion?: SortOrder
    idRiesgo?: SortOrder
    idCategoria?: SortOrder
    idPrioridad?: SortOrder
    idEstado?: SortOrder
  }

  export type t_incidenciasAvgOrderByAggregateInput = {
    costo?: SortOrder
    duracionGestion?: SortOrder
    idAfectacion?: SortOrder
    idRiesgo?: SortOrder
    idCategoria?: SortOrder
    idPrioridad?: SortOrder
    idEstado?: SortOrder
  }

  export type t_incidenciasMaxOrderByAggregateInput = {
    codigoIncidencia?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    justificacionCierre?: SortOrder
    lugarIncidencia?: SortOrder
    fechaRegistro?: SortOrder
    costo?: SortOrder
    duracionGestion?: SortOrder
    idUsuario?: SortOrder
    idAfectacion?: SortOrder
    idRiesgo?: SortOrder
    idCategoria?: SortOrder
    idPrioridad?: SortOrder
    idEstado?: SortOrder
  }

  export type t_incidenciasMinOrderByAggregateInput = {
    codigoIncidencia?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    justificacionCierre?: SortOrder
    lugarIncidencia?: SortOrder
    fechaRegistro?: SortOrder
    costo?: SortOrder
    duracionGestion?: SortOrder
    idUsuario?: SortOrder
    idAfectacion?: SortOrder
    idRiesgo?: SortOrder
    idCategoria?: SortOrder
    idPrioridad?: SortOrder
    idEstado?: SortOrder
  }

  export type t_incidenciasSumOrderByAggregateInput = {
    costo?: SortOrder
    duracionGestion?: SortOrder
    idAfectacion?: SortOrder
    idRiesgo?: SortOrder
    idCategoria?: SortOrder
    idPrioridad?: SortOrder
    idEstado?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type t_diagnosticoCountOrderByAggregateInput = {
    codigoDiagnostico?: SortOrder
    fechaDiagnostico?: SortOrder
    diagnostico?: SortOrder
    tiempoEstimado?: SortOrder
    observacion?: SortOrder
    compra?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
  }

  export type t_diagnosticoAvgOrderByAggregateInput = {
    codigoDiagnostico?: SortOrder
    tiempoEstimado?: SortOrder
  }

  export type t_diagnosticoMaxOrderByAggregateInput = {
    codigoDiagnostico?: SortOrder
    fechaDiagnostico?: SortOrder
    diagnostico?: SortOrder
    tiempoEstimado?: SortOrder
    observacion?: SortOrder
    compra?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
  }

  export type t_diagnosticoMinOrderByAggregateInput = {
    codigoDiagnostico?: SortOrder
    fechaDiagnostico?: SortOrder
    diagnostico?: SortOrder
    tiempoEstimado?: SortOrder
    observacion?: SortOrder
    compra?: SortOrder
    idUsuario?: SortOrder
    idIncidencia?: SortOrder
  }

  export type t_diagnosticoSumOrderByAggregateInput = {
    codigoDiagnostico?: SortOrder
    tiempoEstimado?: SortOrder
  }

  export type t_incidenciasCreateNestedOneWithoutImagenesInput = {
    create?: XOR<t_incidenciasCreateWithoutImagenesInput, t_incidenciasUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutImagenesInput
    connect?: t_incidenciasWhereUniqueInput
  }

  export type t_diagnosticoCreateNestedOneWithoutImagenesInput = {
    create?: XOR<t_diagnosticoCreateWithoutImagenesInput, t_diagnosticoUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutImagenesInput
    connect?: t_diagnosticoWhereUniqueInput
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type t_incidenciasUpdateOneRequiredWithoutImagenesNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutImagenesInput, t_incidenciasUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutImagenesInput
    upsert?: t_incidenciasUpsertWithoutImagenesInput
    connect?: t_incidenciasWhereUniqueInput
    update?: XOR<XOR<t_incidenciasUpdateToOneWithWhereWithoutImagenesInput, t_incidenciasUpdateWithoutImagenesInput>, t_incidenciasUncheckedUpdateWithoutImagenesInput>
  }

  export type t_diagnosticoUpdateOneWithoutImagenesNestedInput = {
    create?: XOR<t_diagnosticoCreateWithoutImagenesInput, t_diagnosticoUncheckedCreateWithoutImagenesInput>
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutImagenesInput
    upsert?: t_diagnosticoUpsertWithoutImagenesInput
    disconnect?: t_diagnosticoWhereInput | boolean
    delete?: t_diagnosticoWhereInput | boolean
    connect?: t_diagnosticoWhereUniqueInput
    update?: XOR<XOR<t_diagnosticoUpdateToOneWithWhereWithoutImagenesInput, t_diagnosticoUpdateWithoutImagenesInput>, t_diagnosticoUncheckedUpdateWithoutImagenesInput>
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type t_usuariosCreateNestedManyWithoutRolesInput = {
    create?: XOR<t_usuariosCreateWithoutRolesInput, t_usuariosUncheckedCreateWithoutRolesInput> | t_usuariosCreateWithoutRolesInput[] | t_usuariosUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuariosCreateOrConnectWithoutRolesInput | t_usuariosCreateOrConnectWithoutRolesInput[]
    connect?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
  }

  export type t_usuarios_x_rolCreateNestedManyWithoutRolesInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutRolesInput, t_usuarios_x_rolUncheckedCreateWithoutRolesInput> | t_usuarios_x_rolCreateWithoutRolesInput[] | t_usuarios_x_rolUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutRolesInput | t_usuarios_x_rolCreateOrConnectWithoutRolesInput[]
    createMany?: t_usuarios_x_rolCreateManyRolesInputEnvelope
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
  }

  export type t_usuariosUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<t_usuariosCreateWithoutRolesInput, t_usuariosUncheckedCreateWithoutRolesInput> | t_usuariosCreateWithoutRolesInput[] | t_usuariosUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuariosCreateOrConnectWithoutRolesInput | t_usuariosCreateOrConnectWithoutRolesInput[]
    connect?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
  }

  export type t_usuarios_x_rolUncheckedCreateNestedManyWithoutRolesInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutRolesInput, t_usuarios_x_rolUncheckedCreateWithoutRolesInput> | t_usuarios_x_rolCreateWithoutRolesInput[] | t_usuarios_x_rolUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutRolesInput | t_usuarios_x_rolCreateOrConnectWithoutRolesInput[]
    createMany?: t_usuarios_x_rolCreateManyRolesInputEnvelope
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
  }

  export type t_usuariosUpdateManyWithoutRolesNestedInput = {
    create?: XOR<t_usuariosCreateWithoutRolesInput, t_usuariosUncheckedCreateWithoutRolesInput> | t_usuariosCreateWithoutRolesInput[] | t_usuariosUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuariosCreateOrConnectWithoutRolesInput | t_usuariosCreateOrConnectWithoutRolesInput[]
    upsert?: t_usuariosUpsertWithWhereUniqueWithoutRolesInput | t_usuariosUpsertWithWhereUniqueWithoutRolesInput[]
    set?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    disconnect?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    delete?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    connect?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    update?: t_usuariosUpdateWithWhereUniqueWithoutRolesInput | t_usuariosUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: t_usuariosUpdateManyWithWhereWithoutRolesInput | t_usuariosUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: t_usuariosScalarWhereInput | t_usuariosScalarWhereInput[]
  }

  export type t_usuarios_x_rolUpdateManyWithoutRolesNestedInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutRolesInput, t_usuarios_x_rolUncheckedCreateWithoutRolesInput> | t_usuarios_x_rolCreateWithoutRolesInput[] | t_usuarios_x_rolUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutRolesInput | t_usuarios_x_rolCreateOrConnectWithoutRolesInput[]
    upsert?: t_usuarios_x_rolUpsertWithWhereUniqueWithoutRolesInput | t_usuarios_x_rolUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: t_usuarios_x_rolCreateManyRolesInputEnvelope
    set?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    disconnect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    delete?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    update?: t_usuarios_x_rolUpdateWithWhereUniqueWithoutRolesInput | t_usuarios_x_rolUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: t_usuarios_x_rolUpdateManyWithWhereWithoutRolesInput | t_usuarios_x_rolUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: t_usuarios_x_rolScalarWhereInput | t_usuarios_x_rolScalarWhereInput[]
  }

  export type t_usuariosUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<t_usuariosCreateWithoutRolesInput, t_usuariosUncheckedCreateWithoutRolesInput> | t_usuariosCreateWithoutRolesInput[] | t_usuariosUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuariosCreateOrConnectWithoutRolesInput | t_usuariosCreateOrConnectWithoutRolesInput[]
    upsert?: t_usuariosUpsertWithWhereUniqueWithoutRolesInput | t_usuariosUpsertWithWhereUniqueWithoutRolesInput[]
    set?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    disconnect?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    delete?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    connect?: t_usuariosWhereUniqueInput | t_usuariosWhereUniqueInput[]
    update?: t_usuariosUpdateWithWhereUniqueWithoutRolesInput | t_usuariosUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: t_usuariosUpdateManyWithWhereWithoutRolesInput | t_usuariosUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: t_usuariosScalarWhereInput | t_usuariosScalarWhereInput[]
  }

  export type t_usuarios_x_rolUncheckedUpdateManyWithoutRolesNestedInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutRolesInput, t_usuarios_x_rolUncheckedCreateWithoutRolesInput> | t_usuarios_x_rolCreateWithoutRolesInput[] | t_usuarios_x_rolUncheckedCreateWithoutRolesInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutRolesInput | t_usuarios_x_rolCreateOrConnectWithoutRolesInput[]
    upsert?: t_usuarios_x_rolUpsertWithWhereUniqueWithoutRolesInput | t_usuarios_x_rolUpsertWithWhereUniqueWithoutRolesInput[]
    createMany?: t_usuarios_x_rolCreateManyRolesInputEnvelope
    set?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    disconnect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    delete?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    update?: t_usuarios_x_rolUpdateWithWhereUniqueWithoutRolesInput | t_usuarios_x_rolUpdateWithWhereUniqueWithoutRolesInput[]
    updateMany?: t_usuarios_x_rolUpdateManyWithWhereWithoutRolesInput | t_usuarios_x_rolUpdateManyWithWhereWithoutRolesInput[]
    deleteMany?: t_usuarios_x_rolScalarWhereInput | t_usuarios_x_rolScalarWhereInput[]
  }

  export type t_usuariosCreateNestedOneWithoutT_bitacora_generalInput = {
    create?: XOR<t_usuariosCreateWithoutT_bitacora_generalInput, t_usuariosUncheckedCreateWithoutT_bitacora_generalInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutT_bitacora_generalInput
    connect?: t_usuariosWhereUniqueInput
  }

  export type t_pantallaCreateNestedOneWithoutT_bitacora_generalInput = {
    create?: XOR<t_pantallaCreateWithoutT_bitacora_generalInput, t_pantallaUncheckedCreateWithoutT_bitacora_generalInput>
    connectOrCreate?: t_pantallaCreateOrConnectWithoutT_bitacora_generalInput
    connect?: t_pantallaWhereUniqueInput
  }

  export type t_usuariosUpdateOneRequiredWithoutT_bitacora_generalNestedInput = {
    create?: XOR<t_usuariosCreateWithoutT_bitacora_generalInput, t_usuariosUncheckedCreateWithoutT_bitacora_generalInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutT_bitacora_generalInput
    upsert?: t_usuariosUpsertWithoutT_bitacora_generalInput
    connect?: t_usuariosWhereUniqueInput
    update?: XOR<XOR<t_usuariosUpdateToOneWithWhereWithoutT_bitacora_generalInput, t_usuariosUpdateWithoutT_bitacora_generalInput>, t_usuariosUncheckedUpdateWithoutT_bitacora_generalInput>
  }

  export type t_pantallaUpdateOneRequiredWithoutT_bitacora_generalNestedInput = {
    create?: XOR<t_pantallaCreateWithoutT_bitacora_generalInput, t_pantallaUncheckedCreateWithoutT_bitacora_generalInput>
    connectOrCreate?: t_pantallaCreateOrConnectWithoutT_bitacora_generalInput
    upsert?: t_pantallaUpsertWithoutT_bitacora_generalInput
    connect?: t_pantallaWhereUniqueInput
    update?: XOR<XOR<t_pantallaUpdateToOneWithWhereWithoutT_bitacora_generalInput, t_pantallaUpdateWithoutT_bitacora_generalInput>, t_pantallaUncheckedUpdateWithoutT_bitacora_generalInput>
  }

  export type t_bitacora_generalCreateNestedManyWithoutPantallaInput = {
    create?: XOR<t_bitacora_generalCreateWithoutPantallaInput, t_bitacora_generalUncheckedCreateWithoutPantallaInput> | t_bitacora_generalCreateWithoutPantallaInput[] | t_bitacora_generalUncheckedCreateWithoutPantallaInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutPantallaInput | t_bitacora_generalCreateOrConnectWithoutPantallaInput[]
    createMany?: t_bitacora_generalCreateManyPantallaInputEnvelope
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
  }

  export type t_bitacora_generalUncheckedCreateNestedManyWithoutPantallaInput = {
    create?: XOR<t_bitacora_generalCreateWithoutPantallaInput, t_bitacora_generalUncheckedCreateWithoutPantallaInput> | t_bitacora_generalCreateWithoutPantallaInput[] | t_bitacora_generalUncheckedCreateWithoutPantallaInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutPantallaInput | t_bitacora_generalCreateOrConnectWithoutPantallaInput[]
    createMany?: t_bitacora_generalCreateManyPantallaInputEnvelope
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
  }

  export type t_bitacora_generalUpdateManyWithoutPantallaNestedInput = {
    create?: XOR<t_bitacora_generalCreateWithoutPantallaInput, t_bitacora_generalUncheckedCreateWithoutPantallaInput> | t_bitacora_generalCreateWithoutPantallaInput[] | t_bitacora_generalUncheckedCreateWithoutPantallaInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutPantallaInput | t_bitacora_generalCreateOrConnectWithoutPantallaInput[]
    upsert?: t_bitacora_generalUpsertWithWhereUniqueWithoutPantallaInput | t_bitacora_generalUpsertWithWhereUniqueWithoutPantallaInput[]
    createMany?: t_bitacora_generalCreateManyPantallaInputEnvelope
    set?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    disconnect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    delete?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    update?: t_bitacora_generalUpdateWithWhereUniqueWithoutPantallaInput | t_bitacora_generalUpdateWithWhereUniqueWithoutPantallaInput[]
    updateMany?: t_bitacora_generalUpdateManyWithWhereWithoutPantallaInput | t_bitacora_generalUpdateManyWithWhereWithoutPantallaInput[]
    deleteMany?: t_bitacora_generalScalarWhereInput | t_bitacora_generalScalarWhereInput[]
  }

  export type t_bitacora_generalUncheckedUpdateManyWithoutPantallaNestedInput = {
    create?: XOR<t_bitacora_generalCreateWithoutPantallaInput, t_bitacora_generalUncheckedCreateWithoutPantallaInput> | t_bitacora_generalCreateWithoutPantallaInput[] | t_bitacora_generalUncheckedCreateWithoutPantallaInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutPantallaInput | t_bitacora_generalCreateOrConnectWithoutPantallaInput[]
    upsert?: t_bitacora_generalUpsertWithWhereUniqueWithoutPantallaInput | t_bitacora_generalUpsertWithWhereUniqueWithoutPantallaInput[]
    createMany?: t_bitacora_generalCreateManyPantallaInputEnvelope
    set?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    disconnect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    delete?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    update?: t_bitacora_generalUpdateWithWhereUniqueWithoutPantallaInput | t_bitacora_generalUpdateWithWhereUniqueWithoutPantallaInput[]
    updateMany?: t_bitacora_generalUpdateManyWithWhereWithoutPantallaInput | t_bitacora_generalUpdateManyWithWhereWithoutPantallaInput[]
    deleteMany?: t_bitacora_generalScalarWhereInput | t_bitacora_generalScalarWhereInput[]
  }

  export type t_incidenciasCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_incidenciasCreateWithoutUsuarioInput, t_incidenciasUncheckedCreateWithoutUsuarioInput> | t_incidenciasCreateWithoutUsuarioInput[] | t_incidenciasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutUsuarioInput | t_incidenciasCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_incidenciasCreateManyUsuarioInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_rolesCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<t_rolesCreateWithoutUsuariosInput, t_rolesUncheckedCreateWithoutUsuariosInput> | t_rolesCreateWithoutUsuariosInput[] | t_rolesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_rolesCreateOrConnectWithoutUsuariosInput | t_rolesCreateOrConnectWithoutUsuariosInput[]
    connect?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
  }

  export type t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutUsuariosInput, t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput> | t_usuarios_x_rolCreateWithoutUsuariosInput[] | t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput | t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput[]
    createMany?: t_usuarios_x_rolCreateManyUsuariosInputEnvelope
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
  }

  export type t_diagnosticoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_diagnosticoCreateWithoutUsuarioInput, t_diagnosticoUncheckedCreateWithoutUsuarioInput> | t_diagnosticoCreateWithoutUsuarioInput[] | t_diagnosticoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutUsuarioInput | t_diagnosticoCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_diagnosticoCreateManyUsuarioInputEnvelope
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
  }

  export type t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput> | t_usuario_x_incidenciaCreateWithoutUsuarioInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput | t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_usuario_x_incidenciaCreateManyUsuarioInputEnvelope
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
  }

  export type t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput> | t_bitacora_cambio_estadoCreateWithoutUsuarioInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput | t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyUsuarioInputEnvelope
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
  }

  export type t_bitacora_generalCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_bitacora_generalCreateWithoutUsuarioInput, t_bitacora_generalUncheckedCreateWithoutUsuarioInput> | t_bitacora_generalCreateWithoutUsuarioInput[] | t_bitacora_generalUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutUsuarioInput | t_bitacora_generalCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_bitacora_generalCreateManyUsuarioInputEnvelope
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
  }

  export type t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_incidenciasCreateWithoutUsuarioInput, t_incidenciasUncheckedCreateWithoutUsuarioInput> | t_incidenciasCreateWithoutUsuarioInput[] | t_incidenciasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutUsuarioInput | t_incidenciasCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_incidenciasCreateManyUsuarioInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_rolesUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<t_rolesCreateWithoutUsuariosInput, t_rolesUncheckedCreateWithoutUsuariosInput> | t_rolesCreateWithoutUsuariosInput[] | t_rolesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_rolesCreateOrConnectWithoutUsuariosInput | t_rolesCreateOrConnectWithoutUsuariosInput[]
    connect?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
  }

  export type t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutUsuariosInput, t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput> | t_usuarios_x_rolCreateWithoutUsuariosInput[] | t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput | t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput[]
    createMany?: t_usuarios_x_rolCreateManyUsuariosInputEnvelope
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
  }

  export type t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_diagnosticoCreateWithoutUsuarioInput, t_diagnosticoUncheckedCreateWithoutUsuarioInput> | t_diagnosticoCreateWithoutUsuarioInput[] | t_diagnosticoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutUsuarioInput | t_diagnosticoCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_diagnosticoCreateManyUsuarioInputEnvelope
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
  }

  export type t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput> | t_usuario_x_incidenciaCreateWithoutUsuarioInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput | t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_usuario_x_incidenciaCreateManyUsuarioInputEnvelope
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
  }

  export type t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput> | t_bitacora_cambio_estadoCreateWithoutUsuarioInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput | t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyUsuarioInputEnvelope
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
  }

  export type t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput = {
    create?: XOR<t_bitacora_generalCreateWithoutUsuarioInput, t_bitacora_generalUncheckedCreateWithoutUsuarioInput> | t_bitacora_generalCreateWithoutUsuarioInput[] | t_bitacora_generalUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutUsuarioInput | t_bitacora_generalCreateOrConnectWithoutUsuarioInput[]
    createMany?: t_bitacora_generalCreateManyUsuarioInputEnvelope
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
  }

  export type t_incidenciasUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutUsuarioInput, t_incidenciasUncheckedCreateWithoutUsuarioInput> | t_incidenciasCreateWithoutUsuarioInput[] | t_incidenciasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutUsuarioInput | t_incidenciasCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutUsuarioInput | t_incidenciasUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_incidenciasCreateManyUsuarioInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutUsuarioInput | t_incidenciasUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutUsuarioInput | t_incidenciasUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_rolesUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<t_rolesCreateWithoutUsuariosInput, t_rolesUncheckedCreateWithoutUsuariosInput> | t_rolesCreateWithoutUsuariosInput[] | t_rolesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_rolesCreateOrConnectWithoutUsuariosInput | t_rolesCreateOrConnectWithoutUsuariosInput[]
    upsert?: t_rolesUpsertWithWhereUniqueWithoutUsuariosInput | t_rolesUpsertWithWhereUniqueWithoutUsuariosInput[]
    set?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    disconnect?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    delete?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    connect?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    update?: t_rolesUpdateWithWhereUniqueWithoutUsuariosInput | t_rolesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: t_rolesUpdateManyWithWhereWithoutUsuariosInput | t_rolesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: t_rolesScalarWhereInput | t_rolesScalarWhereInput[]
  }

  export type t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutUsuariosInput, t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput> | t_usuarios_x_rolCreateWithoutUsuariosInput[] | t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput | t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput[]
    upsert?: t_usuarios_x_rolUpsertWithWhereUniqueWithoutUsuariosInput | t_usuarios_x_rolUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: t_usuarios_x_rolCreateManyUsuariosInputEnvelope
    set?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    disconnect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    delete?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    update?: t_usuarios_x_rolUpdateWithWhereUniqueWithoutUsuariosInput | t_usuarios_x_rolUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: t_usuarios_x_rolUpdateManyWithWhereWithoutUsuariosInput | t_usuarios_x_rolUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: t_usuarios_x_rolScalarWhereInput | t_usuarios_x_rolScalarWhereInput[]
  }

  export type t_diagnosticoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_diagnosticoCreateWithoutUsuarioInput, t_diagnosticoUncheckedCreateWithoutUsuarioInput> | t_diagnosticoCreateWithoutUsuarioInput[] | t_diagnosticoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutUsuarioInput | t_diagnosticoCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_diagnosticoUpsertWithWhereUniqueWithoutUsuarioInput | t_diagnosticoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_diagnosticoCreateManyUsuarioInputEnvelope
    set?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    disconnect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    delete?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    update?: t_diagnosticoUpdateWithWhereUniqueWithoutUsuarioInput | t_diagnosticoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_diagnosticoUpdateManyWithWhereWithoutUsuarioInput | t_diagnosticoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_diagnosticoScalarWhereInput | t_diagnosticoScalarWhereInput[]
  }

  export type t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput> | t_usuario_x_incidenciaCreateWithoutUsuarioInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput | t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutUsuarioInput | t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_usuario_x_incidenciaCreateManyUsuarioInputEnvelope
    set?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    disconnect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    delete?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    update?: t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutUsuarioInput | t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_usuario_x_incidenciaUpdateManyWithWhereWithoutUsuarioInput | t_usuario_x_incidenciaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_usuario_x_incidenciaScalarWhereInput | t_usuario_x_incidenciaScalarWhereInput[]
  }

  export type t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput> | t_bitacora_cambio_estadoCreateWithoutUsuarioInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput | t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutUsuarioInput | t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyUsuarioInputEnvelope
    set?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    disconnect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    delete?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    update?: t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutUsuarioInput | t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_bitacora_cambio_estadoUpdateManyWithWhereWithoutUsuarioInput | t_bitacora_cambio_estadoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_bitacora_cambio_estadoScalarWhereInput | t_bitacora_cambio_estadoScalarWhereInput[]
  }

  export type t_bitacora_generalUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_bitacora_generalCreateWithoutUsuarioInput, t_bitacora_generalUncheckedCreateWithoutUsuarioInput> | t_bitacora_generalCreateWithoutUsuarioInput[] | t_bitacora_generalUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutUsuarioInput | t_bitacora_generalCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_bitacora_generalUpsertWithWhereUniqueWithoutUsuarioInput | t_bitacora_generalUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_bitacora_generalCreateManyUsuarioInputEnvelope
    set?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    disconnect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    delete?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    update?: t_bitacora_generalUpdateWithWhereUniqueWithoutUsuarioInput | t_bitacora_generalUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_bitacora_generalUpdateManyWithWhereWithoutUsuarioInput | t_bitacora_generalUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_bitacora_generalScalarWhereInput | t_bitacora_generalScalarWhereInput[]
  }

  export type t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutUsuarioInput, t_incidenciasUncheckedCreateWithoutUsuarioInput> | t_incidenciasCreateWithoutUsuarioInput[] | t_incidenciasUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutUsuarioInput | t_incidenciasCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutUsuarioInput | t_incidenciasUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_incidenciasCreateManyUsuarioInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutUsuarioInput | t_incidenciasUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutUsuarioInput | t_incidenciasUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<t_rolesCreateWithoutUsuariosInput, t_rolesUncheckedCreateWithoutUsuariosInput> | t_rolesCreateWithoutUsuariosInput[] | t_rolesUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_rolesCreateOrConnectWithoutUsuariosInput | t_rolesCreateOrConnectWithoutUsuariosInput[]
    upsert?: t_rolesUpsertWithWhereUniqueWithoutUsuariosInput | t_rolesUpsertWithWhereUniqueWithoutUsuariosInput[]
    set?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    disconnect?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    delete?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    connect?: t_rolesWhereUniqueInput | t_rolesWhereUniqueInput[]
    update?: t_rolesUpdateWithWhereUniqueWithoutUsuariosInput | t_rolesUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: t_rolesUpdateManyWithWhereWithoutUsuariosInput | t_rolesUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: t_rolesScalarWhereInput | t_rolesScalarWhereInput[]
  }

  export type t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput = {
    create?: XOR<t_usuarios_x_rolCreateWithoutUsuariosInput, t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput> | t_usuarios_x_rolCreateWithoutUsuariosInput[] | t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput[]
    connectOrCreate?: t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput | t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput[]
    upsert?: t_usuarios_x_rolUpsertWithWhereUniqueWithoutUsuariosInput | t_usuarios_x_rolUpsertWithWhereUniqueWithoutUsuariosInput[]
    createMany?: t_usuarios_x_rolCreateManyUsuariosInputEnvelope
    set?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    disconnect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    delete?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    connect?: t_usuarios_x_rolWhereUniqueInput | t_usuarios_x_rolWhereUniqueInput[]
    update?: t_usuarios_x_rolUpdateWithWhereUniqueWithoutUsuariosInput | t_usuarios_x_rolUpdateWithWhereUniqueWithoutUsuariosInput[]
    updateMany?: t_usuarios_x_rolUpdateManyWithWhereWithoutUsuariosInput | t_usuarios_x_rolUpdateManyWithWhereWithoutUsuariosInput[]
    deleteMany?: t_usuarios_x_rolScalarWhereInput | t_usuarios_x_rolScalarWhereInput[]
  }

  export type t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_diagnosticoCreateWithoutUsuarioInput, t_diagnosticoUncheckedCreateWithoutUsuarioInput> | t_diagnosticoCreateWithoutUsuarioInput[] | t_diagnosticoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutUsuarioInput | t_diagnosticoCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_diagnosticoUpsertWithWhereUniqueWithoutUsuarioInput | t_diagnosticoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_diagnosticoCreateManyUsuarioInputEnvelope
    set?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    disconnect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    delete?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    update?: t_diagnosticoUpdateWithWhereUniqueWithoutUsuarioInput | t_diagnosticoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_diagnosticoUpdateManyWithWhereWithoutUsuarioInput | t_diagnosticoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_diagnosticoScalarWhereInput | t_diagnosticoScalarWhereInput[]
  }

  export type t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput> | t_usuario_x_incidenciaCreateWithoutUsuarioInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput | t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutUsuarioInput | t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_usuario_x_incidenciaCreateManyUsuarioInputEnvelope
    set?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    disconnect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    delete?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    update?: t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutUsuarioInput | t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_usuario_x_incidenciaUpdateManyWithWhereWithoutUsuarioInput | t_usuario_x_incidenciaUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_usuario_x_incidenciaScalarWhereInput | t_usuario_x_incidenciaScalarWhereInput[]
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput> | t_bitacora_cambio_estadoCreateWithoutUsuarioInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput | t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutUsuarioInput | t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyUsuarioInputEnvelope
    set?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    disconnect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    delete?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    update?: t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutUsuarioInput | t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_bitacora_cambio_estadoUpdateManyWithWhereWithoutUsuarioInput | t_bitacora_cambio_estadoUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_bitacora_cambio_estadoScalarWhereInput | t_bitacora_cambio_estadoScalarWhereInput[]
  }

  export type t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput = {
    create?: XOR<t_bitacora_generalCreateWithoutUsuarioInput, t_bitacora_generalUncheckedCreateWithoutUsuarioInput> | t_bitacora_generalCreateWithoutUsuarioInput[] | t_bitacora_generalUncheckedCreateWithoutUsuarioInput[]
    connectOrCreate?: t_bitacora_generalCreateOrConnectWithoutUsuarioInput | t_bitacora_generalCreateOrConnectWithoutUsuarioInput[]
    upsert?: t_bitacora_generalUpsertWithWhereUniqueWithoutUsuarioInput | t_bitacora_generalUpsertWithWhereUniqueWithoutUsuarioInput[]
    createMany?: t_bitacora_generalCreateManyUsuarioInputEnvelope
    set?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    disconnect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    delete?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    connect?: t_bitacora_generalWhereUniqueInput | t_bitacora_generalWhereUniqueInput[]
    update?: t_bitacora_generalUpdateWithWhereUniqueWithoutUsuarioInput | t_bitacora_generalUpdateWithWhereUniqueWithoutUsuarioInput[]
    updateMany?: t_bitacora_generalUpdateManyWithWhereWithoutUsuarioInput | t_bitacora_generalUpdateManyWithWhereWithoutUsuarioInput[]
    deleteMany?: t_bitacora_generalScalarWhereInput | t_bitacora_generalScalarWhereInput[]
  }

  export type t_usuariosCreateNestedOneWithoutUsuarioInput = {
    create?: XOR<t_usuariosCreateWithoutUsuarioInput, t_usuariosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutUsuarioInput
    connect?: t_usuariosWhereUniqueInput
  }

  export type t_incidenciasCreateNestedOneWithoutIncidenciaInput = {
    create?: XOR<t_incidenciasCreateWithoutIncidenciaInput, t_incidenciasUncheckedCreateWithoutIncidenciaInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutIncidenciaInput
    connect?: t_incidenciasWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type t_usuariosUpdateOneRequiredWithoutUsuarioNestedInput = {
    create?: XOR<t_usuariosCreateWithoutUsuarioInput, t_usuariosUncheckedCreateWithoutUsuarioInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutUsuarioInput
    upsert?: t_usuariosUpsertWithoutUsuarioInput
    connect?: t_usuariosWhereUniqueInput
    update?: XOR<XOR<t_usuariosUpdateToOneWithWhereWithoutUsuarioInput, t_usuariosUpdateWithoutUsuarioInput>, t_usuariosUncheckedUpdateWithoutUsuarioInput>
  }

  export type t_incidenciasUpdateOneRequiredWithoutIncidenciaNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutIncidenciaInput, t_incidenciasUncheckedCreateWithoutIncidenciaInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutIncidenciaInput
    upsert?: t_incidenciasUpsertWithoutIncidenciaInput
    connect?: t_incidenciasWhereUniqueInput
    update?: XOR<XOR<t_incidenciasUpdateToOneWithWhereWithoutIncidenciaInput, t_incidenciasUpdateWithoutIncidenciaInput>, t_incidenciasUncheckedUpdateWithoutIncidenciaInput>
  }

  export type t_incidenciasCreateNestedOneWithoutT_bitacora_cambio_estadoInput = {
    create?: XOR<t_incidenciasCreateWithoutT_bitacora_cambio_estadoInput, t_incidenciasUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutT_bitacora_cambio_estadoInput
    connect?: t_incidenciasWhereUniqueInput
  }

  export type t_usuariosCreateNestedOneWithoutT_bitacora_cambio_estadoInput = {
    create?: XOR<t_usuariosCreateWithoutT_bitacora_cambio_estadoInput, t_usuariosUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutT_bitacora_cambio_estadoInput
    connect?: t_usuariosWhereUniqueInput
  }

  export type t_incidenciasUpdateOneRequiredWithoutT_bitacora_cambio_estadoNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutT_bitacora_cambio_estadoInput, t_incidenciasUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutT_bitacora_cambio_estadoInput
    upsert?: t_incidenciasUpsertWithoutT_bitacora_cambio_estadoInput
    connect?: t_incidenciasWhereUniqueInput
    update?: XOR<XOR<t_incidenciasUpdateToOneWithWhereWithoutT_bitacora_cambio_estadoInput, t_incidenciasUpdateWithoutT_bitacora_cambio_estadoInput>, t_incidenciasUncheckedUpdateWithoutT_bitacora_cambio_estadoInput>
  }

  export type t_usuariosUpdateOneRequiredWithoutT_bitacora_cambio_estadoNestedInput = {
    create?: XOR<t_usuariosCreateWithoutT_bitacora_cambio_estadoInput, t_usuariosUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutT_bitacora_cambio_estadoInput
    upsert?: t_usuariosUpsertWithoutT_bitacora_cambio_estadoInput
    connect?: t_usuariosWhereUniqueInput
    update?: XOR<XOR<t_usuariosUpdateToOneWithWhereWithoutT_bitacora_cambio_estadoInput, t_usuariosUpdateWithoutT_bitacora_cambio_estadoInput>, t_usuariosUncheckedUpdateWithoutT_bitacora_cambio_estadoInput>
  }

  export type t_usuariosCreateNestedOneWithoutT_usuarios_x_rolInput = {
    create?: XOR<t_usuariosCreateWithoutT_usuarios_x_rolInput, t_usuariosUncheckedCreateWithoutT_usuarios_x_rolInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutT_usuarios_x_rolInput
    connect?: t_usuariosWhereUniqueInput
  }

  export type t_rolesCreateNestedOneWithoutT_usuarios_x_rolInput = {
    create?: XOR<t_rolesCreateWithoutT_usuarios_x_rolInput, t_rolesUncheckedCreateWithoutT_usuarios_x_rolInput>
    connectOrCreate?: t_rolesCreateOrConnectWithoutT_usuarios_x_rolInput
    connect?: t_rolesWhereUniqueInput
  }

  export type t_usuariosUpdateOneRequiredWithoutT_usuarios_x_rolNestedInput = {
    create?: XOR<t_usuariosCreateWithoutT_usuarios_x_rolInput, t_usuariosUncheckedCreateWithoutT_usuarios_x_rolInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutT_usuarios_x_rolInput
    upsert?: t_usuariosUpsertWithoutT_usuarios_x_rolInput
    connect?: t_usuariosWhereUniqueInput
    update?: XOR<XOR<t_usuariosUpdateToOneWithWhereWithoutT_usuarios_x_rolInput, t_usuariosUpdateWithoutT_usuarios_x_rolInput>, t_usuariosUncheckedUpdateWithoutT_usuarios_x_rolInput>
  }

  export type t_rolesUpdateOneRequiredWithoutT_usuarios_x_rolNestedInput = {
    create?: XOR<t_rolesCreateWithoutT_usuarios_x_rolInput, t_rolesUncheckedCreateWithoutT_usuarios_x_rolInput>
    connectOrCreate?: t_rolesCreateOrConnectWithoutT_usuarios_x_rolInput
    upsert?: t_rolesUpsertWithoutT_usuarios_x_rolInput
    connect?: t_rolesWhereUniqueInput
    update?: XOR<XOR<t_rolesUpdateToOneWithWhereWithoutT_usuarios_x_rolInput, t_rolesUpdateWithoutT_usuarios_x_rolInput>, t_rolesUncheckedUpdateWithoutT_usuarios_x_rolInput>
  }

  export type t_incidenciasCreateNestedManyWithoutAfectacionInput = {
    create?: XOR<t_incidenciasCreateWithoutAfectacionInput, t_incidenciasUncheckedCreateWithoutAfectacionInput> | t_incidenciasCreateWithoutAfectacionInput[] | t_incidenciasUncheckedCreateWithoutAfectacionInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutAfectacionInput | t_incidenciasCreateOrConnectWithoutAfectacionInput[]
    createMany?: t_incidenciasCreateManyAfectacionInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUncheckedCreateNestedManyWithoutAfectacionInput = {
    create?: XOR<t_incidenciasCreateWithoutAfectacionInput, t_incidenciasUncheckedCreateWithoutAfectacionInput> | t_incidenciasCreateWithoutAfectacionInput[] | t_incidenciasUncheckedCreateWithoutAfectacionInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutAfectacionInput | t_incidenciasCreateOrConnectWithoutAfectacionInput[]
    createMany?: t_incidenciasCreateManyAfectacionInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUpdateManyWithoutAfectacionNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutAfectacionInput, t_incidenciasUncheckedCreateWithoutAfectacionInput> | t_incidenciasCreateWithoutAfectacionInput[] | t_incidenciasUncheckedCreateWithoutAfectacionInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutAfectacionInput | t_incidenciasCreateOrConnectWithoutAfectacionInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutAfectacionInput | t_incidenciasUpsertWithWhereUniqueWithoutAfectacionInput[]
    createMany?: t_incidenciasCreateManyAfectacionInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutAfectacionInput | t_incidenciasUpdateWithWhereUniqueWithoutAfectacionInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutAfectacionInput | t_incidenciasUpdateManyWithWhereWithoutAfectacionInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasUncheckedUpdateManyWithoutAfectacionNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutAfectacionInput, t_incidenciasUncheckedCreateWithoutAfectacionInput> | t_incidenciasCreateWithoutAfectacionInput[] | t_incidenciasUncheckedCreateWithoutAfectacionInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutAfectacionInput | t_incidenciasCreateOrConnectWithoutAfectacionInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutAfectacionInput | t_incidenciasUpsertWithWhereUniqueWithoutAfectacionInput[]
    createMany?: t_incidenciasCreateManyAfectacionInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutAfectacionInput | t_incidenciasUpdateWithWhereUniqueWithoutAfectacionInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutAfectacionInput | t_incidenciasUpdateManyWithWhereWithoutAfectacionInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<t_incidenciasCreateWithoutCategoriaInput, t_incidenciasUncheckedCreateWithoutCategoriaInput> | t_incidenciasCreateWithoutCategoriaInput[] | t_incidenciasUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutCategoriaInput | t_incidenciasCreateOrConnectWithoutCategoriaInput[]
    createMany?: t_incidenciasCreateManyCategoriaInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUncheckedCreateNestedManyWithoutCategoriaInput = {
    create?: XOR<t_incidenciasCreateWithoutCategoriaInput, t_incidenciasUncheckedCreateWithoutCategoriaInput> | t_incidenciasCreateWithoutCategoriaInput[] | t_incidenciasUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutCategoriaInput | t_incidenciasCreateOrConnectWithoutCategoriaInput[]
    createMany?: t_incidenciasCreateManyCategoriaInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutCategoriaInput, t_incidenciasUncheckedCreateWithoutCategoriaInput> | t_incidenciasCreateWithoutCategoriaInput[] | t_incidenciasUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutCategoriaInput | t_incidenciasCreateOrConnectWithoutCategoriaInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutCategoriaInput | t_incidenciasUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: t_incidenciasCreateManyCategoriaInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutCategoriaInput | t_incidenciasUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutCategoriaInput | t_incidenciasUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasUncheckedUpdateManyWithoutCategoriaNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutCategoriaInput, t_incidenciasUncheckedCreateWithoutCategoriaInput> | t_incidenciasCreateWithoutCategoriaInput[] | t_incidenciasUncheckedCreateWithoutCategoriaInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutCategoriaInput | t_incidenciasCreateOrConnectWithoutCategoriaInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutCategoriaInput | t_incidenciasUpsertWithWhereUniqueWithoutCategoriaInput[]
    createMany?: t_incidenciasCreateManyCategoriaInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutCategoriaInput | t_incidenciasUpdateWithWhereUniqueWithoutCategoriaInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutCategoriaInput | t_incidenciasUpdateManyWithWhereWithoutCategoriaInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasCreateNestedManyWithoutEstadoInput = {
    create?: XOR<t_incidenciasCreateWithoutEstadoInput, t_incidenciasUncheckedCreateWithoutEstadoInput> | t_incidenciasCreateWithoutEstadoInput[] | t_incidenciasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutEstadoInput | t_incidenciasCreateOrConnectWithoutEstadoInput[]
    createMany?: t_incidenciasCreateManyEstadoInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUncheckedCreateNestedManyWithoutEstadoInput = {
    create?: XOR<t_incidenciasCreateWithoutEstadoInput, t_incidenciasUncheckedCreateWithoutEstadoInput> | t_incidenciasCreateWithoutEstadoInput[] | t_incidenciasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutEstadoInput | t_incidenciasCreateOrConnectWithoutEstadoInput[]
    createMany?: t_incidenciasCreateManyEstadoInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutEstadoInput, t_incidenciasUncheckedCreateWithoutEstadoInput> | t_incidenciasCreateWithoutEstadoInput[] | t_incidenciasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutEstadoInput | t_incidenciasCreateOrConnectWithoutEstadoInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutEstadoInput | t_incidenciasUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: t_incidenciasCreateManyEstadoInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutEstadoInput | t_incidenciasUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutEstadoInput | t_incidenciasUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasUncheckedUpdateManyWithoutEstadoNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutEstadoInput, t_incidenciasUncheckedCreateWithoutEstadoInput> | t_incidenciasCreateWithoutEstadoInput[] | t_incidenciasUncheckedCreateWithoutEstadoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutEstadoInput | t_incidenciasCreateOrConnectWithoutEstadoInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutEstadoInput | t_incidenciasUpsertWithWhereUniqueWithoutEstadoInput[]
    createMany?: t_incidenciasCreateManyEstadoInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutEstadoInput | t_incidenciasUpdateWithWhereUniqueWithoutEstadoInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutEstadoInput | t_incidenciasUpdateManyWithWhereWithoutEstadoInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasCreateNestedManyWithoutRiesgoInput = {
    create?: XOR<t_incidenciasCreateWithoutRiesgoInput, t_incidenciasUncheckedCreateWithoutRiesgoInput> | t_incidenciasCreateWithoutRiesgoInput[] | t_incidenciasUncheckedCreateWithoutRiesgoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutRiesgoInput | t_incidenciasCreateOrConnectWithoutRiesgoInput[]
    createMany?: t_incidenciasCreateManyRiesgoInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUncheckedCreateNestedManyWithoutRiesgoInput = {
    create?: XOR<t_incidenciasCreateWithoutRiesgoInput, t_incidenciasUncheckedCreateWithoutRiesgoInput> | t_incidenciasCreateWithoutRiesgoInput[] | t_incidenciasUncheckedCreateWithoutRiesgoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutRiesgoInput | t_incidenciasCreateOrConnectWithoutRiesgoInput[]
    createMany?: t_incidenciasCreateManyRiesgoInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUpdateManyWithoutRiesgoNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutRiesgoInput, t_incidenciasUncheckedCreateWithoutRiesgoInput> | t_incidenciasCreateWithoutRiesgoInput[] | t_incidenciasUncheckedCreateWithoutRiesgoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutRiesgoInput | t_incidenciasCreateOrConnectWithoutRiesgoInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutRiesgoInput | t_incidenciasUpsertWithWhereUniqueWithoutRiesgoInput[]
    createMany?: t_incidenciasCreateManyRiesgoInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutRiesgoInput | t_incidenciasUpdateWithWhereUniqueWithoutRiesgoInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutRiesgoInput | t_incidenciasUpdateManyWithWhereWithoutRiesgoInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasUncheckedUpdateManyWithoutRiesgoNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutRiesgoInput, t_incidenciasUncheckedCreateWithoutRiesgoInput> | t_incidenciasCreateWithoutRiesgoInput[] | t_incidenciasUncheckedCreateWithoutRiesgoInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutRiesgoInput | t_incidenciasCreateOrConnectWithoutRiesgoInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutRiesgoInput | t_incidenciasUpsertWithWhereUniqueWithoutRiesgoInput[]
    createMany?: t_incidenciasCreateManyRiesgoInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutRiesgoInput | t_incidenciasUpdateWithWhereUniqueWithoutRiesgoInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutRiesgoInput | t_incidenciasUpdateManyWithWhereWithoutRiesgoInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasCreateNestedManyWithoutPrioridadInput = {
    create?: XOR<t_incidenciasCreateWithoutPrioridadInput, t_incidenciasUncheckedCreateWithoutPrioridadInput> | t_incidenciasCreateWithoutPrioridadInput[] | t_incidenciasUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutPrioridadInput | t_incidenciasCreateOrConnectWithoutPrioridadInput[]
    createMany?: t_incidenciasCreateManyPrioridadInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUncheckedCreateNestedManyWithoutPrioridadInput = {
    create?: XOR<t_incidenciasCreateWithoutPrioridadInput, t_incidenciasUncheckedCreateWithoutPrioridadInput> | t_incidenciasCreateWithoutPrioridadInput[] | t_incidenciasUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutPrioridadInput | t_incidenciasCreateOrConnectWithoutPrioridadInput[]
    createMany?: t_incidenciasCreateManyPrioridadInputEnvelope
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
  }

  export type t_incidenciasUpdateManyWithoutPrioridadNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutPrioridadInput, t_incidenciasUncheckedCreateWithoutPrioridadInput> | t_incidenciasCreateWithoutPrioridadInput[] | t_incidenciasUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutPrioridadInput | t_incidenciasCreateOrConnectWithoutPrioridadInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutPrioridadInput | t_incidenciasUpsertWithWhereUniqueWithoutPrioridadInput[]
    createMany?: t_incidenciasCreateManyPrioridadInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutPrioridadInput | t_incidenciasUpdateWithWhereUniqueWithoutPrioridadInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutPrioridadInput | t_incidenciasUpdateManyWithWhereWithoutPrioridadInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_incidenciasUncheckedUpdateManyWithoutPrioridadNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutPrioridadInput, t_incidenciasUncheckedCreateWithoutPrioridadInput> | t_incidenciasCreateWithoutPrioridadInput[] | t_incidenciasUncheckedCreateWithoutPrioridadInput[]
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutPrioridadInput | t_incidenciasCreateOrConnectWithoutPrioridadInput[]
    upsert?: t_incidenciasUpsertWithWhereUniqueWithoutPrioridadInput | t_incidenciasUpsertWithWhereUniqueWithoutPrioridadInput[]
    createMany?: t_incidenciasCreateManyPrioridadInputEnvelope
    set?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    disconnect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    delete?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    connect?: t_incidenciasWhereUniqueInput | t_incidenciasWhereUniqueInput[]
    update?: t_incidenciasUpdateWithWhereUniqueWithoutPrioridadInput | t_incidenciasUpdateWithWhereUniqueWithoutPrioridadInput[]
    updateMany?: t_incidenciasUpdateManyWithWhereWithoutPrioridadInput | t_incidenciasUpdateManyWithWhereWithoutPrioridadInput[]
    deleteMany?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
  }

  export type t_usuariosCreateNestedOneWithoutIncidenciasInput = {
    create?: XOR<t_usuariosCreateWithoutIncidenciasInput, t_usuariosUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutIncidenciasInput
    connect?: t_usuariosWhereUniqueInput
  }

  export type t_afectacionesCreateNestedOneWithoutIncidenciasInput = {
    create?: XOR<t_afectacionesCreateWithoutIncidenciasInput, t_afectacionesUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_afectacionesCreateOrConnectWithoutIncidenciasInput
    connect?: t_afectacionesWhereUniqueInput
  }

  export type t_riesgosCreateNestedOneWithoutIncidenciasInput = {
    create?: XOR<t_riesgosCreateWithoutIncidenciasInput, t_riesgosUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_riesgosCreateOrConnectWithoutIncidenciasInput
    connect?: t_riesgosWhereUniqueInput
  }

  export type t_categoriasCreateNestedOneWithoutIncidenciasInput = {
    create?: XOR<t_categoriasCreateWithoutIncidenciasInput, t_categoriasUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_categoriasCreateOrConnectWithoutIncidenciasInput
    connect?: t_categoriasWhereUniqueInput
  }

  export type t_prioridadesCreateNestedOneWithoutIncidenciasInput = {
    create?: XOR<t_prioridadesCreateWithoutIncidenciasInput, t_prioridadesUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_prioridadesCreateOrConnectWithoutIncidenciasInput
    connect?: t_prioridadesWhereUniqueInput
  }

  export type t_estadosCreateNestedOneWithoutIncidenciasInput = {
    create?: XOR<t_estadosCreateWithoutIncidenciasInput, t_estadosUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_estadosCreateOrConnectWithoutIncidenciasInput
    connect?: t_estadosWhereUniqueInput
  }

  export type t_imagenesCreateNestedManyWithoutIncidenciaInput = {
    create?: XOR<t_imagenesCreateWithoutIncidenciaInput, t_imagenesUncheckedCreateWithoutIncidenciaInput> | t_imagenesCreateWithoutIncidenciaInput[] | t_imagenesUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutIncidenciaInput | t_imagenesCreateOrConnectWithoutIncidenciaInput[]
    createMany?: t_imagenesCreateManyIncidenciaInputEnvelope
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
  }

  export type t_diagnosticoCreateNestedManyWithoutIncidenciaInput = {
    create?: XOR<t_diagnosticoCreateWithoutIncidenciaInput, t_diagnosticoUncheckedCreateWithoutIncidenciaInput> | t_diagnosticoCreateWithoutIncidenciaInput[] | t_diagnosticoUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutIncidenciaInput | t_diagnosticoCreateOrConnectWithoutIncidenciaInput[]
    createMany?: t_diagnosticoCreateManyIncidenciaInputEnvelope
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
  }

  export type t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput> | t_usuario_x_incidenciaCreateWithoutIncidenciaInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput | t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput[]
    createMany?: t_usuario_x_incidenciaCreateManyIncidenciaInputEnvelope
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
  }

  export type t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput> | t_bitacora_cambio_estadoCreateWithoutIncidenciasInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput | t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyIncidenciasInputEnvelope
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
  }

  export type t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput = {
    create?: XOR<t_imagenesCreateWithoutIncidenciaInput, t_imagenesUncheckedCreateWithoutIncidenciaInput> | t_imagenesCreateWithoutIncidenciaInput[] | t_imagenesUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutIncidenciaInput | t_imagenesCreateOrConnectWithoutIncidenciaInput[]
    createMany?: t_imagenesCreateManyIncidenciaInputEnvelope
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
  }

  export type t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput = {
    create?: XOR<t_diagnosticoCreateWithoutIncidenciaInput, t_diagnosticoUncheckedCreateWithoutIncidenciaInput> | t_diagnosticoCreateWithoutIncidenciaInput[] | t_diagnosticoUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutIncidenciaInput | t_diagnosticoCreateOrConnectWithoutIncidenciaInput[]
    createMany?: t_diagnosticoCreateManyIncidenciaInputEnvelope
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
  }

  export type t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput> | t_usuario_x_incidenciaCreateWithoutIncidenciaInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput | t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput[]
    createMany?: t_usuario_x_incidenciaCreateManyIncidenciaInputEnvelope
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
  }

  export type t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput> | t_bitacora_cambio_estadoCreateWithoutIncidenciasInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput | t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyIncidenciasInputEnvelope
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput = {
    create?: XOR<t_usuariosCreateWithoutIncidenciasInput, t_usuariosUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutIncidenciasInput
    upsert?: t_usuariosUpsertWithoutIncidenciasInput
    connect?: t_usuariosWhereUniqueInput
    update?: XOR<XOR<t_usuariosUpdateToOneWithWhereWithoutIncidenciasInput, t_usuariosUpdateWithoutIncidenciasInput>, t_usuariosUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput = {
    create?: XOR<t_afectacionesCreateWithoutIncidenciasInput, t_afectacionesUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_afectacionesCreateOrConnectWithoutIncidenciasInput
    upsert?: t_afectacionesUpsertWithoutIncidenciasInput
    connect?: t_afectacionesWhereUniqueInput
    update?: XOR<XOR<t_afectacionesUpdateToOneWithWhereWithoutIncidenciasInput, t_afectacionesUpdateWithoutIncidenciasInput>, t_afectacionesUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput = {
    create?: XOR<t_riesgosCreateWithoutIncidenciasInput, t_riesgosUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_riesgosCreateOrConnectWithoutIncidenciasInput
    upsert?: t_riesgosUpsertWithoutIncidenciasInput
    connect?: t_riesgosWhereUniqueInput
    update?: XOR<XOR<t_riesgosUpdateToOneWithWhereWithoutIncidenciasInput, t_riesgosUpdateWithoutIncidenciasInput>, t_riesgosUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput = {
    create?: XOR<t_categoriasCreateWithoutIncidenciasInput, t_categoriasUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_categoriasCreateOrConnectWithoutIncidenciasInput
    upsert?: t_categoriasUpsertWithoutIncidenciasInput
    connect?: t_categoriasWhereUniqueInput
    update?: XOR<XOR<t_categoriasUpdateToOneWithWhereWithoutIncidenciasInput, t_categoriasUpdateWithoutIncidenciasInput>, t_categoriasUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput = {
    create?: XOR<t_prioridadesCreateWithoutIncidenciasInput, t_prioridadesUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_prioridadesCreateOrConnectWithoutIncidenciasInput
    upsert?: t_prioridadesUpsertWithoutIncidenciasInput
    connect?: t_prioridadesWhereUniqueInput
    update?: XOR<XOR<t_prioridadesUpdateToOneWithWhereWithoutIncidenciasInput, t_prioridadesUpdateWithoutIncidenciasInput>, t_prioridadesUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput = {
    create?: XOR<t_estadosCreateWithoutIncidenciasInput, t_estadosUncheckedCreateWithoutIncidenciasInput>
    connectOrCreate?: t_estadosCreateOrConnectWithoutIncidenciasInput
    upsert?: t_estadosUpsertWithoutIncidenciasInput
    connect?: t_estadosWhereUniqueInput
    update?: XOR<XOR<t_estadosUpdateToOneWithWhereWithoutIncidenciasInput, t_estadosUpdateWithoutIncidenciasInput>, t_estadosUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_imagenesUpdateManyWithoutIncidenciaNestedInput = {
    create?: XOR<t_imagenesCreateWithoutIncidenciaInput, t_imagenesUncheckedCreateWithoutIncidenciaInput> | t_imagenesCreateWithoutIncidenciaInput[] | t_imagenesUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutIncidenciaInput | t_imagenesCreateOrConnectWithoutIncidenciaInput[]
    upsert?: t_imagenesUpsertWithWhereUniqueWithoutIncidenciaInput | t_imagenesUpsertWithWhereUniqueWithoutIncidenciaInput[]
    createMany?: t_imagenesCreateManyIncidenciaInputEnvelope
    set?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    disconnect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    delete?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    update?: t_imagenesUpdateWithWhereUniqueWithoutIncidenciaInput | t_imagenesUpdateWithWhereUniqueWithoutIncidenciaInput[]
    updateMany?: t_imagenesUpdateManyWithWhereWithoutIncidenciaInput | t_imagenesUpdateManyWithWhereWithoutIncidenciaInput[]
    deleteMany?: t_imagenesScalarWhereInput | t_imagenesScalarWhereInput[]
  }

  export type t_diagnosticoUpdateManyWithoutIncidenciaNestedInput = {
    create?: XOR<t_diagnosticoCreateWithoutIncidenciaInput, t_diagnosticoUncheckedCreateWithoutIncidenciaInput> | t_diagnosticoCreateWithoutIncidenciaInput[] | t_diagnosticoUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutIncidenciaInput | t_diagnosticoCreateOrConnectWithoutIncidenciaInput[]
    upsert?: t_diagnosticoUpsertWithWhereUniqueWithoutIncidenciaInput | t_diagnosticoUpsertWithWhereUniqueWithoutIncidenciaInput[]
    createMany?: t_diagnosticoCreateManyIncidenciaInputEnvelope
    set?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    disconnect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    delete?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    update?: t_diagnosticoUpdateWithWhereUniqueWithoutIncidenciaInput | t_diagnosticoUpdateWithWhereUniqueWithoutIncidenciaInput[]
    updateMany?: t_diagnosticoUpdateManyWithWhereWithoutIncidenciaInput | t_diagnosticoUpdateManyWithWhereWithoutIncidenciaInput[]
    deleteMany?: t_diagnosticoScalarWhereInput | t_diagnosticoScalarWhereInput[]
  }

  export type t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput> | t_usuario_x_incidenciaCreateWithoutIncidenciaInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput | t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput[]
    upsert?: t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutIncidenciaInput | t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutIncidenciaInput[]
    createMany?: t_usuario_x_incidenciaCreateManyIncidenciaInputEnvelope
    set?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    disconnect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    delete?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    update?: t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutIncidenciaInput | t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutIncidenciaInput[]
    updateMany?: t_usuario_x_incidenciaUpdateManyWithWhereWithoutIncidenciaInput | t_usuario_x_incidenciaUpdateManyWithWhereWithoutIncidenciaInput[]
    deleteMany?: t_usuario_x_incidenciaScalarWhereInput | t_usuario_x_incidenciaScalarWhereInput[]
  }

  export type t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput> | t_bitacora_cambio_estadoCreateWithoutIncidenciasInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput | t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput[]
    upsert?: t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutIncidenciasInput | t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutIncidenciasInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyIncidenciasInputEnvelope
    set?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    disconnect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    delete?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    update?: t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutIncidenciasInput | t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutIncidenciasInput[]
    updateMany?: t_bitacora_cambio_estadoUpdateManyWithWhereWithoutIncidenciasInput | t_bitacora_cambio_estadoUpdateManyWithWhereWithoutIncidenciasInput[]
    deleteMany?: t_bitacora_cambio_estadoScalarWhereInput | t_bitacora_cambio_estadoScalarWhereInput[]
  }

  export type t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput = {
    create?: XOR<t_imagenesCreateWithoutIncidenciaInput, t_imagenesUncheckedCreateWithoutIncidenciaInput> | t_imagenesCreateWithoutIncidenciaInput[] | t_imagenesUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutIncidenciaInput | t_imagenesCreateOrConnectWithoutIncidenciaInput[]
    upsert?: t_imagenesUpsertWithWhereUniqueWithoutIncidenciaInput | t_imagenesUpsertWithWhereUniqueWithoutIncidenciaInput[]
    createMany?: t_imagenesCreateManyIncidenciaInputEnvelope
    set?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    disconnect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    delete?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    update?: t_imagenesUpdateWithWhereUniqueWithoutIncidenciaInput | t_imagenesUpdateWithWhereUniqueWithoutIncidenciaInput[]
    updateMany?: t_imagenesUpdateManyWithWhereWithoutIncidenciaInput | t_imagenesUpdateManyWithWhereWithoutIncidenciaInput[]
    deleteMany?: t_imagenesScalarWhereInput | t_imagenesScalarWhereInput[]
  }

  export type t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput = {
    create?: XOR<t_diagnosticoCreateWithoutIncidenciaInput, t_diagnosticoUncheckedCreateWithoutIncidenciaInput> | t_diagnosticoCreateWithoutIncidenciaInput[] | t_diagnosticoUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_diagnosticoCreateOrConnectWithoutIncidenciaInput | t_diagnosticoCreateOrConnectWithoutIncidenciaInput[]
    upsert?: t_diagnosticoUpsertWithWhereUniqueWithoutIncidenciaInput | t_diagnosticoUpsertWithWhereUniqueWithoutIncidenciaInput[]
    createMany?: t_diagnosticoCreateManyIncidenciaInputEnvelope
    set?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    disconnect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    delete?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    connect?: t_diagnosticoWhereUniqueInput | t_diagnosticoWhereUniqueInput[]
    update?: t_diagnosticoUpdateWithWhereUniqueWithoutIncidenciaInput | t_diagnosticoUpdateWithWhereUniqueWithoutIncidenciaInput[]
    updateMany?: t_diagnosticoUpdateManyWithWhereWithoutIncidenciaInput | t_diagnosticoUpdateManyWithWhereWithoutIncidenciaInput[]
    deleteMany?: t_diagnosticoScalarWhereInput | t_diagnosticoScalarWhereInput[]
  }

  export type t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput = {
    create?: XOR<t_usuario_x_incidenciaCreateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput> | t_usuario_x_incidenciaCreateWithoutIncidenciaInput[] | t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput[]
    connectOrCreate?: t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput | t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput[]
    upsert?: t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutIncidenciaInput | t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutIncidenciaInput[]
    createMany?: t_usuario_x_incidenciaCreateManyIncidenciaInputEnvelope
    set?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    disconnect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    delete?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    connect?: t_usuario_x_incidenciaWhereUniqueInput | t_usuario_x_incidenciaWhereUniqueInput[]
    update?: t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutIncidenciaInput | t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutIncidenciaInput[]
    updateMany?: t_usuario_x_incidenciaUpdateManyWithWhereWithoutIncidenciaInput | t_usuario_x_incidenciaUpdateManyWithWhereWithoutIncidenciaInput[]
    deleteMany?: t_usuario_x_incidenciaScalarWhereInput | t_usuario_x_incidenciaScalarWhereInput[]
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput = {
    create?: XOR<t_bitacora_cambio_estadoCreateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput> | t_bitacora_cambio_estadoCreateWithoutIncidenciasInput[] | t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput[]
    connectOrCreate?: t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput | t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput[]
    upsert?: t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutIncidenciasInput | t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutIncidenciasInput[]
    createMany?: t_bitacora_cambio_estadoCreateManyIncidenciasInputEnvelope
    set?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    disconnect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    delete?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    connect?: t_bitacora_cambio_estadoWhereUniqueInput | t_bitacora_cambio_estadoWhereUniqueInput[]
    update?: t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutIncidenciasInput | t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutIncidenciasInput[]
    updateMany?: t_bitacora_cambio_estadoUpdateManyWithWhereWithoutIncidenciasInput | t_bitacora_cambio_estadoUpdateManyWithWhereWithoutIncidenciasInput[]
    deleteMany?: t_bitacora_cambio_estadoScalarWhereInput | t_bitacora_cambio_estadoScalarWhereInput[]
  }

  export type t_usuariosCreateNestedOneWithoutDiagnosticoInput = {
    create?: XOR<t_usuariosCreateWithoutDiagnosticoInput, t_usuariosUncheckedCreateWithoutDiagnosticoInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutDiagnosticoInput
    connect?: t_usuariosWhereUniqueInput
  }

  export type t_incidenciasCreateNestedOneWithoutDiagnosticoInput = {
    create?: XOR<t_incidenciasCreateWithoutDiagnosticoInput, t_incidenciasUncheckedCreateWithoutDiagnosticoInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutDiagnosticoInput
    connect?: t_incidenciasWhereUniqueInput
  }

  export type t_imagenesCreateNestedManyWithoutDiagnosticoInput = {
    create?: XOR<t_imagenesCreateWithoutDiagnosticoInput, t_imagenesUncheckedCreateWithoutDiagnosticoInput> | t_imagenesCreateWithoutDiagnosticoInput[] | t_imagenesUncheckedCreateWithoutDiagnosticoInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutDiagnosticoInput | t_imagenesCreateOrConnectWithoutDiagnosticoInput[]
    createMany?: t_imagenesCreateManyDiagnosticoInputEnvelope
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
  }

  export type t_imagenesUncheckedCreateNestedManyWithoutDiagnosticoInput = {
    create?: XOR<t_imagenesCreateWithoutDiagnosticoInput, t_imagenesUncheckedCreateWithoutDiagnosticoInput> | t_imagenesCreateWithoutDiagnosticoInput[] | t_imagenesUncheckedCreateWithoutDiagnosticoInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutDiagnosticoInput | t_imagenesCreateOrConnectWithoutDiagnosticoInput[]
    createMany?: t_imagenesCreateManyDiagnosticoInputEnvelope
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
  }

  export type t_usuariosUpdateOneRequiredWithoutDiagnosticoNestedInput = {
    create?: XOR<t_usuariosCreateWithoutDiagnosticoInput, t_usuariosUncheckedCreateWithoutDiagnosticoInput>
    connectOrCreate?: t_usuariosCreateOrConnectWithoutDiagnosticoInput
    upsert?: t_usuariosUpsertWithoutDiagnosticoInput
    connect?: t_usuariosWhereUniqueInput
    update?: XOR<XOR<t_usuariosUpdateToOneWithWhereWithoutDiagnosticoInput, t_usuariosUpdateWithoutDiagnosticoInput>, t_usuariosUncheckedUpdateWithoutDiagnosticoInput>
  }

  export type t_incidenciasUpdateOneRequiredWithoutDiagnosticoNestedInput = {
    create?: XOR<t_incidenciasCreateWithoutDiagnosticoInput, t_incidenciasUncheckedCreateWithoutDiagnosticoInput>
    connectOrCreate?: t_incidenciasCreateOrConnectWithoutDiagnosticoInput
    upsert?: t_incidenciasUpsertWithoutDiagnosticoInput
    connect?: t_incidenciasWhereUniqueInput
    update?: XOR<XOR<t_incidenciasUpdateToOneWithWhereWithoutDiagnosticoInput, t_incidenciasUpdateWithoutDiagnosticoInput>, t_incidenciasUncheckedUpdateWithoutDiagnosticoInput>
  }

  export type t_imagenesUpdateManyWithoutDiagnosticoNestedInput = {
    create?: XOR<t_imagenesCreateWithoutDiagnosticoInput, t_imagenesUncheckedCreateWithoutDiagnosticoInput> | t_imagenesCreateWithoutDiagnosticoInput[] | t_imagenesUncheckedCreateWithoutDiagnosticoInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutDiagnosticoInput | t_imagenesCreateOrConnectWithoutDiagnosticoInput[]
    upsert?: t_imagenesUpsertWithWhereUniqueWithoutDiagnosticoInput | t_imagenesUpsertWithWhereUniqueWithoutDiagnosticoInput[]
    createMany?: t_imagenesCreateManyDiagnosticoInputEnvelope
    set?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    disconnect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    delete?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    update?: t_imagenesUpdateWithWhereUniqueWithoutDiagnosticoInput | t_imagenesUpdateWithWhereUniqueWithoutDiagnosticoInput[]
    updateMany?: t_imagenesUpdateManyWithWhereWithoutDiagnosticoInput | t_imagenesUpdateManyWithWhereWithoutDiagnosticoInput[]
    deleteMany?: t_imagenesScalarWhereInput | t_imagenesScalarWhereInput[]
  }

  export type t_imagenesUncheckedUpdateManyWithoutDiagnosticoNestedInput = {
    create?: XOR<t_imagenesCreateWithoutDiagnosticoInput, t_imagenesUncheckedCreateWithoutDiagnosticoInput> | t_imagenesCreateWithoutDiagnosticoInput[] | t_imagenesUncheckedCreateWithoutDiagnosticoInput[]
    connectOrCreate?: t_imagenesCreateOrConnectWithoutDiagnosticoInput | t_imagenesCreateOrConnectWithoutDiagnosticoInput[]
    upsert?: t_imagenesUpsertWithWhereUniqueWithoutDiagnosticoInput | t_imagenesUpsertWithWhereUniqueWithoutDiagnosticoInput[]
    createMany?: t_imagenesCreateManyDiagnosticoInputEnvelope
    set?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    disconnect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    delete?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    connect?: t_imagenesWhereUniqueInput | t_imagenesWhereUniqueInput[]
    update?: t_imagenesUpdateWithWhereUniqueWithoutDiagnosticoInput | t_imagenesUpdateWithWhereUniqueWithoutDiagnosticoInput[]
    updateMany?: t_imagenesUpdateManyWithWhereWithoutDiagnosticoInput | t_imagenesUpdateManyWithWhereWithoutDiagnosticoInput[]
    deleteMany?: t_imagenesScalarWhereInput | t_imagenesScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type t_incidenciasCreateWithoutImagenesInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutImagenesInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutImagenesInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutImagenesInput, t_incidenciasUncheckedCreateWithoutImagenesInput>
  }

  export type t_diagnosticoCreateWithoutImagenesInput = {
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    Usuario: t_usuariosCreateNestedOneWithoutDiagnosticoInput
    Incidencia: t_incidenciasCreateNestedOneWithoutDiagnosticoInput
  }

  export type t_diagnosticoUncheckedCreateWithoutImagenesInput = {
    codigoDiagnostico?: number
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idUsuario: string
    idIncidencia: string
  }

  export type t_diagnosticoCreateOrConnectWithoutImagenesInput = {
    where: t_diagnosticoWhereUniqueInput
    create: XOR<t_diagnosticoCreateWithoutImagenesInput, t_diagnosticoUncheckedCreateWithoutImagenesInput>
  }

  export type t_incidenciasUpsertWithoutImagenesInput = {
    update: XOR<t_incidenciasUpdateWithoutImagenesInput, t_incidenciasUncheckedUpdateWithoutImagenesInput>
    create: XOR<t_incidenciasCreateWithoutImagenesInput, t_incidenciasUncheckedCreateWithoutImagenesInput>
    where?: t_incidenciasWhereInput
  }

  export type t_incidenciasUpdateToOneWithWhereWithoutImagenesInput = {
    where?: t_incidenciasWhereInput
    data: XOR<t_incidenciasUpdateWithoutImagenesInput, t_incidenciasUncheckedUpdateWithoutImagenesInput>
  }

  export type t_incidenciasUpdateWithoutImagenesInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutImagenesInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_diagnosticoUpsertWithoutImagenesInput = {
    update: XOR<t_diagnosticoUpdateWithoutImagenesInput, t_diagnosticoUncheckedUpdateWithoutImagenesInput>
    create: XOR<t_diagnosticoCreateWithoutImagenesInput, t_diagnosticoUncheckedCreateWithoutImagenesInput>
    where?: t_diagnosticoWhereInput
  }

  export type t_diagnosticoUpdateToOneWithWhereWithoutImagenesInput = {
    where?: t_diagnosticoWhereInput
    data: XOR<t_diagnosticoUpdateWithoutImagenesInput, t_diagnosticoUncheckedUpdateWithoutImagenesInput>
  }

  export type t_diagnosticoUpdateWithoutImagenesInput = {
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    Usuario?: t_usuariosUpdateOneRequiredWithoutDiagnosticoNestedInput
    Incidencia?: t_incidenciasUpdateOneRequiredWithoutDiagnosticoNestedInput
  }

  export type t_diagnosticoUncheckedUpdateWithoutImagenesInput = {
    codigoDiagnostico?: IntFieldUpdateOperationsInput | number
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: StringFieldUpdateOperationsInput | string
    idIncidencia?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuariosCreateWithoutRolesInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasCreateNestedManyWithoutUsuarioInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateWithoutRolesInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosCreateOrConnectWithoutRolesInput = {
    where: t_usuariosWhereUniqueInput
    create: XOR<t_usuariosCreateWithoutRolesInput, t_usuariosUncheckedCreateWithoutRolesInput>
  }

  export type t_usuarios_x_rolCreateWithoutRolesInput = {
    usuarios: t_usuariosCreateNestedOneWithoutT_usuarios_x_rolInput
  }

  export type t_usuarios_x_rolUncheckedCreateWithoutRolesInput = {
    userId: string
  }

  export type t_usuarios_x_rolCreateOrConnectWithoutRolesInput = {
    where: t_usuarios_x_rolWhereUniqueInput
    create: XOR<t_usuarios_x_rolCreateWithoutRolesInput, t_usuarios_x_rolUncheckedCreateWithoutRolesInput>
  }

  export type t_usuarios_x_rolCreateManyRolesInputEnvelope = {
    data: t_usuarios_x_rolCreateManyRolesInput | t_usuarios_x_rolCreateManyRolesInput[]
    skipDuplicates?: boolean
  }

  export type t_usuariosUpsertWithWhereUniqueWithoutRolesInput = {
    where: t_usuariosWhereUniqueInput
    update: XOR<t_usuariosUpdateWithoutRolesInput, t_usuariosUncheckedUpdateWithoutRolesInput>
    create: XOR<t_usuariosCreateWithoutRolesInput, t_usuariosUncheckedCreateWithoutRolesInput>
  }

  export type t_usuariosUpdateWithWhereUniqueWithoutRolesInput = {
    where: t_usuariosWhereUniqueInput
    data: XOR<t_usuariosUpdateWithoutRolesInput, t_usuariosUncheckedUpdateWithoutRolesInput>
  }

  export type t_usuariosUpdateManyWithWhereWithoutRolesInput = {
    where: t_usuariosScalarWhereInput
    data: XOR<t_usuariosUpdateManyMutationInput, t_usuariosUncheckedUpdateManyWithoutRolesInput>
  }

  export type t_usuariosScalarWhereInput = {
    AND?: t_usuariosScalarWhereInput | t_usuariosScalarWhereInput[]
    OR?: t_usuariosScalarWhereInput[]
    NOT?: t_usuariosScalarWhereInput | t_usuariosScalarWhereInput[]
    cedula?: StringFilter<"t_usuarios"> | string
    nombre?: StringFilter<"t_usuarios"> | string
    apellidoUno?: StringFilter<"t_usuarios"> | string
    apellidoDos?: StringFilter<"t_usuarios"> | string
    telefono?: IntNullableFilter<"t_usuarios"> | number | null
    correo?: StringFilter<"t_usuarios"> | string
    puesto?: StringFilter<"t_usuarios"> | string
    departamento?: IntFilter<"t_usuarios"> | number
    estado?: BoolFilter<"t_usuarios"> | boolean
    contrasena?: StringFilter<"t_usuarios"> | string
  }

  export type t_usuarios_x_rolUpsertWithWhereUniqueWithoutRolesInput = {
    where: t_usuarios_x_rolWhereUniqueInput
    update: XOR<t_usuarios_x_rolUpdateWithoutRolesInput, t_usuarios_x_rolUncheckedUpdateWithoutRolesInput>
    create: XOR<t_usuarios_x_rolCreateWithoutRolesInput, t_usuarios_x_rolUncheckedCreateWithoutRolesInput>
  }

  export type t_usuarios_x_rolUpdateWithWhereUniqueWithoutRolesInput = {
    where: t_usuarios_x_rolWhereUniqueInput
    data: XOR<t_usuarios_x_rolUpdateWithoutRolesInput, t_usuarios_x_rolUncheckedUpdateWithoutRolesInput>
  }

  export type t_usuarios_x_rolUpdateManyWithWhereWithoutRolesInput = {
    where: t_usuarios_x_rolScalarWhereInput
    data: XOR<t_usuarios_x_rolUpdateManyMutationInput, t_usuarios_x_rolUncheckedUpdateManyWithoutRolesInput>
  }

  export type t_usuarios_x_rolScalarWhereInput = {
    AND?: t_usuarios_x_rolScalarWhereInput | t_usuarios_x_rolScalarWhereInput[]
    OR?: t_usuarios_x_rolScalarWhereInput[]
    NOT?: t_usuarios_x_rolScalarWhereInput | t_usuarios_x_rolScalarWhereInput[]
    userId?: StringFilter<"t_usuarios_x_rol"> | string
    roleId?: IntFilter<"t_usuarios_x_rol"> | number
  }

  export type t_usuariosCreateWithoutT_bitacora_generalInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateWithoutT_bitacora_generalInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesUncheckedCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosCreateOrConnectWithoutT_bitacora_generalInput = {
    where: t_usuariosWhereUniqueInput
    create: XOR<t_usuariosCreateWithoutT_bitacora_generalInput, t_usuariosUncheckedCreateWithoutT_bitacora_generalInput>
  }

  export type t_pantallaCreateWithoutT_bitacora_generalInput = {
    nombre: string
    descripcion: string
  }

  export type t_pantallaUncheckedCreateWithoutT_bitacora_generalInput = {
    codigoPantalla?: number
    nombre: string
    descripcion: string
  }

  export type t_pantallaCreateOrConnectWithoutT_bitacora_generalInput = {
    where: t_pantallaWhereUniqueInput
    create: XOR<t_pantallaCreateWithoutT_bitacora_generalInput, t_pantallaUncheckedCreateWithoutT_bitacora_generalInput>
  }

  export type t_usuariosUpsertWithoutT_bitacora_generalInput = {
    update: XOR<t_usuariosUpdateWithoutT_bitacora_generalInput, t_usuariosUncheckedUpdateWithoutT_bitacora_generalInput>
    create: XOR<t_usuariosCreateWithoutT_bitacora_generalInput, t_usuariosUncheckedCreateWithoutT_bitacora_generalInput>
    where?: t_usuariosWhereInput
  }

  export type t_usuariosUpdateToOneWithWhereWithoutT_bitacora_generalInput = {
    where?: t_usuariosWhereInput
    data: XOR<t_usuariosUpdateWithoutT_bitacora_generalInput, t_usuariosUncheckedUpdateWithoutT_bitacora_generalInput>
  }

  export type t_usuariosUpdateWithoutT_bitacora_generalInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateWithoutT_bitacora_generalInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_pantallaUpsertWithoutT_bitacora_generalInput = {
    update: XOR<t_pantallaUpdateWithoutT_bitacora_generalInput, t_pantallaUncheckedUpdateWithoutT_bitacora_generalInput>
    create: XOR<t_pantallaCreateWithoutT_bitacora_generalInput, t_pantallaUncheckedCreateWithoutT_bitacora_generalInput>
    where?: t_pantallaWhereInput
  }

  export type t_pantallaUpdateToOneWithWhereWithoutT_bitacora_generalInput = {
    where?: t_pantallaWhereInput
    data: XOR<t_pantallaUpdateWithoutT_bitacora_generalInput, t_pantallaUncheckedUpdateWithoutT_bitacora_generalInput>
  }

  export type t_pantallaUpdateWithoutT_bitacora_generalInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_pantallaUncheckedUpdateWithoutT_bitacora_generalInput = {
    codigoPantalla?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_bitacora_generalCreateWithoutPantallaInput = {
    sistema: string
    referencia: string
    Usuario: t_usuariosCreateNestedOneWithoutT_bitacora_generalInput
  }

  export type t_bitacora_generalUncheckedCreateWithoutPantallaInput = {
    codigoBitacora?: number
    sistema: string
    referencia: string
    idUsuario: string
  }

  export type t_bitacora_generalCreateOrConnectWithoutPantallaInput = {
    where: t_bitacora_generalWhereUniqueInput
    create: XOR<t_bitacora_generalCreateWithoutPantallaInput, t_bitacora_generalUncheckedCreateWithoutPantallaInput>
  }

  export type t_bitacora_generalCreateManyPantallaInputEnvelope = {
    data: t_bitacora_generalCreateManyPantallaInput | t_bitacora_generalCreateManyPantallaInput[]
    skipDuplicates?: boolean
  }

  export type t_bitacora_generalUpsertWithWhereUniqueWithoutPantallaInput = {
    where: t_bitacora_generalWhereUniqueInput
    update: XOR<t_bitacora_generalUpdateWithoutPantallaInput, t_bitacora_generalUncheckedUpdateWithoutPantallaInput>
    create: XOR<t_bitacora_generalCreateWithoutPantallaInput, t_bitacora_generalUncheckedCreateWithoutPantallaInput>
  }

  export type t_bitacora_generalUpdateWithWhereUniqueWithoutPantallaInput = {
    where: t_bitacora_generalWhereUniqueInput
    data: XOR<t_bitacora_generalUpdateWithoutPantallaInput, t_bitacora_generalUncheckedUpdateWithoutPantallaInput>
  }

  export type t_bitacora_generalUpdateManyWithWhereWithoutPantallaInput = {
    where: t_bitacora_generalScalarWhereInput
    data: XOR<t_bitacora_generalUpdateManyMutationInput, t_bitacora_generalUncheckedUpdateManyWithoutPantallaInput>
  }

  export type t_bitacora_generalScalarWhereInput = {
    AND?: t_bitacora_generalScalarWhereInput | t_bitacora_generalScalarWhereInput[]
    OR?: t_bitacora_generalScalarWhereInput[]
    NOT?: t_bitacora_generalScalarWhereInput | t_bitacora_generalScalarWhereInput[]
    codigoBitacora?: IntFilter<"t_bitacora_general"> | number
    sistema?: StringFilter<"t_bitacora_general"> | string
    referencia?: StringFilter<"t_bitacora_general"> | string
    idUsuario?: StringFilter<"t_bitacora_general"> | string
    idPantalla?: IntFilter<"t_bitacora_general"> | number
  }

  export type t_incidenciasCreateWithoutUsuarioInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutUsuarioInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutUsuarioInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutUsuarioInput, t_incidenciasUncheckedCreateWithoutUsuarioInput>
  }

  export type t_incidenciasCreateManyUsuarioInputEnvelope = {
    data: t_incidenciasCreateManyUsuarioInput | t_incidenciasCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type t_rolesCreateWithoutUsuariosInput = {
    descripcion: string
    sistema: string
    estado: boolean
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutRolesInput
  }

  export type t_rolesUncheckedCreateWithoutUsuariosInput = {
    idRol?: number
    descripcion: string
    sistema: string
    estado: boolean
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutRolesInput
  }

  export type t_rolesCreateOrConnectWithoutUsuariosInput = {
    where: t_rolesWhereUniqueInput
    create: XOR<t_rolesCreateWithoutUsuariosInput, t_rolesUncheckedCreateWithoutUsuariosInput>
  }

  export type t_usuarios_x_rolCreateWithoutUsuariosInput = {
    roles: t_rolesCreateNestedOneWithoutT_usuarios_x_rolInput
  }

  export type t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput = {
    roleId: number
  }

  export type t_usuarios_x_rolCreateOrConnectWithoutUsuariosInput = {
    where: t_usuarios_x_rolWhereUniqueInput
    create: XOR<t_usuarios_x_rolCreateWithoutUsuariosInput, t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput>
  }

  export type t_usuarios_x_rolCreateManyUsuariosInputEnvelope = {
    data: t_usuarios_x_rolCreateManyUsuariosInput | t_usuarios_x_rolCreateManyUsuariosInput[]
    skipDuplicates?: boolean
  }

  export type t_diagnosticoCreateWithoutUsuarioInput = {
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    Incidencia: t_incidenciasCreateNestedOneWithoutDiagnosticoInput
    imagenes?: t_imagenesCreateNestedManyWithoutDiagnosticoInput
  }

  export type t_diagnosticoUncheckedCreateWithoutUsuarioInput = {
    codigoDiagnostico?: number
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idIncidencia: string
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutDiagnosticoInput
  }

  export type t_diagnosticoCreateOrConnectWithoutUsuarioInput = {
    where: t_diagnosticoWhereUniqueInput
    create: XOR<t_diagnosticoCreateWithoutUsuarioInput, t_diagnosticoUncheckedCreateWithoutUsuarioInput>
  }

  export type t_diagnosticoCreateManyUsuarioInputEnvelope = {
    data: t_diagnosticoCreateManyUsuarioInput | t_diagnosticoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type t_usuario_x_incidenciaCreateWithoutUsuarioInput = {
    fechaAsignacion: Date | string
    incidencia: t_incidenciasCreateNestedOneWithoutIncidenciaInput
  }

  export type t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput = {
    codigoAsignacion?: number
    idIncidencia: string
    fechaAsignacion: Date | string
  }

  export type t_usuario_x_incidenciaCreateOrConnectWithoutUsuarioInput = {
    where: t_usuario_x_incidenciaWhereUniqueInput
    create: XOR<t_usuario_x_incidenciaCreateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput>
  }

  export type t_usuario_x_incidenciaCreateManyUsuarioInputEnvelope = {
    data: t_usuario_x_incidenciaCreateManyUsuarioInput | t_usuario_x_incidenciaCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type t_bitacora_cambio_estadoCreateWithoutUsuarioInput = {
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
    incidencias: t_incidenciasCreateNestedOneWithoutT_bitacora_cambio_estadoInput
  }

  export type t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput = {
    codigoBitacora?: number
    idIncidencia: string
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
  }

  export type t_bitacora_cambio_estadoCreateOrConnectWithoutUsuarioInput = {
    where: t_bitacora_cambio_estadoWhereUniqueInput
    create: XOR<t_bitacora_cambio_estadoCreateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput>
  }

  export type t_bitacora_cambio_estadoCreateManyUsuarioInputEnvelope = {
    data: t_bitacora_cambio_estadoCreateManyUsuarioInput | t_bitacora_cambio_estadoCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type t_bitacora_generalCreateWithoutUsuarioInput = {
    sistema: string
    referencia: string
    Pantalla: t_pantallaCreateNestedOneWithoutT_bitacora_generalInput
  }

  export type t_bitacora_generalUncheckedCreateWithoutUsuarioInput = {
    codigoBitacora?: number
    sistema: string
    referencia: string
    idPantalla: number
  }

  export type t_bitacora_generalCreateOrConnectWithoutUsuarioInput = {
    where: t_bitacora_generalWhereUniqueInput
    create: XOR<t_bitacora_generalCreateWithoutUsuarioInput, t_bitacora_generalUncheckedCreateWithoutUsuarioInput>
  }

  export type t_bitacora_generalCreateManyUsuarioInputEnvelope = {
    data: t_bitacora_generalCreateManyUsuarioInput | t_bitacora_generalCreateManyUsuarioInput[]
    skipDuplicates?: boolean
  }

  export type t_incidenciasUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: t_incidenciasWhereUniqueInput
    update: XOR<t_incidenciasUpdateWithoutUsuarioInput, t_incidenciasUncheckedUpdateWithoutUsuarioInput>
    create: XOR<t_incidenciasCreateWithoutUsuarioInput, t_incidenciasUncheckedCreateWithoutUsuarioInput>
  }

  export type t_incidenciasUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: t_incidenciasWhereUniqueInput
    data: XOR<t_incidenciasUpdateWithoutUsuarioInput, t_incidenciasUncheckedUpdateWithoutUsuarioInput>
  }

  export type t_incidenciasUpdateManyWithWhereWithoutUsuarioInput = {
    where: t_incidenciasScalarWhereInput
    data: XOR<t_incidenciasUpdateManyMutationInput, t_incidenciasUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type t_incidenciasScalarWhereInput = {
    AND?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
    OR?: t_incidenciasScalarWhereInput[]
    NOT?: t_incidenciasScalarWhereInput | t_incidenciasScalarWhereInput[]
    codigoIncidencia?: StringFilter<"t_incidencias"> | string
    nombre?: StringFilter<"t_incidencias"> | string
    descripcion?: StringFilter<"t_incidencias"> | string
    justificacionCierre?: StringFilter<"t_incidencias"> | string
    lugarIncidencia?: StringFilter<"t_incidencias"> | string
    fechaRegistro?: DateTimeFilter<"t_incidencias"> | Date | string
    costo?: FloatFilter<"t_incidencias"> | number
    duracionGestion?: IntFilter<"t_incidencias"> | number
    idUsuario?: StringFilter<"t_incidencias"> | string
    idAfectacion?: IntFilter<"t_incidencias"> | number
    idRiesgo?: IntFilter<"t_incidencias"> | number
    idCategoria?: IntFilter<"t_incidencias"> | number
    idPrioridad?: IntFilter<"t_incidencias"> | number
    idEstado?: IntFilter<"t_incidencias"> | number
  }

  export type t_rolesUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: t_rolesWhereUniqueInput
    update: XOR<t_rolesUpdateWithoutUsuariosInput, t_rolesUncheckedUpdateWithoutUsuariosInput>
    create: XOR<t_rolesCreateWithoutUsuariosInput, t_rolesUncheckedCreateWithoutUsuariosInput>
  }

  export type t_rolesUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: t_rolesWhereUniqueInput
    data: XOR<t_rolesUpdateWithoutUsuariosInput, t_rolesUncheckedUpdateWithoutUsuariosInput>
  }

  export type t_rolesUpdateManyWithWhereWithoutUsuariosInput = {
    where: t_rolesScalarWhereInput
    data: XOR<t_rolesUpdateManyMutationInput, t_rolesUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type t_rolesScalarWhereInput = {
    AND?: t_rolesScalarWhereInput | t_rolesScalarWhereInput[]
    OR?: t_rolesScalarWhereInput[]
    NOT?: t_rolesScalarWhereInput | t_rolesScalarWhereInput[]
    idRol?: IntFilter<"t_roles"> | number
    descripcion?: StringFilter<"t_roles"> | string
    sistema?: StringFilter<"t_roles"> | string
    estado?: BoolFilter<"t_roles"> | boolean
  }

  export type t_usuarios_x_rolUpsertWithWhereUniqueWithoutUsuariosInput = {
    where: t_usuarios_x_rolWhereUniqueInput
    update: XOR<t_usuarios_x_rolUpdateWithoutUsuariosInput, t_usuarios_x_rolUncheckedUpdateWithoutUsuariosInput>
    create: XOR<t_usuarios_x_rolCreateWithoutUsuariosInput, t_usuarios_x_rolUncheckedCreateWithoutUsuariosInput>
  }

  export type t_usuarios_x_rolUpdateWithWhereUniqueWithoutUsuariosInput = {
    where: t_usuarios_x_rolWhereUniqueInput
    data: XOR<t_usuarios_x_rolUpdateWithoutUsuariosInput, t_usuarios_x_rolUncheckedUpdateWithoutUsuariosInput>
  }

  export type t_usuarios_x_rolUpdateManyWithWhereWithoutUsuariosInput = {
    where: t_usuarios_x_rolScalarWhereInput
    data: XOR<t_usuarios_x_rolUpdateManyMutationInput, t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosInput>
  }

  export type t_diagnosticoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: t_diagnosticoWhereUniqueInput
    update: XOR<t_diagnosticoUpdateWithoutUsuarioInput, t_diagnosticoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<t_diagnosticoCreateWithoutUsuarioInput, t_diagnosticoUncheckedCreateWithoutUsuarioInput>
  }

  export type t_diagnosticoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: t_diagnosticoWhereUniqueInput
    data: XOR<t_diagnosticoUpdateWithoutUsuarioInput, t_diagnosticoUncheckedUpdateWithoutUsuarioInput>
  }

  export type t_diagnosticoUpdateManyWithWhereWithoutUsuarioInput = {
    where: t_diagnosticoScalarWhereInput
    data: XOR<t_diagnosticoUpdateManyMutationInput, t_diagnosticoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type t_diagnosticoScalarWhereInput = {
    AND?: t_diagnosticoScalarWhereInput | t_diagnosticoScalarWhereInput[]
    OR?: t_diagnosticoScalarWhereInput[]
    NOT?: t_diagnosticoScalarWhereInput | t_diagnosticoScalarWhereInput[]
    codigoDiagnostico?: IntFilter<"t_diagnostico"> | number
    fechaDiagnostico?: DateTimeFilter<"t_diagnostico"> | Date | string
    diagnostico?: StringFilter<"t_diagnostico"> | string
    tiempoEstimado?: IntFilter<"t_diagnostico"> | number
    observacion?: StringFilter<"t_diagnostico"> | string
    compra?: BoolFilter<"t_diagnostico"> | boolean
    idUsuario?: StringFilter<"t_diagnostico"> | string
    idIncidencia?: StringFilter<"t_diagnostico"> | string
  }

  export type t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: t_usuario_x_incidenciaWhereUniqueInput
    update: XOR<t_usuario_x_incidenciaUpdateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedUpdateWithoutUsuarioInput>
    create: XOR<t_usuario_x_incidenciaCreateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedCreateWithoutUsuarioInput>
  }

  export type t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: t_usuario_x_incidenciaWhereUniqueInput
    data: XOR<t_usuario_x_incidenciaUpdateWithoutUsuarioInput, t_usuario_x_incidenciaUncheckedUpdateWithoutUsuarioInput>
  }

  export type t_usuario_x_incidenciaUpdateManyWithWhereWithoutUsuarioInput = {
    where: t_usuario_x_incidenciaScalarWhereInput
    data: XOR<t_usuario_x_incidenciaUpdateManyMutationInput, t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type t_usuario_x_incidenciaScalarWhereInput = {
    AND?: t_usuario_x_incidenciaScalarWhereInput | t_usuario_x_incidenciaScalarWhereInput[]
    OR?: t_usuario_x_incidenciaScalarWhereInput[]
    NOT?: t_usuario_x_incidenciaScalarWhereInput | t_usuario_x_incidenciaScalarWhereInput[]
    codigoAsignacion?: IntFilter<"t_usuario_x_incidencia"> | number
    idUsuario?: StringFilter<"t_usuario_x_incidencia"> | string
    idIncidencia?: StringFilter<"t_usuario_x_incidencia"> | string
    fechaAsignacion?: DateTimeFilter<"t_usuario_x_incidencia"> | Date | string
  }

  export type t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: t_bitacora_cambio_estadoWhereUniqueInput
    update: XOR<t_bitacora_cambio_estadoUpdateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedUpdateWithoutUsuarioInput>
    create: XOR<t_bitacora_cambio_estadoCreateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedCreateWithoutUsuarioInput>
  }

  export type t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: t_bitacora_cambio_estadoWhereUniqueInput
    data: XOR<t_bitacora_cambio_estadoUpdateWithoutUsuarioInput, t_bitacora_cambio_estadoUncheckedUpdateWithoutUsuarioInput>
  }

  export type t_bitacora_cambio_estadoUpdateManyWithWhereWithoutUsuarioInput = {
    where: t_bitacora_cambio_estadoScalarWhereInput
    data: XOR<t_bitacora_cambio_estadoUpdateManyMutationInput, t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type t_bitacora_cambio_estadoScalarWhereInput = {
    AND?: t_bitacora_cambio_estadoScalarWhereInput | t_bitacora_cambio_estadoScalarWhereInput[]
    OR?: t_bitacora_cambio_estadoScalarWhereInput[]
    NOT?: t_bitacora_cambio_estadoScalarWhereInput | t_bitacora_cambio_estadoScalarWhereInput[]
    codigoBitacora?: IntFilter<"t_bitacora_cambio_estado"> | number
    idIncidencia?: StringFilter<"t_bitacora_cambio_estado"> | string
    fechaCambio?: DateTimeFilter<"t_bitacora_cambio_estado"> | Date | string
    idEstadoActual?: IntFilter<"t_bitacora_cambio_estado"> | number
    idEstadoAnterior?: IntFilter<"t_bitacora_cambio_estado"> | number
    idUsuario?: StringFilter<"t_bitacora_cambio_estado"> | string
  }

  export type t_bitacora_generalUpsertWithWhereUniqueWithoutUsuarioInput = {
    where: t_bitacora_generalWhereUniqueInput
    update: XOR<t_bitacora_generalUpdateWithoutUsuarioInput, t_bitacora_generalUncheckedUpdateWithoutUsuarioInput>
    create: XOR<t_bitacora_generalCreateWithoutUsuarioInput, t_bitacora_generalUncheckedCreateWithoutUsuarioInput>
  }

  export type t_bitacora_generalUpdateWithWhereUniqueWithoutUsuarioInput = {
    where: t_bitacora_generalWhereUniqueInput
    data: XOR<t_bitacora_generalUpdateWithoutUsuarioInput, t_bitacora_generalUncheckedUpdateWithoutUsuarioInput>
  }

  export type t_bitacora_generalUpdateManyWithWhereWithoutUsuarioInput = {
    where: t_bitacora_generalScalarWhereInput
    data: XOR<t_bitacora_generalUpdateManyMutationInput, t_bitacora_generalUncheckedUpdateManyWithoutUsuarioInput>
  }

  export type t_usuariosCreateWithoutUsuarioInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateWithoutUsuarioInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesUncheckedCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosCreateOrConnectWithoutUsuarioInput = {
    where: t_usuariosWhereUniqueInput
    create: XOR<t_usuariosCreateWithoutUsuarioInput, t_usuariosUncheckedCreateWithoutUsuarioInput>
  }

  export type t_incidenciasCreateWithoutIncidenciaInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutIncidenciaInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutIncidenciaInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutIncidenciaInput, t_incidenciasUncheckedCreateWithoutIncidenciaInput>
  }

  export type t_usuariosUpsertWithoutUsuarioInput = {
    update: XOR<t_usuariosUpdateWithoutUsuarioInput, t_usuariosUncheckedUpdateWithoutUsuarioInput>
    create: XOR<t_usuariosCreateWithoutUsuarioInput, t_usuariosUncheckedCreateWithoutUsuarioInput>
    where?: t_usuariosWhereInput
  }

  export type t_usuariosUpdateToOneWithWhereWithoutUsuarioInput = {
    where?: t_usuariosWhereInput
    data: XOR<t_usuariosUpdateWithoutUsuarioInput, t_usuariosUncheckedUpdateWithoutUsuarioInput>
  }

  export type t_usuariosUpdateWithoutUsuarioInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateWithoutUsuarioInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_incidenciasUpsertWithoutIncidenciaInput = {
    update: XOR<t_incidenciasUpdateWithoutIncidenciaInput, t_incidenciasUncheckedUpdateWithoutIncidenciaInput>
    create: XOR<t_incidenciasCreateWithoutIncidenciaInput, t_incidenciasUncheckedCreateWithoutIncidenciaInput>
    where?: t_incidenciasWhereInput
  }

  export type t_incidenciasUpdateToOneWithWhereWithoutIncidenciaInput = {
    where?: t_incidenciasWhereInput
    data: XOR<t_incidenciasUpdateWithoutIncidenciaInput, t_incidenciasUncheckedUpdateWithoutIncidenciaInput>
  }

  export type t_incidenciasUpdateWithoutIncidenciaInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutIncidenciaInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasCreateWithoutT_bitacora_cambio_estadoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
  }

  export type t_incidenciasUncheckedCreateWithoutT_bitacora_cambio_estadoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
  }

  export type t_incidenciasCreateOrConnectWithoutT_bitacora_cambio_estadoInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutT_bitacora_cambio_estadoInput, t_incidenciasUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
  }

  export type t_usuariosCreateWithoutT_bitacora_cambio_estadoInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateWithoutT_bitacora_cambio_estadoInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesUncheckedCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosCreateOrConnectWithoutT_bitacora_cambio_estadoInput = {
    where: t_usuariosWhereUniqueInput
    create: XOR<t_usuariosCreateWithoutT_bitacora_cambio_estadoInput, t_usuariosUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
  }

  export type t_incidenciasUpsertWithoutT_bitacora_cambio_estadoInput = {
    update: XOR<t_incidenciasUpdateWithoutT_bitacora_cambio_estadoInput, t_incidenciasUncheckedUpdateWithoutT_bitacora_cambio_estadoInput>
    create: XOR<t_incidenciasCreateWithoutT_bitacora_cambio_estadoInput, t_incidenciasUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
    where?: t_incidenciasWhereInput
  }

  export type t_incidenciasUpdateToOneWithWhereWithoutT_bitacora_cambio_estadoInput = {
    where?: t_incidenciasWhereInput
    data: XOR<t_incidenciasUpdateWithoutT_bitacora_cambio_estadoInput, t_incidenciasUncheckedUpdateWithoutT_bitacora_cambio_estadoInput>
  }

  export type t_incidenciasUpdateWithoutT_bitacora_cambio_estadoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutT_bitacora_cambio_estadoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
  }

  export type t_usuariosUpsertWithoutT_bitacora_cambio_estadoInput = {
    update: XOR<t_usuariosUpdateWithoutT_bitacora_cambio_estadoInput, t_usuariosUncheckedUpdateWithoutT_bitacora_cambio_estadoInput>
    create: XOR<t_usuariosCreateWithoutT_bitacora_cambio_estadoInput, t_usuariosUncheckedCreateWithoutT_bitacora_cambio_estadoInput>
    where?: t_usuariosWhereInput
  }

  export type t_usuariosUpdateToOneWithWhereWithoutT_bitacora_cambio_estadoInput = {
    where?: t_usuariosWhereInput
    data: XOR<t_usuariosUpdateWithoutT_bitacora_cambio_estadoInput, t_usuariosUncheckedUpdateWithoutT_bitacora_cambio_estadoInput>
  }

  export type t_usuariosUpdateWithoutT_bitacora_cambio_estadoInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateWithoutT_bitacora_cambio_estadoInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosCreateWithoutT_usuarios_x_rolInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateWithoutT_usuarios_x_rolInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesUncheckedCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosCreateOrConnectWithoutT_usuarios_x_rolInput = {
    where: t_usuariosWhereUniqueInput
    create: XOR<t_usuariosCreateWithoutT_usuarios_x_rolInput, t_usuariosUncheckedCreateWithoutT_usuarios_x_rolInput>
  }

  export type t_rolesCreateWithoutT_usuarios_x_rolInput = {
    descripcion: string
    sistema: string
    estado: boolean
    usuarios?: t_usuariosCreateNestedManyWithoutRolesInput
  }

  export type t_rolesUncheckedCreateWithoutT_usuarios_x_rolInput = {
    idRol?: number
    descripcion: string
    sistema: string
    estado: boolean
    usuarios?: t_usuariosUncheckedCreateNestedManyWithoutRolesInput
  }

  export type t_rolesCreateOrConnectWithoutT_usuarios_x_rolInput = {
    where: t_rolesWhereUniqueInput
    create: XOR<t_rolesCreateWithoutT_usuarios_x_rolInput, t_rolesUncheckedCreateWithoutT_usuarios_x_rolInput>
  }

  export type t_usuariosUpsertWithoutT_usuarios_x_rolInput = {
    update: XOR<t_usuariosUpdateWithoutT_usuarios_x_rolInput, t_usuariosUncheckedUpdateWithoutT_usuarios_x_rolInput>
    create: XOR<t_usuariosCreateWithoutT_usuarios_x_rolInput, t_usuariosUncheckedCreateWithoutT_usuarios_x_rolInput>
    where?: t_usuariosWhereInput
  }

  export type t_usuariosUpdateToOneWithWhereWithoutT_usuarios_x_rolInput = {
    where?: t_usuariosWhereInput
    data: XOR<t_usuariosUpdateWithoutT_usuarios_x_rolInput, t_usuariosUncheckedUpdateWithoutT_usuarios_x_rolInput>
  }

  export type t_usuariosUpdateWithoutT_usuarios_x_rolInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateWithoutT_usuarios_x_rolInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_rolesUpsertWithoutT_usuarios_x_rolInput = {
    update: XOR<t_rolesUpdateWithoutT_usuarios_x_rolInput, t_rolesUncheckedUpdateWithoutT_usuarios_x_rolInput>
    create: XOR<t_rolesCreateWithoutT_usuarios_x_rolInput, t_rolesUncheckedCreateWithoutT_usuarios_x_rolInput>
    where?: t_rolesWhereInput
  }

  export type t_rolesUpdateToOneWithWhereWithoutT_usuarios_x_rolInput = {
    where?: t_rolesWhereInput
    data: XOR<t_rolesUpdateWithoutT_usuarios_x_rolInput, t_rolesUncheckedUpdateWithoutT_usuarios_x_rolInput>
  }

  export type t_rolesUpdateWithoutT_usuarios_x_rolInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    usuarios?: t_usuariosUpdateManyWithoutRolesNestedInput
  }

  export type t_rolesUncheckedUpdateWithoutT_usuarios_x_rolInput = {
    idRol?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    usuarios?: t_usuariosUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type t_incidenciasCreateWithoutAfectacionInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutAfectacionInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutAfectacionInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutAfectacionInput, t_incidenciasUncheckedCreateWithoutAfectacionInput>
  }

  export type t_incidenciasCreateManyAfectacionInputEnvelope = {
    data: t_incidenciasCreateManyAfectacionInput | t_incidenciasCreateManyAfectacionInput[]
    skipDuplicates?: boolean
  }

  export type t_incidenciasUpsertWithWhereUniqueWithoutAfectacionInput = {
    where: t_incidenciasWhereUniqueInput
    update: XOR<t_incidenciasUpdateWithoutAfectacionInput, t_incidenciasUncheckedUpdateWithoutAfectacionInput>
    create: XOR<t_incidenciasCreateWithoutAfectacionInput, t_incidenciasUncheckedCreateWithoutAfectacionInput>
  }

  export type t_incidenciasUpdateWithWhereUniqueWithoutAfectacionInput = {
    where: t_incidenciasWhereUniqueInput
    data: XOR<t_incidenciasUpdateWithoutAfectacionInput, t_incidenciasUncheckedUpdateWithoutAfectacionInput>
  }

  export type t_incidenciasUpdateManyWithWhereWithoutAfectacionInput = {
    where: t_incidenciasScalarWhereInput
    data: XOR<t_incidenciasUpdateManyMutationInput, t_incidenciasUncheckedUpdateManyWithoutAfectacionInput>
  }

  export type t_incidenciasCreateWithoutCategoriaInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutCategoriaInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutCategoriaInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutCategoriaInput, t_incidenciasUncheckedCreateWithoutCategoriaInput>
  }

  export type t_incidenciasCreateManyCategoriaInputEnvelope = {
    data: t_incidenciasCreateManyCategoriaInput | t_incidenciasCreateManyCategoriaInput[]
    skipDuplicates?: boolean
  }

  export type t_incidenciasUpsertWithWhereUniqueWithoutCategoriaInput = {
    where: t_incidenciasWhereUniqueInput
    update: XOR<t_incidenciasUpdateWithoutCategoriaInput, t_incidenciasUncheckedUpdateWithoutCategoriaInput>
    create: XOR<t_incidenciasCreateWithoutCategoriaInput, t_incidenciasUncheckedCreateWithoutCategoriaInput>
  }

  export type t_incidenciasUpdateWithWhereUniqueWithoutCategoriaInput = {
    where: t_incidenciasWhereUniqueInput
    data: XOR<t_incidenciasUpdateWithoutCategoriaInput, t_incidenciasUncheckedUpdateWithoutCategoriaInput>
  }

  export type t_incidenciasUpdateManyWithWhereWithoutCategoriaInput = {
    where: t_incidenciasScalarWhereInput
    data: XOR<t_incidenciasUpdateManyMutationInput, t_incidenciasUncheckedUpdateManyWithoutCategoriaInput>
  }

  export type t_incidenciasCreateWithoutEstadoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutEstadoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutEstadoInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutEstadoInput, t_incidenciasUncheckedCreateWithoutEstadoInput>
  }

  export type t_incidenciasCreateManyEstadoInputEnvelope = {
    data: t_incidenciasCreateManyEstadoInput | t_incidenciasCreateManyEstadoInput[]
    skipDuplicates?: boolean
  }

  export type t_incidenciasUpsertWithWhereUniqueWithoutEstadoInput = {
    where: t_incidenciasWhereUniqueInput
    update: XOR<t_incidenciasUpdateWithoutEstadoInput, t_incidenciasUncheckedUpdateWithoutEstadoInput>
    create: XOR<t_incidenciasCreateWithoutEstadoInput, t_incidenciasUncheckedCreateWithoutEstadoInput>
  }

  export type t_incidenciasUpdateWithWhereUniqueWithoutEstadoInput = {
    where: t_incidenciasWhereUniqueInput
    data: XOR<t_incidenciasUpdateWithoutEstadoInput, t_incidenciasUncheckedUpdateWithoutEstadoInput>
  }

  export type t_incidenciasUpdateManyWithWhereWithoutEstadoInput = {
    where: t_incidenciasScalarWhereInput
    data: XOR<t_incidenciasUpdateManyMutationInput, t_incidenciasUncheckedUpdateManyWithoutEstadoInput>
  }

  export type t_incidenciasCreateWithoutRiesgoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutRiesgoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutRiesgoInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutRiesgoInput, t_incidenciasUncheckedCreateWithoutRiesgoInput>
  }

  export type t_incidenciasCreateManyRiesgoInputEnvelope = {
    data: t_incidenciasCreateManyRiesgoInput | t_incidenciasCreateManyRiesgoInput[]
    skipDuplicates?: boolean
  }

  export type t_incidenciasUpsertWithWhereUniqueWithoutRiesgoInput = {
    where: t_incidenciasWhereUniqueInput
    update: XOR<t_incidenciasUpdateWithoutRiesgoInput, t_incidenciasUncheckedUpdateWithoutRiesgoInput>
    create: XOR<t_incidenciasCreateWithoutRiesgoInput, t_incidenciasUncheckedCreateWithoutRiesgoInput>
  }

  export type t_incidenciasUpdateWithWhereUniqueWithoutRiesgoInput = {
    where: t_incidenciasWhereUniqueInput
    data: XOR<t_incidenciasUpdateWithoutRiesgoInput, t_incidenciasUncheckedUpdateWithoutRiesgoInput>
  }

  export type t_incidenciasUpdateManyWithWhereWithoutRiesgoInput = {
    where: t_incidenciasScalarWhereInput
    data: XOR<t_incidenciasUpdateManyMutationInput, t_incidenciasUncheckedUpdateManyWithoutRiesgoInput>
  }

  export type t_incidenciasCreateWithoutPrioridadInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutPrioridadInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutPrioridadInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutPrioridadInput, t_incidenciasUncheckedCreateWithoutPrioridadInput>
  }

  export type t_incidenciasCreateManyPrioridadInputEnvelope = {
    data: t_incidenciasCreateManyPrioridadInput | t_incidenciasCreateManyPrioridadInput[]
    skipDuplicates?: boolean
  }

  export type t_incidenciasUpsertWithWhereUniqueWithoutPrioridadInput = {
    where: t_incidenciasWhereUniqueInput
    update: XOR<t_incidenciasUpdateWithoutPrioridadInput, t_incidenciasUncheckedUpdateWithoutPrioridadInput>
    create: XOR<t_incidenciasCreateWithoutPrioridadInput, t_incidenciasUncheckedCreateWithoutPrioridadInput>
  }

  export type t_incidenciasUpdateWithWhereUniqueWithoutPrioridadInput = {
    where: t_incidenciasWhereUniqueInput
    data: XOR<t_incidenciasUpdateWithoutPrioridadInput, t_incidenciasUncheckedUpdateWithoutPrioridadInput>
  }

  export type t_incidenciasUpdateManyWithWhereWithoutPrioridadInput = {
    where: t_incidenciasScalarWhereInput
    data: XOR<t_incidenciasUpdateManyMutationInput, t_incidenciasUncheckedUpdateManyWithoutPrioridadInput>
  }

  export type t_usuariosCreateWithoutIncidenciasInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    roles?: t_rolesCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateWithoutIncidenciasInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    roles?: t_rolesUncheckedCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput
    diagnostico?: t_diagnosticoUncheckedCreateNestedManyWithoutUsuarioInput
    usuario?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosCreateOrConnectWithoutIncidenciasInput = {
    where: t_usuariosWhereUniqueInput
    create: XOR<t_usuariosCreateWithoutIncidenciasInput, t_usuariosUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_afectacionesCreateWithoutIncidenciasInput = {
    descripcion: string
  }

  export type t_afectacionesUncheckedCreateWithoutIncidenciasInput = {
    id?: number
    descripcion: string
  }

  export type t_afectacionesCreateOrConnectWithoutIncidenciasInput = {
    where: t_afectacionesWhereUniqueInput
    create: XOR<t_afectacionesCreateWithoutIncidenciasInput, t_afectacionesUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_riesgosCreateWithoutIncidenciasInput = {
    descripcion: string
  }

  export type t_riesgosUncheckedCreateWithoutIncidenciasInput = {
    id?: number
    descripcion: string
  }

  export type t_riesgosCreateOrConnectWithoutIncidenciasInput = {
    where: t_riesgosWhereUniqueInput
    create: XOR<t_riesgosCreateWithoutIncidenciasInput, t_riesgosUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_categoriasCreateWithoutIncidenciasInput = {
    descripcion: string
  }

  export type t_categoriasUncheckedCreateWithoutIncidenciasInput = {
    id?: number
    descripcion: string
  }

  export type t_categoriasCreateOrConnectWithoutIncidenciasInput = {
    where: t_categoriasWhereUniqueInput
    create: XOR<t_categoriasCreateWithoutIncidenciasInput, t_categoriasUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_prioridadesCreateWithoutIncidenciasInput = {
    descripcion: string
  }

  export type t_prioridadesUncheckedCreateWithoutIncidenciasInput = {
    id?: number
    descripcion: string
  }

  export type t_prioridadesCreateOrConnectWithoutIncidenciasInput = {
    where: t_prioridadesWhereUniqueInput
    create: XOR<t_prioridadesCreateWithoutIncidenciasInput, t_prioridadesUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_estadosCreateWithoutIncidenciasInput = {
    descripcion: string
  }

  export type t_estadosUncheckedCreateWithoutIncidenciasInput = {
    id?: number
    descripcion: string
  }

  export type t_estadosCreateOrConnectWithoutIncidenciasInput = {
    where: t_estadosWhereUniqueInput
    create: XOR<t_estadosCreateWithoutIncidenciasInput, t_estadosUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_imagenesCreateWithoutIncidenciaInput = {
    rutaImagen: string
    tipoImagen: boolean
    diagnostico?: t_diagnosticoCreateNestedOneWithoutImagenesInput
  }

  export type t_imagenesUncheckedCreateWithoutIncidenciaInput = {
    idImagen?: number
    rutaImagen: string
    tipoImagen: boolean
    idDiagnostico?: number | null
  }

  export type t_imagenesCreateOrConnectWithoutIncidenciaInput = {
    where: t_imagenesWhereUniqueInput
    create: XOR<t_imagenesCreateWithoutIncidenciaInput, t_imagenesUncheckedCreateWithoutIncidenciaInput>
  }

  export type t_imagenesCreateManyIncidenciaInputEnvelope = {
    data: t_imagenesCreateManyIncidenciaInput | t_imagenesCreateManyIncidenciaInput[]
    skipDuplicates?: boolean
  }

  export type t_diagnosticoCreateWithoutIncidenciaInput = {
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    Usuario: t_usuariosCreateNestedOneWithoutDiagnosticoInput
    imagenes?: t_imagenesCreateNestedManyWithoutDiagnosticoInput
  }

  export type t_diagnosticoUncheckedCreateWithoutIncidenciaInput = {
    codigoDiagnostico?: number
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idUsuario: string
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutDiagnosticoInput
  }

  export type t_diagnosticoCreateOrConnectWithoutIncidenciaInput = {
    where: t_diagnosticoWhereUniqueInput
    create: XOR<t_diagnosticoCreateWithoutIncidenciaInput, t_diagnosticoUncheckedCreateWithoutIncidenciaInput>
  }

  export type t_diagnosticoCreateManyIncidenciaInputEnvelope = {
    data: t_diagnosticoCreateManyIncidenciaInput | t_diagnosticoCreateManyIncidenciaInput[]
    skipDuplicates?: boolean
  }

  export type t_usuario_x_incidenciaCreateWithoutIncidenciaInput = {
    fechaAsignacion: Date | string
    usuario: t_usuariosCreateNestedOneWithoutUsuarioInput
  }

  export type t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput = {
    codigoAsignacion?: number
    idUsuario: string
    fechaAsignacion: Date | string
  }

  export type t_usuario_x_incidenciaCreateOrConnectWithoutIncidenciaInput = {
    where: t_usuario_x_incidenciaWhereUniqueInput
    create: XOR<t_usuario_x_incidenciaCreateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput>
  }

  export type t_usuario_x_incidenciaCreateManyIncidenciaInputEnvelope = {
    data: t_usuario_x_incidenciaCreateManyIncidenciaInput | t_usuario_x_incidenciaCreateManyIncidenciaInput[]
    skipDuplicates?: boolean
  }

  export type t_bitacora_cambio_estadoCreateWithoutIncidenciasInput = {
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
    usuario: t_usuariosCreateNestedOneWithoutT_bitacora_cambio_estadoInput
  }

  export type t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput = {
    codigoBitacora?: number
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
    idUsuario: string
  }

  export type t_bitacora_cambio_estadoCreateOrConnectWithoutIncidenciasInput = {
    where: t_bitacora_cambio_estadoWhereUniqueInput
    create: XOR<t_bitacora_cambio_estadoCreateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_bitacora_cambio_estadoCreateManyIncidenciasInputEnvelope = {
    data: t_bitacora_cambio_estadoCreateManyIncidenciasInput | t_bitacora_cambio_estadoCreateManyIncidenciasInput[]
    skipDuplicates?: boolean
  }

  export type t_usuariosUpsertWithoutIncidenciasInput = {
    update: XOR<t_usuariosUpdateWithoutIncidenciasInput, t_usuariosUncheckedUpdateWithoutIncidenciasInput>
    create: XOR<t_usuariosCreateWithoutIncidenciasInput, t_usuariosUncheckedCreateWithoutIncidenciasInput>
    where?: t_usuariosWhereInput
  }

  export type t_usuariosUpdateToOneWithWhereWithoutIncidenciasInput = {
    where?: t_usuariosWhereInput
    data: XOR<t_usuariosUpdateWithoutIncidenciasInput, t_usuariosUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_usuariosUpdateWithoutIncidenciasInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    roles?: t_rolesUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateWithoutIncidenciasInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    roles?: t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_afectacionesUpsertWithoutIncidenciasInput = {
    update: XOR<t_afectacionesUpdateWithoutIncidenciasInput, t_afectacionesUncheckedUpdateWithoutIncidenciasInput>
    create: XOR<t_afectacionesCreateWithoutIncidenciasInput, t_afectacionesUncheckedCreateWithoutIncidenciasInput>
    where?: t_afectacionesWhereInput
  }

  export type t_afectacionesUpdateToOneWithWhereWithoutIncidenciasInput = {
    where?: t_afectacionesWhereInput
    data: XOR<t_afectacionesUpdateWithoutIncidenciasInput, t_afectacionesUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_afectacionesUpdateWithoutIncidenciasInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_afectacionesUncheckedUpdateWithoutIncidenciasInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_riesgosUpsertWithoutIncidenciasInput = {
    update: XOR<t_riesgosUpdateWithoutIncidenciasInput, t_riesgosUncheckedUpdateWithoutIncidenciasInput>
    create: XOR<t_riesgosCreateWithoutIncidenciasInput, t_riesgosUncheckedCreateWithoutIncidenciasInput>
    where?: t_riesgosWhereInput
  }

  export type t_riesgosUpdateToOneWithWhereWithoutIncidenciasInput = {
    where?: t_riesgosWhereInput
    data: XOR<t_riesgosUpdateWithoutIncidenciasInput, t_riesgosUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_riesgosUpdateWithoutIncidenciasInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_riesgosUncheckedUpdateWithoutIncidenciasInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_categoriasUpsertWithoutIncidenciasInput = {
    update: XOR<t_categoriasUpdateWithoutIncidenciasInput, t_categoriasUncheckedUpdateWithoutIncidenciasInput>
    create: XOR<t_categoriasCreateWithoutIncidenciasInput, t_categoriasUncheckedCreateWithoutIncidenciasInput>
    where?: t_categoriasWhereInput
  }

  export type t_categoriasUpdateToOneWithWhereWithoutIncidenciasInput = {
    where?: t_categoriasWhereInput
    data: XOR<t_categoriasUpdateWithoutIncidenciasInput, t_categoriasUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_categoriasUpdateWithoutIncidenciasInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_categoriasUncheckedUpdateWithoutIncidenciasInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_prioridadesUpsertWithoutIncidenciasInput = {
    update: XOR<t_prioridadesUpdateWithoutIncidenciasInput, t_prioridadesUncheckedUpdateWithoutIncidenciasInput>
    create: XOR<t_prioridadesCreateWithoutIncidenciasInput, t_prioridadesUncheckedCreateWithoutIncidenciasInput>
    where?: t_prioridadesWhereInput
  }

  export type t_prioridadesUpdateToOneWithWhereWithoutIncidenciasInput = {
    where?: t_prioridadesWhereInput
    data: XOR<t_prioridadesUpdateWithoutIncidenciasInput, t_prioridadesUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_prioridadesUpdateWithoutIncidenciasInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_prioridadesUncheckedUpdateWithoutIncidenciasInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_estadosUpsertWithoutIncidenciasInput = {
    update: XOR<t_estadosUpdateWithoutIncidenciasInput, t_estadosUncheckedUpdateWithoutIncidenciasInput>
    create: XOR<t_estadosCreateWithoutIncidenciasInput, t_estadosUncheckedCreateWithoutIncidenciasInput>
    where?: t_estadosWhereInput
  }

  export type t_estadosUpdateToOneWithWhereWithoutIncidenciasInput = {
    where?: t_estadosWhereInput
    data: XOR<t_estadosUpdateWithoutIncidenciasInput, t_estadosUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_estadosUpdateWithoutIncidenciasInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_estadosUncheckedUpdateWithoutIncidenciasInput = {
    id?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
  }

  export type t_imagenesUpsertWithWhereUniqueWithoutIncidenciaInput = {
    where: t_imagenesWhereUniqueInput
    update: XOR<t_imagenesUpdateWithoutIncidenciaInput, t_imagenesUncheckedUpdateWithoutIncidenciaInput>
    create: XOR<t_imagenesCreateWithoutIncidenciaInput, t_imagenesUncheckedCreateWithoutIncidenciaInput>
  }

  export type t_imagenesUpdateWithWhereUniqueWithoutIncidenciaInput = {
    where: t_imagenesWhereUniqueInput
    data: XOR<t_imagenesUpdateWithoutIncidenciaInput, t_imagenesUncheckedUpdateWithoutIncidenciaInput>
  }

  export type t_imagenesUpdateManyWithWhereWithoutIncidenciaInput = {
    where: t_imagenesScalarWhereInput
    data: XOR<t_imagenesUpdateManyMutationInput, t_imagenesUncheckedUpdateManyWithoutIncidenciaInput>
  }

  export type t_imagenesScalarWhereInput = {
    AND?: t_imagenesScalarWhereInput | t_imagenesScalarWhereInput[]
    OR?: t_imagenesScalarWhereInput[]
    NOT?: t_imagenesScalarWhereInput | t_imagenesScalarWhereInput[]
    idImagen?: IntFilter<"t_imagenes"> | number
    rutaImagen?: StringFilter<"t_imagenes"> | string
    tipoImagen?: BoolFilter<"t_imagenes"> | boolean
    idDiagnostico?: IntNullableFilter<"t_imagenes"> | number | null
    idIncidencia?: StringFilter<"t_imagenes"> | string
  }

  export type t_diagnosticoUpsertWithWhereUniqueWithoutIncidenciaInput = {
    where: t_diagnosticoWhereUniqueInput
    update: XOR<t_diagnosticoUpdateWithoutIncidenciaInput, t_diagnosticoUncheckedUpdateWithoutIncidenciaInput>
    create: XOR<t_diagnosticoCreateWithoutIncidenciaInput, t_diagnosticoUncheckedCreateWithoutIncidenciaInput>
  }

  export type t_diagnosticoUpdateWithWhereUniqueWithoutIncidenciaInput = {
    where: t_diagnosticoWhereUniqueInput
    data: XOR<t_diagnosticoUpdateWithoutIncidenciaInput, t_diagnosticoUncheckedUpdateWithoutIncidenciaInput>
  }

  export type t_diagnosticoUpdateManyWithWhereWithoutIncidenciaInput = {
    where: t_diagnosticoScalarWhereInput
    data: XOR<t_diagnosticoUpdateManyMutationInput, t_diagnosticoUncheckedUpdateManyWithoutIncidenciaInput>
  }

  export type t_usuario_x_incidenciaUpsertWithWhereUniqueWithoutIncidenciaInput = {
    where: t_usuario_x_incidenciaWhereUniqueInput
    update: XOR<t_usuario_x_incidenciaUpdateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedUpdateWithoutIncidenciaInput>
    create: XOR<t_usuario_x_incidenciaCreateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedCreateWithoutIncidenciaInput>
  }

  export type t_usuario_x_incidenciaUpdateWithWhereUniqueWithoutIncidenciaInput = {
    where: t_usuario_x_incidenciaWhereUniqueInput
    data: XOR<t_usuario_x_incidenciaUpdateWithoutIncidenciaInput, t_usuario_x_incidenciaUncheckedUpdateWithoutIncidenciaInput>
  }

  export type t_usuario_x_incidenciaUpdateManyWithWhereWithoutIncidenciaInput = {
    where: t_usuario_x_incidenciaScalarWhereInput
    data: XOR<t_usuario_x_incidenciaUpdateManyMutationInput, t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaInput>
  }

  export type t_bitacora_cambio_estadoUpsertWithWhereUniqueWithoutIncidenciasInput = {
    where: t_bitacora_cambio_estadoWhereUniqueInput
    update: XOR<t_bitacora_cambio_estadoUpdateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedUpdateWithoutIncidenciasInput>
    create: XOR<t_bitacora_cambio_estadoCreateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedCreateWithoutIncidenciasInput>
  }

  export type t_bitacora_cambio_estadoUpdateWithWhereUniqueWithoutIncidenciasInput = {
    where: t_bitacora_cambio_estadoWhereUniqueInput
    data: XOR<t_bitacora_cambio_estadoUpdateWithoutIncidenciasInput, t_bitacora_cambio_estadoUncheckedUpdateWithoutIncidenciasInput>
  }

  export type t_bitacora_cambio_estadoUpdateManyWithWhereWithoutIncidenciasInput = {
    where: t_bitacora_cambio_estadoScalarWhereInput
    data: XOR<t_bitacora_cambio_estadoUpdateManyMutationInput, t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasInput>
  }

  export type t_usuariosCreateWithoutDiagnosticoInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolCreateNestedManyWithoutUsuariosInput
    usuario?: t_usuario_x_incidenciaCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosUncheckedCreateWithoutDiagnosticoInput = {
    cedula: string
    nombre: string
    apellidoUno: string
    apellidoDos: string
    telefono?: number | null
    correo: string
    puesto: string
    departamento: number
    estado: boolean
    contrasena: string
    incidencias?: t_incidenciasUncheckedCreateNestedManyWithoutUsuarioInput
    roles?: t_rolesUncheckedCreateNestedManyWithoutUsuariosInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedCreateNestedManyWithoutUsuariosInput
    usuario?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutUsuarioInput
    t_bitacora_general?: t_bitacora_generalUncheckedCreateNestedManyWithoutUsuarioInput
  }

  export type t_usuariosCreateOrConnectWithoutDiagnosticoInput = {
    where: t_usuariosWhereUniqueInput
    create: XOR<t_usuariosCreateWithoutDiagnosticoInput, t_usuariosUncheckedCreateWithoutDiagnosticoInput>
  }

  export type t_incidenciasCreateWithoutDiagnosticoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    Usuario: t_usuariosCreateNestedOneWithoutIncidenciasInput
    Afectacion: t_afectacionesCreateNestedOneWithoutIncidenciasInput
    Riesgo: t_riesgosCreateNestedOneWithoutIncidenciasInput
    Categoria: t_categoriasCreateNestedOneWithoutIncidenciasInput
    Prioridad: t_prioridadesCreateNestedOneWithoutIncidenciasInput
    Estado: t_estadosCreateNestedOneWithoutIncidenciasInput
    imagenes?: t_imagenesCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasUncheckedCreateWithoutDiagnosticoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
    imagenes?: t_imagenesUncheckedCreateNestedManyWithoutIncidenciaInput
    incidencia?: t_usuario_x_incidenciaUncheckedCreateNestedManyWithoutIncidenciaInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedCreateNestedManyWithoutIncidenciasInput
  }

  export type t_incidenciasCreateOrConnectWithoutDiagnosticoInput = {
    where: t_incidenciasWhereUniqueInput
    create: XOR<t_incidenciasCreateWithoutDiagnosticoInput, t_incidenciasUncheckedCreateWithoutDiagnosticoInput>
  }

  export type t_imagenesCreateWithoutDiagnosticoInput = {
    rutaImagen: string
    tipoImagen: boolean
    incidencia: t_incidenciasCreateNestedOneWithoutImagenesInput
  }

  export type t_imagenesUncheckedCreateWithoutDiagnosticoInput = {
    idImagen?: number
    rutaImagen: string
    tipoImagen: boolean
    idIncidencia: string
  }

  export type t_imagenesCreateOrConnectWithoutDiagnosticoInput = {
    where: t_imagenesWhereUniqueInput
    create: XOR<t_imagenesCreateWithoutDiagnosticoInput, t_imagenesUncheckedCreateWithoutDiagnosticoInput>
  }

  export type t_imagenesCreateManyDiagnosticoInputEnvelope = {
    data: t_imagenesCreateManyDiagnosticoInput | t_imagenesCreateManyDiagnosticoInput[]
    skipDuplicates?: boolean
  }

  export type t_usuariosUpsertWithoutDiagnosticoInput = {
    update: XOR<t_usuariosUpdateWithoutDiagnosticoInput, t_usuariosUncheckedUpdateWithoutDiagnosticoInput>
    create: XOR<t_usuariosCreateWithoutDiagnosticoInput, t_usuariosUncheckedCreateWithoutDiagnosticoInput>
    where?: t_usuariosWhereInput
  }

  export type t_usuariosUpdateToOneWithWhereWithoutDiagnosticoInput = {
    where?: t_usuariosWhereInput
    data: XOR<t_usuariosUpdateWithoutDiagnosticoInput, t_usuariosUncheckedUpdateWithoutDiagnosticoInput>
  }

  export type t_usuariosUpdateWithoutDiagnosticoInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput
    usuario?: t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateWithoutDiagnosticoInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput
    roles?: t_rolesUncheckedUpdateManyWithoutUsuariosNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput
    usuario?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_incidenciasUpsertWithoutDiagnosticoInput = {
    update: XOR<t_incidenciasUpdateWithoutDiagnosticoInput, t_incidenciasUncheckedUpdateWithoutDiagnosticoInput>
    create: XOR<t_incidenciasCreateWithoutDiagnosticoInput, t_incidenciasUncheckedCreateWithoutDiagnosticoInput>
    where?: t_incidenciasWhereInput
  }

  export type t_incidenciasUpdateToOneWithWhereWithoutDiagnosticoInput = {
    where?: t_incidenciasWhereInput
    data: XOR<t_incidenciasUpdateWithoutDiagnosticoInput, t_incidenciasUncheckedUpdateWithoutDiagnosticoInput>
  }

  export type t_incidenciasUpdateWithoutDiagnosticoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutDiagnosticoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_imagenesUpsertWithWhereUniqueWithoutDiagnosticoInput = {
    where: t_imagenesWhereUniqueInput
    update: XOR<t_imagenesUpdateWithoutDiagnosticoInput, t_imagenesUncheckedUpdateWithoutDiagnosticoInput>
    create: XOR<t_imagenesCreateWithoutDiagnosticoInput, t_imagenesUncheckedCreateWithoutDiagnosticoInput>
  }

  export type t_imagenesUpdateWithWhereUniqueWithoutDiagnosticoInput = {
    where: t_imagenesWhereUniqueInput
    data: XOR<t_imagenesUpdateWithoutDiagnosticoInput, t_imagenesUncheckedUpdateWithoutDiagnosticoInput>
  }

  export type t_imagenesUpdateManyWithWhereWithoutDiagnosticoInput = {
    where: t_imagenesScalarWhereInput
    data: XOR<t_imagenesUpdateManyMutationInput, t_imagenesUncheckedUpdateManyWithoutDiagnosticoInput>
  }

  export type t_usuarios_x_rolCreateManyRolesInput = {
    userId: string
  }

  export type t_usuariosUpdateWithoutRolesInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUpdateManyWithoutUsuarioNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateWithoutRolesInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
    incidencias?: t_incidenciasUncheckedUpdateManyWithoutUsuarioNestedInput
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutUsuarioNestedInput
    usuario?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioNestedInput
    t_bitacora_general?: t_bitacora_generalUncheckedUpdateManyWithoutUsuarioNestedInput
  }

  export type t_usuariosUncheckedUpdateManyWithoutRolesInput = {
    cedula?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    apellidoUno?: StringFieldUpdateOperationsInput | string
    apellidoDos?: StringFieldUpdateOperationsInput | string
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    correo?: StringFieldUpdateOperationsInput | string
    puesto?: StringFieldUpdateOperationsInput | string
    departamento?: IntFieldUpdateOperationsInput | number
    estado?: BoolFieldUpdateOperationsInput | boolean
    contrasena?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuarios_x_rolUpdateWithoutRolesInput = {
    usuarios?: t_usuariosUpdateOneRequiredWithoutT_usuarios_x_rolNestedInput
  }

  export type t_usuarios_x_rolUncheckedUpdateWithoutRolesInput = {
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuarios_x_rolUncheckedUpdateManyWithoutRolesInput = {
    userId?: StringFieldUpdateOperationsInput | string
  }

  export type t_bitacora_generalCreateManyPantallaInput = {
    codigoBitacora?: number
    sistema: string
    referencia: string
    idUsuario: string
  }

  export type t_bitacora_generalUpdateWithoutPantallaInput = {
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    Usuario?: t_usuariosUpdateOneRequiredWithoutT_bitacora_generalNestedInput
  }

  export type t_bitacora_generalUncheckedUpdateWithoutPantallaInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type t_bitacora_generalUncheckedUpdateManyWithoutPantallaInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type t_incidenciasCreateManyUsuarioInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
  }

  export type t_usuarios_x_rolCreateManyUsuariosInput = {
    roleId: number
  }

  export type t_diagnosticoCreateManyUsuarioInput = {
    codigoDiagnostico?: number
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idIncidencia: string
  }

  export type t_usuario_x_incidenciaCreateManyUsuarioInput = {
    codigoAsignacion?: number
    idIncidencia: string
    fechaAsignacion: Date | string
  }

  export type t_bitacora_cambio_estadoCreateManyUsuarioInput = {
    codigoBitacora?: number
    idIncidencia: string
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
  }

  export type t_bitacora_generalCreateManyUsuarioInput = {
    codigoBitacora?: number
    sistema: string
    referencia: string
    idPantalla: number
  }

  export type t_incidenciasUpdateWithoutUsuarioInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutUsuarioInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateManyWithoutUsuarioInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
  }

  export type t_rolesUpdateWithoutUsuariosInput = {
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    t_usuarios_x_rol?: t_usuarios_x_rolUpdateManyWithoutRolesNestedInput
  }

  export type t_rolesUncheckedUpdateWithoutUsuariosInput = {
    idRol?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
    t_usuarios_x_rol?: t_usuarios_x_rolUncheckedUpdateManyWithoutRolesNestedInput
  }

  export type t_rolesUncheckedUpdateManyWithoutUsuariosInput = {
    idRol?: IntFieldUpdateOperationsInput | number
    descripcion?: StringFieldUpdateOperationsInput | string
    sistema?: StringFieldUpdateOperationsInput | string
    estado?: BoolFieldUpdateOperationsInput | boolean
  }

  export type t_usuarios_x_rolUpdateWithoutUsuariosInput = {
    roles?: t_rolesUpdateOneRequiredWithoutT_usuarios_x_rolNestedInput
  }

  export type t_usuarios_x_rolUncheckedUpdateWithoutUsuariosInput = {
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type t_usuarios_x_rolUncheckedUpdateManyWithoutUsuariosInput = {
    roleId?: IntFieldUpdateOperationsInput | number
  }

  export type t_diagnosticoUpdateWithoutUsuarioInput = {
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    Incidencia?: t_incidenciasUpdateOneRequiredWithoutDiagnosticoNestedInput
    imagenes?: t_imagenesUpdateManyWithoutDiagnosticoNestedInput
  }

  export type t_diagnosticoUncheckedUpdateWithoutUsuarioInput = {
    codigoDiagnostico?: IntFieldUpdateOperationsInput | number
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    idIncidencia?: StringFieldUpdateOperationsInput | string
    imagenes?: t_imagenesUncheckedUpdateManyWithoutDiagnosticoNestedInput
  }

  export type t_diagnosticoUncheckedUpdateManyWithoutUsuarioInput = {
    codigoDiagnostico?: IntFieldUpdateOperationsInput | number
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    idIncidencia?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuario_x_incidenciaUpdateWithoutUsuarioInput = {
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
    incidencia?: t_incidenciasUpdateOneRequiredWithoutIncidenciaNestedInput
  }

  export type t_usuario_x_incidenciaUncheckedUpdateWithoutUsuarioInput = {
    codigoAsignacion?: IntFieldUpdateOperationsInput | number
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type t_usuario_x_incidenciaUncheckedUpdateManyWithoutUsuarioInput = {
    codigoAsignacion?: IntFieldUpdateOperationsInput | number
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type t_bitacora_cambio_estadoUpdateWithoutUsuarioInput = {
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
    incidencias?: t_incidenciasUpdateOneRequiredWithoutT_bitacora_cambio_estadoNestedInput
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateWithoutUsuarioInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateManyWithoutUsuarioInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    idIncidencia?: StringFieldUpdateOperationsInput | string
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
  }

  export type t_bitacora_generalUpdateWithoutUsuarioInput = {
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    Pantalla?: t_pantallaUpdateOneRequiredWithoutT_bitacora_generalNestedInput
  }

  export type t_bitacora_generalUncheckedUpdateWithoutUsuarioInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    idPantalla?: IntFieldUpdateOperationsInput | number
  }

  export type t_bitacora_generalUncheckedUpdateManyWithoutUsuarioInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    sistema?: StringFieldUpdateOperationsInput | string
    referencia?: StringFieldUpdateOperationsInput | string
    idPantalla?: IntFieldUpdateOperationsInput | number
  }

  export type t_incidenciasCreateManyAfectacionInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
  }

  export type t_incidenciasUpdateWithoutAfectacionInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutAfectacionInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateManyWithoutAfectacionInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
  }

  export type t_incidenciasCreateManyCategoriaInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idPrioridad: number
    idEstado: number
  }

  export type t_incidenciasUpdateWithoutCategoriaInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutCategoriaInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateManyWithoutCategoriaInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
  }

  export type t_incidenciasCreateManyEstadoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idPrioridad: number
  }

  export type t_incidenciasUpdateWithoutEstadoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutEstadoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateManyWithoutEstadoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
  }

  export type t_incidenciasCreateManyRiesgoInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idCategoria: number
    idPrioridad: number
    idEstado: number
  }

  export type t_incidenciasUpdateWithoutRiesgoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Prioridad?: t_prioridadesUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutRiesgoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateManyWithoutRiesgoInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idPrioridad?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
  }

  export type t_incidenciasCreateManyPrioridadInput = {
    codigoIncidencia: string
    nombre: string
    descripcion: string
    justificacionCierre: string
    lugarIncidencia: string
    fechaRegistro: Date | string
    costo: number
    duracionGestion: number
    idUsuario: string
    idAfectacion: number
    idRiesgo: number
    idCategoria: number
    idEstado: number
  }

  export type t_incidenciasUpdateWithoutPrioridadInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    Usuario?: t_usuariosUpdateOneRequiredWithoutIncidenciasNestedInput
    Afectacion?: t_afectacionesUpdateOneRequiredWithoutIncidenciasNestedInput
    Riesgo?: t_riesgosUpdateOneRequiredWithoutIncidenciasNestedInput
    Categoria?: t_categoriasUpdateOneRequiredWithoutIncidenciasNestedInput
    Estado?: t_estadosUpdateOneRequiredWithoutIncidenciasNestedInput
    imagenes?: t_imagenesUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateWithoutPrioridadInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
    imagenes?: t_imagenesUncheckedUpdateManyWithoutIncidenciaNestedInput
    diagnostico?: t_diagnosticoUncheckedUpdateManyWithoutIncidenciaNestedInput
    incidencia?: t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaNestedInput
    t_bitacora_cambio_estado?: t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasNestedInput
  }

  export type t_incidenciasUncheckedUpdateManyWithoutPrioridadInput = {
    codigoIncidencia?: StringFieldUpdateOperationsInput | string
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: StringFieldUpdateOperationsInput | string
    justificacionCierre?: StringFieldUpdateOperationsInput | string
    lugarIncidencia?: StringFieldUpdateOperationsInput | string
    fechaRegistro?: DateTimeFieldUpdateOperationsInput | Date | string
    costo?: FloatFieldUpdateOperationsInput | number
    duracionGestion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    idAfectacion?: IntFieldUpdateOperationsInput | number
    idRiesgo?: IntFieldUpdateOperationsInput | number
    idCategoria?: IntFieldUpdateOperationsInput | number
    idEstado?: IntFieldUpdateOperationsInput | number
  }

  export type t_imagenesCreateManyIncidenciaInput = {
    idImagen?: number
    rutaImagen: string
    tipoImagen: boolean
    idDiagnostico?: number | null
  }

  export type t_diagnosticoCreateManyIncidenciaInput = {
    codigoDiagnostico?: number
    fechaDiagnostico: Date | string
    diagnostico: string
    tiempoEstimado: number
    observacion: string
    compra: boolean
    idUsuario: string
  }

  export type t_usuario_x_incidenciaCreateManyIncidenciaInput = {
    codigoAsignacion?: number
    idUsuario: string
    fechaAsignacion: Date | string
  }

  export type t_bitacora_cambio_estadoCreateManyIncidenciasInput = {
    codigoBitacora?: number
    fechaCambio: Date | string
    idEstadoActual: number
    idEstadoAnterior: number
    idUsuario: string
  }

  export type t_imagenesUpdateWithoutIncidenciaInput = {
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    diagnostico?: t_diagnosticoUpdateOneWithoutImagenesNestedInput
  }

  export type t_imagenesUncheckedUpdateWithoutIncidenciaInput = {
    idImagen?: IntFieldUpdateOperationsInput | number
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    idDiagnostico?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type t_imagenesUncheckedUpdateManyWithoutIncidenciaInput = {
    idImagen?: IntFieldUpdateOperationsInput | number
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    idDiagnostico?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type t_diagnosticoUpdateWithoutIncidenciaInput = {
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    Usuario?: t_usuariosUpdateOneRequiredWithoutDiagnosticoNestedInput
    imagenes?: t_imagenesUpdateManyWithoutDiagnosticoNestedInput
  }

  export type t_diagnosticoUncheckedUpdateWithoutIncidenciaInput = {
    codigoDiagnostico?: IntFieldUpdateOperationsInput | number
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: StringFieldUpdateOperationsInput | string
    imagenes?: t_imagenesUncheckedUpdateManyWithoutDiagnosticoNestedInput
  }

  export type t_diagnosticoUncheckedUpdateManyWithoutIncidenciaInput = {
    codigoDiagnostico?: IntFieldUpdateOperationsInput | number
    fechaDiagnostico?: DateTimeFieldUpdateOperationsInput | Date | string
    diagnostico?: StringFieldUpdateOperationsInput | string
    tiempoEstimado?: IntFieldUpdateOperationsInput | number
    observacion?: StringFieldUpdateOperationsInput | string
    compra?: BoolFieldUpdateOperationsInput | boolean
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type t_usuario_x_incidenciaUpdateWithoutIncidenciaInput = {
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
    usuario?: t_usuariosUpdateOneRequiredWithoutUsuarioNestedInput
  }

  export type t_usuario_x_incidenciaUncheckedUpdateWithoutIncidenciaInput = {
    codigoAsignacion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type t_usuario_x_incidenciaUncheckedUpdateManyWithoutIncidenciaInput = {
    codigoAsignacion?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
    fechaAsignacion?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type t_bitacora_cambio_estadoUpdateWithoutIncidenciasInput = {
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
    usuario?: t_usuariosUpdateOneRequiredWithoutT_bitacora_cambio_estadoNestedInput
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateWithoutIncidenciasInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type t_bitacora_cambio_estadoUncheckedUpdateManyWithoutIncidenciasInput = {
    codigoBitacora?: IntFieldUpdateOperationsInput | number
    fechaCambio?: DateTimeFieldUpdateOperationsInput | Date | string
    idEstadoActual?: IntFieldUpdateOperationsInput | number
    idEstadoAnterior?: IntFieldUpdateOperationsInput | number
    idUsuario?: StringFieldUpdateOperationsInput | string
  }

  export type t_imagenesCreateManyDiagnosticoInput = {
    idImagen?: number
    rutaImagen: string
    tipoImagen: boolean
    idIncidencia: string
  }

  export type t_imagenesUpdateWithoutDiagnosticoInput = {
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    incidencia?: t_incidenciasUpdateOneRequiredWithoutImagenesNestedInput
  }

  export type t_imagenesUncheckedUpdateWithoutDiagnosticoInput = {
    idImagen?: IntFieldUpdateOperationsInput | number
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    idIncidencia?: StringFieldUpdateOperationsInput | string
  }

  export type t_imagenesUncheckedUpdateManyWithoutDiagnosticoInput = {
    idImagen?: IntFieldUpdateOperationsInput | number
    rutaImagen?: StringFieldUpdateOperationsInput | string
    tipoImagen?: BoolFieldUpdateOperationsInput | boolean
    idIncidencia?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use T_rolesCountOutputTypeDefaultArgs instead
     */
    export type T_rolesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_rolesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_pantallaCountOutputTypeDefaultArgs instead
     */
    export type T_pantallaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_pantallaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_usuariosCountOutputTypeDefaultArgs instead
     */
    export type T_usuariosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_usuariosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_afectacionesCountOutputTypeDefaultArgs instead
     */
    export type T_afectacionesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_afectacionesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_categoriasCountOutputTypeDefaultArgs instead
     */
    export type T_categoriasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_categoriasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_estadosCountOutputTypeDefaultArgs instead
     */
    export type T_estadosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_estadosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_riesgosCountOutputTypeDefaultArgs instead
     */
    export type T_riesgosCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_riesgosCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_prioridadesCountOutputTypeDefaultArgs instead
     */
    export type T_prioridadesCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_prioridadesCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_incidenciasCountOutputTypeDefaultArgs instead
     */
    export type T_incidenciasCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_incidenciasCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_diagnosticoCountOutputTypeDefaultArgs instead
     */
    export type T_diagnosticoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_diagnosticoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_imagenesDefaultArgs instead
     */
    export type t_imagenesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_imagenesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_rolesDefaultArgs instead
     */
    export type t_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_rolesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_bitacora_generalDefaultArgs instead
     */
    export type t_bitacora_generalArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_bitacora_generalDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_pantallaDefaultArgs instead
     */
    export type t_pantallaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_pantallaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_usuariosDefaultArgs instead
     */
    export type t_usuariosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_usuariosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_usuario_x_incidenciaDefaultArgs instead
     */
    export type t_usuario_x_incidenciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_usuario_x_incidenciaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use T_PantallasDefaultArgs instead
     */
    export type T_PantallasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = T_PantallasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_bitacora_cambio_estadoDefaultArgs instead
     */
    export type t_bitacora_cambio_estadoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_bitacora_cambio_estadoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_usuarios_x_rolDefaultArgs instead
     */
    export type t_usuarios_x_rolArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_usuarios_x_rolDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_afectacionesDefaultArgs instead
     */
    export type t_afectacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_afectacionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_categoriasDefaultArgs instead
     */
    export type t_categoriasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_categoriasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_estadosDefaultArgs instead
     */
    export type t_estadosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_estadosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_riesgosDefaultArgs instead
     */
    export type t_riesgosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_riesgosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_prioridadesDefaultArgs instead
     */
    export type t_prioridadesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_prioridadesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_incidenciasDefaultArgs instead
     */
    export type t_incidenciasArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_incidenciasDefaultArgs<ExtArgs>
    /**
     * @deprecated Use t_diagnosticoDefaultArgs instead
     */
    export type t_diagnosticoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = t_diagnosticoDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}